<?php
/**
 * Scratchpad to quickly try PHP code
 *
 * See https://github.com/port8000/pad
 * Copyright 2012 Port 8000 UG (haftungsbeschraenkt)
 * This code is licensed under both the MIT and GPL license.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 */

/* list of all defined functions (PHP5.5) */

$functions = array(
  'abs' => '<span class="type">number</span> <span class="methodname">abs</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$number</code></span> )',
  'acosh' => '<span class="type">float</span> <span class="methodname">acosh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'acos' => '<span class="type">float</span> <span class="methodname">acos</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'addcslashes' => '<span class="type">string</span> <span class="methodname">addcslashes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$charlist</code></span> )',
  'addslashes' => '<span class="type">string</span> <span class="methodname">addslashes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'aggregate' => '<span class="type">void</span> <span class="methodname">aggregate</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> )',
  'aggregate_info' => '<span class="type">array</span> <span class="methodname">aggregate_info</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> )',
  'aggregate_methods_by_list' => '<span class="type">void</span> <span class="methodname">aggregate_methods_by_list</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$methods_list</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$exclude</code><span class="initializer">= false</span></span> ] )',
  'aggregate_methods_by_regexp' => '<span class="type">void</span> <span class="methodname">aggregate_methods_by_regexp</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$regexp</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$exclude</code><span class="initializer">= false</span></span> ] )',
  'aggregate_methods' => '<span class="type">void</span> <span class="methodname">aggregate_methods</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> )',
  'aggregate_properties_by_list' => '<span class="type">void</span> <span class="methodname">aggregate_properties_by_list</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$properties_list</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$exclude</code><span class="initializer">= false</span></span> ] )',
  'aggregate_properties_by_regexp' => '<span class="type">void</span> <span class="methodname">aggregate_properties_by_regexp</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$regexp</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$exclude</code><span class="initializer">= false</span></span> ] )',
  'aggregate_properties' => '<span class="type">void</span> <span class="methodname">aggregate_properties</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> )',
  'aggregation_info' => '',
  'apache_child_terminate' => '<span class="type">bool</span> <span class="methodname">apache_child_terminate</span> ( <span class="methodparam">void</span> )',
  'apache_getenv' => '<span class="type">string</span> <span class="methodname">apache_getenv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$walk_to_top</code><span class="initializer">= false</span></span> ] )',
  'apache_get_modules' => '<span class="type">array</span> <span class="methodname">apache_get_modules</span> ( <span class="methodparam">void</span> )',
  'apache_get_version' => '<span class="type">string</span> <span class="methodname">apache_get_version</span> ( <span class="methodparam">void</span> )',
  'apache_lookup_uri' => '<span class="type">object</span> <span class="methodname">apache_lookup_uri</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'apache_note' => '<span class="type">string</span> <span class="methodname">apache_note</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$note_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$note_value</code><span class="initializer">= &quot;&quot;</span></span> ] )',
  'apache_request_headers' => '<span class="type">array</span> <span class="methodname">apache_request_headers</span> ( <span class="methodparam">void</span> )',
  'apache_reset_timeout' => '<span class="type">bool</span> <span class="methodname">apache_reset_timeout</span> ( <span class="methodparam">void</span> )',
  'apache_response_headers' => '<span class="type">array</span> <span class="methodname">apache_response_headers</span> ( <span class="methodparam">void</span> )',
  'apache_setenv' => '<span class="type">bool</span> <span class="methodname">apache_setenv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$walk_to_top</code><span class="initializer">= false</span></span> ] )',
  'apc_add' => '<span class="type">bool</span> <span class="methodname">apc_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ] ) <span class="type">array</span> <span class="methodname">apc_add</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$unused</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ]] )',
  'apc_bin_dumpfile' => '<span class="type">int</span> <span class="methodname">apc_bin_dumpfile</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$user_vars</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= NULL</span></span> ]] )',
  'apc_bin_dump' => '<span class="type">string</span> <span class="methodname">apc_bin_dump</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$user_vars</code><span class="initializer">= NULL</span></span> ]] )',
  'apc_bin_loadfile' => '<span class="type">bool</span> <span class="methodname">apc_bin_loadfile</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ]] )',
  'apc_bin_load' => '<span class="type">bool</span> <span class="methodname">apc_bin_load</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'apc_cache_info' => '<span class="type">array</span> <span class="methodname">apc_cache_info</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache_type</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$limited</code><span class="initializer">= false</span></span> ]] )',
  'apc_cas' => '<span class="type">bool</span> <span class="methodname">apc_cas</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$old</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new</code></span> )',
  'apc_clear_cache' => '<span class="type">bool</span> <span class="methodname">apc_clear_cache</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache_type</code><span class="initializer">= &quot;&quot;</span></span> ] )',
  'apc_compile_file' => '<span class="type">mixed</span> <span class="methodname">apc_compile_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$atomic</code><span class="initializer">= true</span></span> ] )',
  'apc_dec' => '<span class="type">int</span> <span class="methodname">apc_dec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$step</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ]] )',
  'apc_define_constants' => '<span class="type">bool</span> <span class="methodname">apc_define_constants</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$constants</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_sensitive</code><span class="initializer">= true</span></span> ] )',
  'apc_delete_file' => '<span class="type">mixed</span> <span class="methodname">apc_delete_file</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$keys</code></span> )',
  'apc_delete' => '<span class="type">mixed</span> <span class="methodname">apc_delete</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'apc_exists' => '<span class="type">mixed</span> <span class="methodname">apc_exists</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$keys</code></span> )',
  'apc_fetch' => '<span class="type">mixed</span> <span class="methodname">apc_fetch</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ] )',
  'apc_inc' => '<span class="type">int</span> <span class="methodname">apc_inc</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$step</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ]] )',
  'apc_load_constants' => '<span class="type">bool</span> <span class="methodname">apc_load_constants</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_sensitive</code><span class="initializer">= true</span></span> ] )',
  'apc_sma_info' => '<span class="type">array</span> <span class="methodname">apc_sma_info</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$limited</code><span class="initializer">= false</span></span> ] )',
  'apc_store' => '<span class="type">bool</span> <span class="methodname">apc_store</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ] ) <span class="type">array</span> <span class="methodname">apc_store</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$unused</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ]] )',
  'apd_breakpoint' => '<span class="type">bool</span> <span class="methodname">apd_breakpoint</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$debug_level</code></span> )',
  'apd_callstack' => '<span class="type">array</span> <span class="methodname">apd_callstack</span> ( <span class="methodparam">void</span> )',
  'apd_clunk' => '<span class="type">void</span> <span class="methodname">apd_clunk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$warning</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= &quot;&lt;BR /&gt;&quot;</span></span> ] )',
  'apd_continue' => '<span class="type">bool</span> <span class="methodname">apd_continue</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$debug_level</code></span> )',
  'apd_croak' => '<span class="type">void</span> <span class="methodname">apd_croak</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$warning</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= &quot;&lt;BR /&gt;&quot;</span></span> ] )',
  'apd_dump_function_table' => '<span class="type">void</span> <span class="methodname">apd_dump_function_table</span> ( <span class="methodparam">void</span> )',
  'apd_dump_persistent_resources' => '<span class="type">array</span> <span class="methodname">apd_dump_persistent_resources</span> ( <span class="methodparam">void</span> )',
  'apd_dump_regular_resources' => '<span class="type">array</span> <span class="methodname">apd_dump_regular_resources</span> ( <span class="methodparam">void</span> )',
  'apd_echo' => '<span class="type">bool</span> <span class="methodname">apd_echo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$output</code></span> )',
  'apd_get_active_symbols' => '<span class="type">array</span> <span class="methodname">apd_get_active_symbols</span> ( <span class="methodparam">void</span> )',
  'apd_set_pprof_trace' => '<span class="type">string</span> <span class="methodname">apd_set_pprof_trace</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$dump_directory</code><span class="initializer">= ini_get(&quot;apd.dumpdir&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$fragment</code><span class="initializer">= &quot;pprof&quot;</span></span> ]] )',
  'apd_set_session' => '<span class="type">void</span> <span class="methodname">apd_set_session</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$debug_level</code></span> )',
  'apd_set_session_trace' => '<span class="type">void</span> <span class="methodname">apd_set_session_trace</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$debug_level</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dump_directory</code><span class="initializer">= ini_get(&quot;apd.dumpdir&quot;)</span></span> ] )',
  'apd_set_session_trace_socket' => '<span class="type">bool</span> <span class="methodname">apd_set_session_trace_socket</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$tcp_server</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$socket_type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$debug_level</code></span> )',
  'array_change_key_case' => '<span class="type">array</span> <span class="methodname">array_change_key_case</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$case</code><span class="initializer">= CASE_LOWER</span></span> ] )',
  'array_chunk' => '<span class="type">array</span> <span class="methodname">array_chunk</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$preserve_keys</code><span class="initializer">= false</span></span> ] )',
  'array_column' => '<span class="type">array</span> <span class="methodname">array_column</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column_key</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$index_key</code><span class="initializer">= null</span></span> ] )',
  'array_combine' => '<span class="type">array</span> <span class="methodname">array_combine</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$keys</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> )',
  'array_count_values' => '<span class="type">array</span> <span class="methodname">array_count_values</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array_diff_assoc' => '<span class="type">array</span> <span class="methodname">array_diff_assoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_diff' => '<span class="type">array</span> <span class="methodname">array_diff</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_diff_key' => '<span class="type">array</span> <span class="methodname">array_diff_key</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_diff_uassoc' => '<span class="type">array</span> <span class="methodname">array_diff_uassoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_diff_ukey' => '<span class="type">array</span> <span class="methodname">array_diff_ukey</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_fill' => '<span class="type">array</span> <span class="methodname">array_fill</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$start_index</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'array_fill_keys' => '<span class="type">array</span> <span class="methodname">array_fill_keys</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$keys</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'array_filter' => '<span class="type">array</span> <span class="methodname">array_filter</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> ] )',
  'array_flip' => '<span class="type">array</span> <span class="methodname">array_flip</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array' => '<span class="type">array</span> <span class="methodname">array</span> ([ <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'array_intersect_assoc' => '<span class="type">array</span> <span class="methodname">array_intersect_assoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_intersect' => '<span class="type">array</span> <span class="methodname">array_intersect</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_intersect_key' => '<span class="type">array</span> <span class="methodname">array_intersect_key</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_intersect_uassoc' => '<span class="type">array</span> <span class="methodname">array_intersect_uassoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_intersect_ukey' => '<span class="type">array</span> <span class="methodname">array_intersect_ukey</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_key_exists' => '<span class="type">bool</span> <span class="methodname">array_key_exists</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array_keys' => '<span class="type">array</span> <span class="methodname">array_keys</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$search_value</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer">= false</span></span> ]] )',
  'array_map' => '<span class="type">array</span> <span class="methodname">array_map</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_merge' => '<span class="type">array</span> <span class="methodname">array_merge</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_merge_recursive' => '<span class="type">array</span> <span class="methodname">array_merge_recursive</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_multisort' => '<span class="type">bool</span> <span class="methodname">array_multisort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$array1_sort_order</code><span class="initializer">= SORT_ASC</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$array1_sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]]] )',
  'array_pad' => '<span class="type">array</span> <span class="methodname">array_pad</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'array_pop' => '<span class="type">mixed</span> <span class="methodname">array_pop</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'array_product' => '<span class="type">number</span> <span class="methodname">array_product</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array_push' => '<span class="type">int</span> <span class="methodname">array_push</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'array_rand' => '<span class="type">mixed</span> <span class="methodname">array_rand</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code><span class="initializer">= 1</span></span> ] )',
  'array_reduce' => '<span class="type">mixed</span> <span class="methodname">array_reduce</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$initial</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] ) <span class="type">mixed</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$result</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$item</code></span> )',
  'array_replace' => '<span class="type">array</span> <span class="methodname">array_replace</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_replace_recursive' => '<span class="type">array</span> <span class="methodname">array_replace_recursive</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ] )',
  'array_reverse' => '<span class="type">array</span> <span class="methodname">array_reverse</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$preserve_keys</code><span class="initializer">= false</span></span> ] )',
  'array_search' => '<span class="type">mixed</span> <span class="methodname">array_search</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$haystack</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer">= false</span></span> ] )',
  'array_shift' => '<span class="type">mixed</span> <span class="methodname">array_shift</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'array_slice' => '<span class="type">array</span> <span class="methodname">array_slice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$preserve_keys</code><span class="initializer">= false</span></span> ]] )',
  'array_splice' => '<span class="type">array</span> <span class="methodname">array_splice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$input</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replacement</code><span class="initializer">= array()</span></span> ]] )',
  'array_sum' => '<span class="type">number</span> <span class="methodname">array_sum</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array_udiff_assoc' => '<span class="type">array</span> <span class="methodname">array_udiff_assoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_udiff' => '<span class="type">array</span> <span class="methodname">array_udiff</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_udiff_uassoc' => '<span class="type">array</span> <span class="methodname">array_udiff_uassoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_uintersect_assoc' => '<span class="type">array</span> <span class="methodname">array_uintersect_assoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_uintersect' => '<span class="type">array</span> <span class="methodname">array_uintersect</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_uintersect_uassoc' => '<span class="type">array</span> <span class="methodname">array_uintersect_uassoc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$array2</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$...</code></span> ], <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'array_unique' => '<span class="type">array</span> <span class="methodname">array_unique</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_STRING</span></span> ] )',
  'array_unshift' => '<span class="type">int</span> <span class="methodname">array_unshift</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'array_values' => '<span class="type">array</span> <span class="methodname">array_values</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$array</code></span> )',
  'array_walk' => '<span class="type">bool</span> <span class="methodname">array_walk</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$userdata</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'array_walk_recursive' => '<span class="type">bool</span> <span class="methodname">array_walk_recursive</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$userdata</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'arsort' => '<span class="type">bool</span> <span class="methodname">arsort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'asinh' => '<span class="type">float</span> <span class="methodname">asinh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'asin' => '<span class="type">float</span> <span class="methodname">asin</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'asort' => '<span class="type">bool</span> <span class="methodname">asort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'assert' => '<span class="type">bool</span> <span class="methodname">assert</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$assertion</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$description</code></span> ] )',
  'assert_options' => '<span class="type">mixed</span> <span class="methodname">assert_options</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$what</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> ] )',
  'atan2' => '<span class="type">float</span> <span class="methodname">atan2</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> )',
  'atanh' => '<span class="type">float</span> <span class="methodname">atanh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'atan' => '<span class="type">float</span> <span class="methodname">atan</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'autoload' => '<span class="type">void</span> <span class="methodname">__autoload</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class</code></span> )',
  'base64_decode' => '<span class="type">string</span> <span class="methodname">base64_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer">= false</span></span> ] )',
  'base64_encode' => '<span class="type">string</span> <span class="methodname">base64_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'base_convert' => '<span class="type">string</span> <span class="methodname">base_convert</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$number</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$frombase</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tobase</code></span> )',
  'basename' => '<span class="type">string</span> <span class="methodname">basename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$suffix</code></span> ] )',
  'bbcode_add_element' => '<span class="type">bool</span> <span class="methodname">bbcode_add_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tag_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tag_rules</code></span> )',
  'bbcode_add_smiley' => '<span class="type">bool</span> <span class="methodname">bbcode_add_smiley</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$smiley</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replace_by</code></span> )',
  'bbcode_create' => '<span class="type">resource</span> <span class="methodname">bbcode_create</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$bbcode_initial_tags</code><span class="initializer">= NULL</span></span> ] )',
  'bbcode_destroy' => '<span class="type">bool</span> <span class="methodname">bbcode_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> )',
  'bbcode_parse' => '<span class="type">string</span> <span class="methodname">bbcode_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_parse</code></span> )',
  'bbcode_set_arg_parser' => '<span class="type">bool</span> <span class="methodname">bbcode_set_arg_parser</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_arg_parser</code></span> )',
  'bbcode_set_flags' => '<span class="type">bool</span> <span class="methodname">bbcode_set_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bbcode_container</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= BBCODE_SET_FLAGS_SET</span></span> ] )',
  'bcadd' => '<span class="type">string</span> <span class="methodname">bcadd</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bccomp' => '<span class="type">int</span> <span class="methodname">bccomp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcdiv' => '<span class="type">string</span> <span class="methodname">bcdiv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcmod' => '<span class="type">string</span> <span class="methodname">bcmod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$modulus</code></span> )',
  'bcmul' => '<span class="type">string</span> <span class="methodname">bcmul</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcompiler_load_exe' => '<span class="type">bool</span> <span class="methodname">bcompiler_load_exe</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'bcompiler_load' => '<span class="type">bool</span> <span class="methodname">bcompiler_load</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'bcompiler_parse_class' => '<span class="type">bool</span> <span class="methodname">bcompiler_parse_class</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$callback</code></span> )',
  'bcompiler_read' => '<span class="type">bool</span> <span class="methodname">bcompiler_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> )',
  'bcompiler_write_class' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_class</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$className</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$extends</code></span> ] )',
  'bcompiler_write_constant' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_constant</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$constantName</code></span> )',
  'bcompiler_write_exe_footer' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_exe_footer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$startpos</code></span> )',
  'bcompiler_write_file' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'bcompiler_write_footer' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_footer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> )',
  'bcompiler_write_function' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$functionName</code></span> )',
  'bcompiler_write_functions_from_file' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_functions_from_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fileName</code></span> )',
  'bcompiler_write_header' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_header</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$write_ver</code></span> ] )',
  'bcompiler_write_included_filename' => '<span class="type">bool</span> <span class="methodname">bcompiler_write_included_filename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$filehandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'bcpow' => '<span class="type">string</span> <span class="methodname">bcpow</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcpowmod' => '<span class="type">string</span> <span class="methodname">bcpowmod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$modulus</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcscale' => '<span class="type">bool</span> <span class="methodname">bcscale</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> )',
  'bcsqrt' => '<span class="type">string</span> <span class="methodname">bcsqrt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bcsub' => '<span class="type">string</span> <span class="methodname">bcsub</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$left_operand</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$right_operand</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code></span> ] )',
  'bin2hex' => '<span class="type">string</span> <span class="methodname">bin2hex</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'bindec' => '<span class="type">number</span> <span class="methodname">bindec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$binary_string</code></span> )',
  'bind_textdomain_codeset' => '<span class="type">string</span> <span class="methodname">bind_textdomain_codeset</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$codeset</code></span> )',
  'bindtextdomain' => '<span class="type">string</span> <span class="methodname">bindtextdomain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'blenc_encrypt' => '<span class="type">string</span> <span class="methodname">blenc_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$plaintext</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encodedfile</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encryption_key</code></span> ] )',
  'boolval' => '<span class="type">boolean</span> <span class="methodname">boolval</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'bson_decode' => '<span class="type">array</span> <span class="methodname">bson_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$bson</code></span> )',
  'bson_encode' => '<span class="type">string</span> <span class="methodname">bson_encode</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$anything</code></span> )',
  'bzclose' => '<span class="type">int</span> <span class="methodname">bzclose</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> )',
  'bzcompress' => '<span class="type">mixed</span> <span class="methodname">bzcompress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$blocksize</code><span class="initializer">= 4</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$workfactor</code><span class="initializer">= 0</span></span> ]] )',
  'bzdecompress' => '<span class="type">mixed</span> <span class="methodname">bzdecompress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$small</code><span class="initializer">= 0</span></span> ] )',
  'bzerrno' => '<span class="type">int</span> <span class="methodname">bzerrno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> )',
  'bzerror' => '<span class="type">array</span> <span class="methodname">bzerror</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> )',
  'bzerrstr' => '<span class="type">string</span> <span class="methodname">bzerrstr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> )',
  'bzflush' => '<span class="type">int</span> <span class="methodname">bzflush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> )',
  'bzopen' => '<span class="type">resource</span> <span class="methodname">bzopen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'bzread' => '<span class="type">string</span> <span class="methodname">bzread</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 1024</span></span> ] )',
  'bzwrite' => '<span class="type">int</span> <span class="methodname">bzwrite</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bz</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'cairo_create' => '<span class="type">CairoContext</span> <span class="methodname">cairo_create</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_font_face_get_type' => '<span class="type">int</span> <span class="methodname">cairo_font_face_get_type</span> ( <span class="methodparam"><span class="type">CairoFontFace</span> <code class="parameter">$fontface</code></span> )',
  'cairo_font_face_status' => '<span class="type">int</span> <span class="methodname">cairo_font_face_status</span> ( <span class="methodparam"><span class="type">CairoFontFace</span> <code class="parameter">$fontface</code></span> )',
  'cairo_font_options_create' => '<span class="type">CairoFontOptions</span> <span class="methodname">cairo_font_options_create</span> ( <span class="methodparam">void</span> )',
  'cairo_font_options_equal' => '<span class="type">bool</span> <span class="methodname">cairo_font_options_equal</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$other</code></span> )',
  'cairo_font_options_get_antialias' => '<span class="type">int</span> <span class="methodname">cairo_font_options_get_antialias</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_font_options_get_hint_metrics' => '<span class="type">int</span> <span class="methodname">cairo_font_options_get_hint_metrics</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_font_options_get_hint_style' => '<span class="type">int</span> <span class="methodname">cairo_font_options_get_hint_style</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_font_options_get_subpixel_order' => '<span class="type">int</span> <span class="methodname">cairo_font_options_get_subpixel_order</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_font_options_hash' => '<span class="type">int</span> <span class="methodname">cairo_font_options_hash</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_font_options_merge' => '<span class="type">void</span> <span class="methodname">cairo_font_options_merge</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$other</code></span> )',
  'cairo_font_options_set_antialias' => '<span class="type">void</span> <span class="methodname">cairo_font_options_set_antialias</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$antialias</code></span> )',
  'cairo_font_options_set_hint_metrics' => '<span class="type">void</span> <span class="methodname">cairo_font_options_set_hint_metrics</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$hint_metrics</code></span> )',
  'cairo_font_options_set_hint_style' => '<span class="type">void</span> <span class="methodname">cairo_font_options_set_hint_style</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$hint_style</code></span> )',
  'cairo_font_options_set_subpixel_order' => '<span class="type">void</span> <span class="methodname">cairo_font_options_set_subpixel_order</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$subpixel_order</code></span> )',
  'cairo_font_options_status' => '<span class="type">int</span> <span class="methodname">cairo_font_options_status</span> ( <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$options</code></span> )',
  'cairo_format_stride_for_width' => '<span class="type">int</span> <span class="methodname">cairo_format_stride_for_width</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> )',
  'cairo_image_surface_create_for_data' => '<span class="type">CairoImageSurface</span> <span class="methodname">cairo_image_surface_create_for_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$stride</code><span class="initializer">= -1</span></span> ] )',
  'cairo_image_surface_create_from_png' => '<span class="type">CairoImageSurface</span> <span class="methodname">cairo_image_surface_create_from_png</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'cairo_image_surface_create' => '<span class="type">CairoImageSurface</span> <span class="methodname">cairo_image_surface_create</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'cairo_image_surface_get_data' => '<span class="type">string</span> <span class="methodname">cairo_image_surface_get_data</span> ( <span class="methodparam"><span class="type">CairoImageSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_image_surface_get_format' => '<span class="type">int</span> <span class="methodname">cairo_image_surface_get_format</span> ( <span class="methodparam"><span class="type">CairoImageSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_image_surface_get_height' => '<span class="type">int</span> <span class="methodname">cairo_image_surface_get_height</span> ( <span class="methodparam"><span class="type">CairoImageSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_image_surface_get_stride' => '<span class="type">int</span> <span class="methodname">cairo_image_surface_get_stride</span> ( <span class="methodparam"><span class="type">CairoImageSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_image_surface_get_width' => '<span class="type">int</span> <span class="methodname">cairo_image_surface_get_width</span> ( <span class="methodparam"><span class="type">CairoImageSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_matrix_create_scale' => '',
  'cairo_matrix_create_translate' => '',
  'cairo_matrix_invert' => '<span class="type">void</span> <span class="methodname">cairo_matrix_invert</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> )',
  'cairo_matrix_multiply' => '<span class="type">CairoMatrix</span> <span class="methodname">cairo_matrix_multiply</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix1</code></span> , <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix2</code></span> )',
  'cairo_matrix_rotate' => '<span class="type">void</span> <span class="methodname">cairo_matrix_rotate</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$radians</code></span> )',
  'cairo_matrix_transform_distance' => '<span class="type">array</span> <span class="methodname">cairo_matrix_transform_distance</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dy</code></span> )',
  'cairo_matrix_transform_point' => '<span class="type">array</span> <span class="methodname">cairo_matrix_transform_point</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dy</code></span> )',
  'cairo_matrix_translate' => '<span class="type">void</span> <span class="methodname">cairo_matrix_translate</span> ( <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$tx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ty</code></span> )',
  'cairo_pattern_add_color_stop_rgba' => '<span class="type">void</span> <span class="methodname">cairo_pattern_add_color_stop_rgba</span> ( <span class="methodparam"><span class="type">CairoGradientPattern</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> )',
  'cairo_pattern_add_color_stop_rgb' => '<span class="type">void</span> <span class="methodname">cairo_pattern_add_color_stop_rgb</span> ( <span class="methodparam"><span class="type">CairoGradientPattern</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'cairo_pattern_create_for_surface' => '<span class="type">CairoPattern</span> <span class="methodname">cairo_pattern_create_for_surface</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_pattern_create_linear' => '<span class="type">CairoPattern</span> <span class="methodname">cairo_pattern_create_linear</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> )',
  'cairo_pattern_create_radial' => '<span class="type">CairoPattern</span> <span class="methodname">cairo_pattern_create_radial</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r1</code></span> )',
  'cairo_pattern_create_rgba' => '<span class="type">CairoPattern</span> <span class="methodname">cairo_pattern_create_rgba</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> )',
  'cairo_pattern_create_rgb' => '<span class="type">CairoPattern</span> <span class="methodname">cairo_pattern_create_rgb</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'cairo_pattern_get_color_stop_count' => '<span class="type">int</span> <span class="methodname">cairo_pattern_get_color_stop_count</span> ( <span class="methodparam"><span class="type">CairoGradientPattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_color_stop_rgba' => '<span class="type">array</span> <span class="methodname">cairo_pattern_get_color_stop_rgba</span> ( <span class="methodparam"><span class="type">CairoGradientPattern</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'cairo_pattern_get_extend' => '<span class="type">int</span> <span class="methodname">cairo_pattern_get_extend</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_filter' => '<span class="type">int</span> <span class="methodname">cairo_pattern_get_filter</span> ( <span class="methodparam"><span class="type">CairoSurfacePattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_linear_points' => '<span class="type">array</span> <span class="methodname">cairo_pattern_get_linear_points</span> ( <span class="methodparam"><span class="type">CairoLinearGradient</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_matrix' => '<span class="type">CairoMatrix</span> <span class="methodname">cairo_pattern_get_matrix</span> ( <span class="methodparam"><span class="type">CairoPattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_radial_circles' => '<span class="type">array</span> <span class="methodname">cairo_pattern_get_radial_circles</span> ( <span class="methodparam"><span class="type">CairoRadialGradient</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_rgba' => '<span class="type">array</span> <span class="methodname">cairo_pattern_get_rgba</span> ( <span class="methodparam"><span class="type">CairoSolidPattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_surface' => '<span class="type">CairoSurface</span> <span class="methodname">cairo_pattern_get_surface</span> ( <span class="methodparam"><span class="type">CairoSurfacePattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_get_type' => '<span class="type">int</span> <span class="methodname">cairo_pattern_get_type</span> ( <span class="methodparam"><span class="type">CairoPattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pattern_set_extend' => '<span class="type">void</span> <span class="methodname">cairo_pattern_set_extend</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$extend</code></span> )',
  'cairo_pattern_set_filter' => '<span class="type">void</span> <span class="methodname">cairo_pattern_set_filter</span> ( <span class="methodparam"><span class="type">CairoSurfacePattern</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$filter</code></span> )',
  'cairo_pattern_set_matrix' => '<span class="type">void</span> <span class="methodname">cairo_pattern_set_matrix</span> ( <span class="methodparam"><span class="type">CairoPattern</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> )',
  'cairo_pattern_status' => '<span class="type">int</span> <span class="methodname">cairo_pattern_status</span> ( <span class="methodparam"><span class="type">CairoPattern</span> <code class="parameter">$pattern</code></span> )',
  'cairo_pdf_surface_create' => '<span class="type">CairoPdfSurface</span> <span class="methodname">cairo_pdf_surface_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_pdf_surface_set_size' => '<span class="type">void</span> <span class="methodname">cairo_pdf_surface_set_size</span> ( <span class="methodparam"><span class="type">CairoPdfSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_ps_get_levels' => '<span class="type">array</span> <span class="methodname">cairo_ps_get_levels</span> ( <span class="methodparam">void</span> )',
  'cairo_ps_level_to_string' => '<span class="type">string</span> <span class="methodname">cairo_ps_level_to_string</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> )',
  'cairo_ps_surface_create' => '<span class="type">CairoPsSurface</span> <span class="methodname">cairo_ps_surface_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_ps_surface_dsc_begin_page_setup' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_dsc_begin_page_setup</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_ps_surface_dsc_begin_setup' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_dsc_begin_setup</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_ps_surface_dsc_comment' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_dsc_comment</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$comment</code></span> )',
  'cairo_ps_surface_get_eps' => '<span class="type">bool</span> <span class="methodname">cairo_ps_surface_get_eps</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_ps_surface_restrict_to_level' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_restrict_to_level</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> )',
  'cairo_ps_surface_set_eps' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_set_eps</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$level</code></span> )',
  'cairo_ps_surface_set_size' => '<span class="type">void</span> <span class="methodname">cairo_ps_surface_set_size</span> ( <span class="methodparam"><span class="type">CairoPsSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_scaled_font_create' => '<span class="type">CairoScaledFont</span> <span class="methodname">cairo_scaled_font_create</span> ( <span class="methodparam"><span class="type">CairoFontFace</span> <code class="parameter">$fontface</code></span> , <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">CairoMatrix</span> <code class="parameter">$ctm</code></span> , <span class="methodparam"><span class="type">CairoFontOptions</span> <code class="parameter">$fontoptions</code></span> )',
  'cairo_scaled_font_extents' => '<span class="type">array</span> <span class="methodname">cairo_scaled_font_extents</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_ctm' => '<span class="type">CairoMatrix</span> <span class="methodname">cairo_scaled_font_get_ctm</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_font_face' => '<span class="type">CairoFontFace</span> <span class="methodname">cairo_scaled_font_get_font_face</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_font_matrix' => '<span class="type">CairoFontOptions</span> <span class="methodname">cairo_scaled_font_get_font_matrix</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_font_options' => '<span class="type">CairoFontOptions</span> <span class="methodname">cairo_scaled_font_get_font_options</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_scale_matrix' => '<span class="type">CairoMatrix</span> <span class="methodname">cairo_scaled_font_get_scale_matrix</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_get_type' => '<span class="type">int</span> <span class="methodname">cairo_scaled_font_get_type</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_glyph_extents' => '<span class="type">array</span> <span class="methodname">cairo_scaled_font_glyph_extents</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$glyphs</code></span> )',
  'cairo_scaled_font_status' => '<span class="type">int</span> <span class="methodname">cairo_scaled_font_status</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> )',
  'cairo_scaled_font_text_extents' => '<span class="type">array</span> <span class="methodname">cairo_scaled_font_text_extents</span> ( <span class="methodparam"><span class="type">CairoScaledFont</span> <code class="parameter">$scaledfont</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'cairo_surface_copy_page' => '<span class="type">void</span> <span class="methodname">cairo_surface_copy_page</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_create_similar' => '<span class="type">CairoSurface</span> <span class="methodname">cairo_surface_create_similar</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$content</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_surface_finish' => '<span class="type">void</span> <span class="methodname">cairo_surface_finish</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_flush' => '<span class="type">void</span> <span class="methodname">cairo_surface_flush</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_get_content' => '<span class="type">int</span> <span class="methodname">cairo_surface_get_content</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_get_device_offset' => '<span class="type">array</span> <span class="methodname">cairo_surface_get_device_offset</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_get_font_options' => '<span class="type">CairoFontOptions</span> <span class="methodname">cairo_surface_get_font_options</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_get_type' => '<span class="type">int</span> <span class="methodname">cairo_surface_get_type</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_mark_dirty' => '<span class="type">void</span> <span class="methodname">cairo_surface_mark_dirty</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_mark_dirty_rectangle' => '<span class="type">void</span> <span class="methodname">cairo_surface_mark_dirty_rectangle</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_surface_set_device_offset' => '<span class="type">void</span> <span class="methodname">cairo_surface_set_device_offset</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'cairo_surface_set_fallback_resolution' => '<span class="type">void</span> <span class="methodname">cairo_surface_set_fallback_resolution</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'cairo_surface_show_page' => '<span class="type">void</span> <span class="methodname">cairo_surface_show_page</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_status' => '<span class="type">int</span> <span class="methodname">cairo_surface_status</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> )',
  'cairo_surface_write_to_png' => '<span class="type">void</span> <span class="methodname">cairo_surface_write_to_png</span> ( <span class="methodparam"><span class="type">CairoSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> )',
  'cairo_svg_surface_create' => '<span class="type">CairoSvgSurface</span> <span class="methodname">cairo_svg_surface_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'cairo_svg_surface_restrict_to_version' => '<span class="type">void</span> <span class="methodname">cairo_svg_surface_restrict_to_version</span> ( <span class="methodparam"><span class="type">CairoSvgSurface</span> <code class="parameter">$surface</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code></span> )',
  'cairo_svg_version_to_string' => '<span class="type">string</span> <span class="methodname">cairo_svg_version_to_string</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code></span> )',
  'calculhmac' => '<span class="type">string</span> <span class="methodname">calculhmac</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'calcul_hmac' => '<span class="type">string</span> <span class="methodname">calcul_hmac</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$siretcode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$price</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$reference</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$validity</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$taxation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$devise</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code></span> )',
  'cal_days_in_month' => '<span class="type">int</span> <span class="methodname">cal_days_in_month</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$calendar</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'cal_from_jd' => '<span class="type">array</span> <span class="methodname">cal_from_jd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$jd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$calendar</code></span> )',
  'cal_info' => '<span class="type">array</span> <span class="methodname">cal_info</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$calendar</code><span class="initializer">= -1</span></span> ] )',
  'call_user_func_array' => '<span class="type">mixed</span> <span class="methodname">call_user_func_array</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$param_arr</code></span> )',
  'call_user_func' => '<span class="type">mixed</span> <span class="methodname">call_user_func</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$parameter</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'call_user_method_array' => '<span class="type">mixed</span> <span class="methodname">call_user_method_array</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$method_name</code></span> , <span class="methodparam"><span class="type">object</span> <code class="parameter reference">&$obj</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'call_user_method' => '<span class="type">mixed</span> <span class="methodname">call_user_method</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$method_name</code></span> , <span class="methodparam"><span class="type">object</span> <code class="parameter reference">&$obj</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$parameter</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'cal_to_jd' => '<span class="type">int</span> <span class="methodname">cal_to_jd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$calendar</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'ceil' => '<span class="type">float</span> <span class="methodname">ceil</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'chdb_create' => '<span class="type">bool</span> <span class="methodname">chdb_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> )',
  'chdir' => '<span class="type">bool</span> <span class="methodname">chdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'checkdate' => '<span class="type">bool</span> <span class="methodname">checkdate</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'checkdnsrr' => '<span class="type">bool</span> <span class="methodname">checkdnsrr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer">= &quot;MX&quot;</span></span> ] )',
  'chgrp' => '<span class="type">bool</span> <span class="methodname">chgrp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$group</code></span> )',
  'chmod' => '<span class="type">bool</span> <span class="methodname">chmod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'chop' => '',
  'chown' => '<span class="type">bool</span> <span class="methodname">chown</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$user</code></span> )',
  'chr' => '<span class="type">string</span> <span class="methodname">chr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ascii</code></span> )',
  'chroot' => '<span class="type">bool</span> <span class="methodname">chroot</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'chunk_split' => '<span class="type">string</span> <span class="methodname">chunk_split</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$body</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$chunklen</code><span class="initializer">= 76</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$end</code><span class="initializer">= &quot;\r\n&quot;</span></span> ]] )',
  'class_alias' => '<span class="type">bool</span> <span class="methodname">class_alias</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$original</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$alias</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= <strong><code>TRUE</code></strong></span></span> ] )',
  'class_exists' => '<span class="type">bool</span> <span class="methodname">class_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= true</span></span> ] )',
  'class_implements' => '<span class="type">array</span> <span class="methodname">class_implements</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$class</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= true</span></span> ] )',
  'classkit_import' => '<span class="type">array</span> <span class="methodname">classkit_import</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'classkit_method_add' => '<span class="type">bool</span> <span class="methodname">classkit_method_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= CLASSKIT_ACC_PUBLIC</span></span> ] )',
  'classkit_method_copy' => '<span class="type">bool</span> <span class="methodname">classkit_method_copy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dClass</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dMethod</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sClass</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sMethod</code></span> ] )',
  'classkit_method_redefine' => '<span class="type">bool</span> <span class="methodname">classkit_method_redefine</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= CLASSKIT_ACC_PUBLIC</span></span> ] )',
  'classkit_method_remove' => '<span class="type">bool</span> <span class="methodname">classkit_method_remove</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> )',
  'classkit_method_rename' => '<span class="type">bool</span> <span class="methodname">classkit_method_rename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newname</code></span> )',
  'class_parents' => '<span class="type">array</span> <span class="methodname">class_parents</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$class</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= true</span></span> ] )',
  'class_uses' => '<span class="type">array</span> <span class="methodname">class_uses</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$class</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= true</span></span> ] )',
  'clearstatcache' => '<span class="type">void</span> <span class="methodname">clearstatcache</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$clear_realpath_cache</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ]] )',
  'cli_get_process_title' => '<span class="type">string</span> <span class="methodname">cli_get_process_title</span> ( <span class="methodparam">void</span> )',
  'cli_set_process_title' => '<span class="type">bool</span> <span class="methodname">cli_set_process_title</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> )',
  'closedir' => '<span class="type">void</span> <span class="methodname">closedir</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span> ] )',
  'closelog' => '<span class="type">bool</span> <span class="methodname">closelog</span> ( <span class="methodparam">void</span> )',
  'com_addref' => '<span class="type">void</span> <span class="methodname">com_addref</span> ( <span class="methodparam">void</span> )',
  'com_create_guid' => '<span class="type">string</span> <span class="methodname">com_create_guid</span> ( <span class="methodparam">void</span> )',
  'com_event_sink' => '<span class="type">bool</span> <span class="methodname">com_event_sink</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$comobject</code></span> , <span class="methodparam"><span class="type">object</span> <code class="parameter">$sinkobject</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$sinkinterface</code></span> ] )',
  'com_get_active_object' => '<span class="type">variant</span> <span class="methodname">com_get_active_object</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$progid</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$code_page</code></span> ] )',
  'com_get' => '',
  'com_invoke' => '<span class="type">mixed</span> <span class="methodname">com_invoke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$com_object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$function_parameters</code></span> ] )',
  'com_isenum' => '<span class="type">bool</span> <span class="methodname">com_isenum</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$com_module</code></span> )',
  'com_load' => '',
  'com_load_typelib' => '<span class="type">bool</span> <span class="methodname">com_load_typelib</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$typelib_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_insensitive</code><span class="initializer">= true</span></span> ] )',
  'com_message_pump' => '<span class="type">bool</span> <span class="methodname">com_message_pump</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeoutms</code><span class="initializer">= 0</span></span> ] )',
  'compact' => '<span class="type">array</span> <span class="methodname">compact</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$varname1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'com_print_typeinfo' => '<span class="type">bool</span> <span class="methodname">com_print_typeinfo</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$comobject</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dispinterface</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$wantsink</code><span class="initializer">= false</span></span> ]] )',
  'com_propget' => '',
  'com_propput' => '',
  'com_propset' => '',
  'com_release' => '<span class="type">void</span> <span class="methodname">com_release</span> ( <span class="methodparam">void</span> )',
  'com_set' => '',
  'connection_aborted' => '<span class="type">int</span> <span class="methodname">connection_aborted</span> ( <span class="methodparam">void</span> )',
  'connection_status' => '<span class="type">int</span> <span class="methodname">connection_status</span> ( <span class="methodparam">void</span> )',
  'connection_timeout' => '<span class="type">int</span> <span class="methodname">connection_timeout</span> ( <span class="methodparam">void</span> )',
  'constant' => '<span class="type">mixed</span> <span class="methodname">constant</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'convert_cyr_string' => '<span class="type">string</span> <span class="methodname">convert_cyr_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$from</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> )',
  'convert_uudecode' => '<span class="type">string</span> <span class="methodname">convert_uudecode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'convert_uuencode' => '<span class="type">string</span> <span class="methodname">convert_uuencode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'copy' => '<span class="type">bool</span> <span class="methodname">copy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'cosh' => '<span class="type">float</span> <span class="methodname">cosh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'cos' => '<span class="type">float</span> <span class="methodname">cos</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'count_chars' => '<span class="type">mixed</span> <span class="methodname">count_chars</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ] )',
  'count' => '<span class="type">int</span> <span class="methodname">count</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$array_or_countable</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= COUNT_NORMAL</span></span> ] )',
  'crack_check' => '<span class="type">bool</span> <span class="methodname">crack_check</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dictionary</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> ) <span class="type">bool</span> <span class="methodname">crack_check</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'crack_closedict' => '<span class="type">bool</span> <span class="methodname">crack_closedict</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dictionary</code></span> ] )',
  'crack_getlastmessage' => '<span class="type">string</span> <span class="methodname">crack_getlastmessage</span> ( <span class="methodparam">void</span> )',
  'crack_opendict' => '<span class="type">resource</span> <span class="methodname">crack_opendict</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dictionary</code></span> )',
  'crc32' => '<span class="type">int</span> <span class="methodname">crc32</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'create_function' => '<span class="type">string</span> <span class="methodname">create_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> )',
  'crypt' => '<span class="type">string</span> <span class="methodname">crypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$salt</code></span> ] )',
  'ctype_alnum' => '<span class="type">bool</span> <span class="methodname">ctype_alnum</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_alpha' => '<span class="type">bool</span> <span class="methodname">ctype_alpha</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_cntrl' => '<span class="type">bool</span> <span class="methodname">ctype_cntrl</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_digit' => '<span class="type">bool</span> <span class="methodname">ctype_digit</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_graph' => '<span class="type">bool</span> <span class="methodname">ctype_graph</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_lower' => '<span class="type">bool</span> <span class="methodname">ctype_lower</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_print' => '<span class="type">bool</span> <span class="methodname">ctype_print</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_punct' => '<span class="type">bool</span> <span class="methodname">ctype_punct</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_space' => '<span class="type">bool</span> <span class="methodname">ctype_space</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_upper' => '<span class="type">bool</span> <span class="methodname">ctype_upper</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ctype_xdigit' => '<span class="type">bool</span> <span class="methodname">ctype_xdigit</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'cubrid_affected_rows' => '<span class="type">int</span> <span class="methodname">cubrid_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] ) <span class="type">int</span> <span class="methodname">cubrid_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> ] )',
  'cubrid_bind' => '<span class="type">bool</span> <span class="methodname">cubrid_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bind_index</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$bind_value</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bind_value_type</code></span> ] )',
  'cubrid_client_encoding' => '<span class="type">string</span> <span class="methodname">cubrid_client_encoding</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_close' => '<span class="type">bool</span> <span class="methodname">cubrid_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_close_prepare' => '<span class="type">bool</span> <span class="methodname">cubrid_close_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_close_request' => '<span class="type">bool</span> <span class="methodname">cubrid_close_request</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_col_get' => '<span class="type">array</span> <span class="methodname">cubrid_col_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> )',
  'cubrid_col_size' => '<span class="type">int</span> <span class="methodname">cubrid_col_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> )',
  'cubrid_column_names' => '<span class="type">array</span> <span class="methodname">cubrid_column_names</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_column_types' => '<span class="type">array</span> <span class="methodname">cubrid_column_types</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_commit' => '<span class="type">bool</span> <span class="methodname">cubrid_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_connect' => '<span class="type">resource</span> <span class="methodname">cubrid_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_link</code><span class="initializer">= false</span></span> ]]] )',
  'cubrid_connect_with_url' => '<span class="type">resource</span> <span class="methodname">cubrid_connect_with_url</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$conn_url</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_link</code><span class="initializer">= false</span></span> ]]] )',
  'cubrid_current_oid' => '<span class="type">string</span> <span class="methodname">cubrid_current_oid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_data_seek' => '<span class="type">bool</span> <span class="methodname">cubrid_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'cubrid_db_name' => '<span class="type">string</span> <span class="methodname">cubrid_db_name</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'cubrid_disconnect' => '<span class="type">bool</span> <span class="methodname">cubrid_disconnect</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_drop' => '<span class="type">bool</span> <span class="methodname">cubrid_drop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_errno' => '<span class="type">int</span> <span class="methodname">cubrid_errno</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_error_code_facility' => '<span class="type">int</span> <span class="methodname">cubrid_error_code_facility</span> ( <span class="methodparam">void</span> )',
  'cubrid_error_code' => '<span class="type">int</span> <span class="methodname">cubrid_error_code</span> ( <span class="methodparam">void</span> )',
  'cubrid_error' => '<span class="type">string</span> <span class="methodname">cubrid_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'cubrid_error_msg' => '<span class="type">string</span> <span class="methodname">cubrid_error_msg</span> ( <span class="methodparam">void</span> )',
  'cubrid_execute' => '<span class="type">resource</span> <span class="methodname">cubrid_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> ] ) <span class="type">bool</span> <span class="methodname">cubrid_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$request_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> ] )',
  'cubrid_fetch_array' => '<span class="type">array</span> <span class="methodname">cubrid_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= CUBRID_BOTH</span></span> ] )',
  'cubrid_fetch_assoc' => '<span class="type">array</span> <span class="methodname">cubrid_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> ] )',
  'cubrid_fetch_field' => '<span class="type">object</span> <span class="methodname">cubrid_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= 0</span></span> ] )',
  'cubrid_fetch' => '<span class="type">mixed</span> <span class="methodname">cubrid_fetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= CUBRID_BOTH</span></span> ] )',
  'cubrid_fetch_lengths' => '<span class="type">array</span> <span class="methodname">cubrid_fetch_lengths</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'cubrid_fetch_object' => '<span class="type">object</span> <span class="methodname">cubrid_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> ]]] )',
  'cubrid_fetch_row' => '<span class="type">array</span> <span class="methodname">cubrid_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> ] )',
  'cubrid_field_flags' => '<span class="type">string</span> <span class="methodname">cubrid_field_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'cubrid_field_len' => '<span class="type">int</span> <span class="methodname">cubrid_field_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'cubrid_field_name' => '<span class="type">string</span> <span class="methodname">cubrid_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'cubrid_field_seek' => '<span class="type">bool</span> <span class="methodname">cubrid_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= 0</span></span> ] )',
  'cubrid_field_table' => '<span class="type">string</span> <span class="methodname">cubrid_field_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'cubrid_field_type' => '<span class="type">string</span> <span class="methodname">cubrid_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'cubrid_free_result' => '<span class="type">bool</span> <span class="methodname">cubrid_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_get_autocommit' => '<span class="type">bool</span> <span class="methodname">cubrid_get_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_get_charset' => '<span class="type">string</span> <span class="methodname">cubrid_get_charset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_get_class_name' => '<span class="type">string</span> <span class="methodname">cubrid_get_class_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_get_client_info' => '<span class="type">string</span> <span class="methodname">cubrid_get_client_info</span> ( <span class="methodparam">void</span> )',
  'cubrid_get_db_parameter' => '<span class="type">array</span> <span class="methodname">cubrid_get_db_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_get' => '<span class="type">mixed</span> <span class="methodname">cubrid_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$attr</code></span> ] )',
  'cubrid_get_query_timeout' => '<span class="type">int</span> <span class="methodname">cubrid_get_query_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> )',
  'cubrid_get_server_info' => '<span class="type">string</span> <span class="methodname">cubrid_get_server_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_insert_id' => '<span class="type">string</span> <span class="methodname">cubrid_insert_id</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_is_instance' => '<span class="type">int</span> <span class="methodname">cubrid_is_instance</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_list_dbs' => '<span class="type">array</span> <span class="methodname">cubrid_list_dbs</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_load_from_glo' => '<span class="type">int</span> <span class="methodname">cubrid_load_from_glo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'cubrid_lob2_bind' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bind_index</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$bind_value</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bind_value_type</code></span> ] )',
  'cubrid_lob2_close' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob2_export' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_export</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'cubrid_lob2_import' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_import</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'cubrid_lob2_new' => '<span class="type">resource</span> <span class="methodname">cubrid_lob2_new</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer">= &quot;BLOB&quot;</span></span> ]] )',
  'cubrid_lob2_read' => '<span class="type">string</span> <span class="methodname">cubrid_lob2_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'cubrid_lob2_seek64' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_seek64</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$origin</code><span class="initializer">= CUBRID_CURSOR_CURRENT</span></span> ] )',
  'cubrid_lob2_seek' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$origin</code><span class="initializer">= CUBRID_CURSOR_CURRENT</span></span> ] )',
  'cubrid_lob2_size64' => '<span class="type">string</span> <span class="methodname">cubrid_lob2_size64</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob2_size' => '<span class="type">int</span> <span class="methodname">cubrid_lob2_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob2_tell64' => '<span class="type">string</span> <span class="methodname">cubrid_lob2_tell64</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob2_tell' => '<span class="type">int</span> <span class="methodname">cubrid_lob2_tell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob2_write' => '<span class="type">bool</span> <span class="methodname">cubrid_lob2_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buf</code></span> )',
  'cubrid_lob_close' => '<span class="type">bool</span> <span class="methodname">cubrid_lob_close</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$lob_identifier_array</code></span> )',
  'cubrid_lob_export' => '<span class="type">bool</span> <span class="methodname">cubrid_lob_export</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path_name</code></span> )',
  'cubrid_lob_get' => '<span class="type">array</span> <span class="methodname">cubrid_lob_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql</code></span> )',
  'cubrid_lob_send' => '<span class="type">bool</span> <span class="methodname">cubrid_lob_send</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lob_size' => '<span class="type">string</span> <span class="methodname">cubrid_lob_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$lob_identifier</code></span> )',
  'cubrid_lock_read' => '<span class="type">bool</span> <span class="methodname">cubrid_lock_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_lock_write' => '<span class="type">bool</span> <span class="methodname">cubrid_lock_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_move_cursor' => '<span class="type">int</span> <span class="methodname">cubrid_move_cursor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$origin</code><span class="initializer">= CUBRID_CURSOR_CURRENT</span></span> ] )',
  'cubrid_new_glo' => '<span class="type">string</span> <span class="methodname">cubrid_new_glo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'cubrid_next_result' => '<span class="type">bool</span> <span class="methodname">cubrid_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'cubrid_num_cols' => '<span class="type">int</span> <span class="methodname">cubrid_num_cols</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'cubrid_num_fields' => '<span class="type">int</span> <span class="methodname">cubrid_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'cubrid_num_rows' => '<span class="type">int</span> <span class="methodname">cubrid_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'cubrid_pconnect' => '<span class="type">resource</span> <span class="methodname">cubrid_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> ]] )',
  'cubrid_pconnect_with_url' => '<span class="type">resource</span> <span class="methodname">cubrid_pconnect_with_url</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$conn_url</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> ]] )',
  'cubrid_ping' => '<span class="type">bool</span> <span class="methodname">cubrid_ping</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_prepare' => '<span class="type">resource</span> <span class="methodname">cubrid_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prepare_stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code><span class="initializer">= 0</span></span> ] )',
  'cubrid_put' => '<span class="type">int</span> <span class="methodname">cubrid_put</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr</code></span> ], <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'cubrid_query' => '<span class="type">resource</span> <span class="methodname">cubrid_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_real_escape_string' => '<span class="type">string</span> <span class="methodname">cubrid_real_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$unescaped_string</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_result' => '<span class="type">string</span> <span class="methodname">cubrid_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code><span class="initializer">= 0</span></span> ] )',
  'cubrid_rollback' => '<span class="type">bool</span> <span class="methodname">cubrid_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> )',
  'cubrid_save_to_glo' => '<span class="type">int</span> <span class="methodname">cubrid_save_to_glo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'cubrid_schema' => '<span class="type">array</span> <span class="methodname">cubrid_schema</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$schema_type</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> ]] )',
  'cubrid_send_glo' => '<span class="type">int</span> <span class="methodname">cubrid_send_glo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> )',
  'cubrid_seq_drop' => '<span class="type">bool</span> <span class="methodname">cubrid_seq_drop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'cubrid_seq_insert' => '<span class="type">bool</span> <span class="methodname">cubrid_seq_insert</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$seq_element</code></span> )',
  'cubrid_seq_put' => '<span class="type">bool</span> <span class="methodname">cubrid_seq_put</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$seq_element</code></span> )',
  'cubrid_set_add' => '<span class="type">bool</span> <span class="methodname">cubrid_set_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$set_element</code></span> )',
  'cubrid_set_autocommit' => '<span class="type">bool</span> <span class="methodname">cubrid_set_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$mode</code></span> )',
  'cubrid_set_db_parameter' => '<span class="type">bool</span> <span class="methodname">cubrid_set_db_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_value</code></span> )',
  'cubrid_set_drop' => '<span class="type">bool</span> <span class="methodname">cubrid_set_drop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attr_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$set_element</code></span> )',
  'cubrid_set_query_timeout' => '<span class="type">bool</span> <span class="methodname">cubrid_set_query_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code></span> )',
  'cubrid_unbuffered_query' => '<span class="type">resource</span> <span class="methodname">cubrid_unbuffered_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn_identifier</code></span> ] )',
  'cubrid_version' => '<span class="type">string</span> <span class="methodname">cubrid_version</span> ( <span class="methodparam">void</span> )',
  'curl_close' => '<span class="type">void</span> <span class="methodname">curl_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_copy_handle' => '<span class="type">resource</span> <span class="methodname">curl_copy_handle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_errno' => '<span class="type">int</span> <span class="methodname">curl_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_error' => '<span class="type">string</span> <span class="methodname">curl_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_escape' => '<span class="type">string</span> <span class="methodname">curl_escape</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'curl_exec' => '<span class="type">mixed</span> <span class="methodname">curl_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_file_create' => '',
  'curl_getinfo' => '<span class="type">mixed</span> <span class="methodname">curl_getinfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$opt</code><span class="initializer">= 0</span></span> ] )',
  'curl_init' => '<span class="type">resource</span> <span class="methodname">curl_init</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'curl_multi_add_handle' => '<span class="type">int</span> <span class="methodname">curl_multi_add_handle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_multi_close' => '<span class="type">void</span> <span class="methodname">curl_multi_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> )',
  'curl_multi_exec' => '<span class="type">int</span> <span class="methodname">curl_multi_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$still_running</code></span> )',
  'curl_multi_getcontent' => '<span class="type">string</span> <span class="methodname">curl_multi_getcontent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_multi_info_read' => '<span class="type">array</span> <span class="methodname">curl_multi_info_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$msgs_in_queue</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'curl_multi_init' => '<span class="type">resource</span> <span class="methodname">curl_multi_init</span> ( <span class="methodparam">void</span> )',
  'curl_multi_remove_handle' => '<span class="type">int</span> <span class="methodname">curl_multi_remove_handle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_multi_select' => '<span class="type">int</span> <span class="methodname">curl_multi_select</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer">= 1.0</span></span> ] )',
  'curl_multi_setopt' => '<span class="type">bool</span> <span class="methodname">curl_multi_setopt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mh</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'curl_multi_strerror' => '<span class="type">string</span> <span class="methodname">curl_multi_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errornum</code></span> )',
  'curl_pause' => '<span class="type">int</span> <span class="methodname">curl_pause</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bitmask</code></span> )',
  'curl_reset' => '<span class="type">void</span> <span class="methodname">curl_reset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> )',
  'curl_setopt_array' => '<span class="type">bool</span> <span class="methodname">curl_setopt_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'curl_setopt' => '<span class="type">bool</span> <span class="methodname">curl_setopt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'curl_share_close' => '<span class="type">void</span> <span class="methodname">curl_share_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sh</code></span> )',
  'curl_share_init' => '<span class="type">resource</span> <span class="methodname">curl_share_init</span> ( <span class="methodparam">void</span> )',
  'curl_share_setopt' => '<span class="type">bool</span> <span class="methodname">curl_share_setopt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sh</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'curl_strerror' => '<span class="type">string</span> <span class="methodname">curl_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errornum</code></span> )',
  'curl_unescape' => '<span class="type">string</span> <span class="methodname">curl_unescape</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ch</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'curl_version' => '<span class="type">array</span> <span class="methodname">curl_version</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$age</code><span class="initializer">= CURLVERSION_NOW</span></span> ] )',
  'current' => '<span class="type">mixed</span> <span class="methodname">current</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'cyrus_authenticate' => '<span class="type">void</span> <span class="methodname">cyrus_authenticate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$mechlist</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$service</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$minssf</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxssf</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$authname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> ]]]]]]] )',
  'cyrus_bind' => '<span class="type">bool</span> <span class="methodname">cyrus_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> )',
  'cyrus_close' => '<span class="type">bool</span> <span class="methodname">cyrus_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'cyrus_connect' => '<span class="type">resource</span> <span class="methodname">cyrus_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$port</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ]]] )',
  'cyrus_query' => '<span class="type">array</span> <span class="methodname">cyrus_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'cyrus_unbind' => '<span class="type">bool</span> <span class="methodname">cyrus_unbind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$trigger_name</code></span> )',
  'date_add' => '',
  'date_create_from_format' => '',
  'date_create' => '',
  'date_create_immutable_from_format' => '',
  'date_create_immutable' => '',
  'date_date_set' => '',
  'date_default_timezone_get' => '<span class="type">string</span> <span class="methodname">date_default_timezone_get</span> ( <span class="methodparam">void</span> )',
  'date_default_timezone_set' => '<span class="type">bool</span> <span class="methodname">date_default_timezone_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$timezone_identifier</code></span> )',
  'date_diff' => '',
  'date_format' => '',
  'date_get_last_errors' => '',
  'date' => '<span class="type">string</span> <span class="methodname">date</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'date_interval_create_from_date_string' => '',
  'date_interval_format' => '',
  'date_isodate_set' => '',
  'date_modify' => '',
  'date_offset_get' => '',
  'date_parse_from_format' => '<span class="type">array</span> <span class="methodname">date_parse_from_format</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$date</code></span> )',
  'date_parse' => '<span class="type">array</span> <span class="methodname">date_parse</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$date</code></span> )',
  'date_sub' => '',
  'date_sun_info' => '<span class="type">array</span> <span class="methodname">date_sun_info</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$time</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$latitude</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$longitude</code></span> )',
  'date_sunrise' => '<span class="type">mixed</span> <span class="methodname">date_sunrise</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code><span class="initializer">= SUNFUNCS_RET_STRING</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$latitude</code><span class="initializer">= ini_get(&quot;date.default_latitude&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$longitude</code><span class="initializer">= ini_get(&quot;date.default_longitude&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$zenith</code><span class="initializer">= ini_get(&quot;date.sunrise_zenith&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$gmt_offset</code><span class="initializer">= 0</span></span> ]]]]] )',
  'date_sunset' => '<span class="type">mixed</span> <span class="methodname">date_sunset</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code><span class="initializer">= SUNFUNCS_RET_STRING</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$latitude</code><span class="initializer">= ini_get(&quot;date.default_latitude&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$longitude</code><span class="initializer">= ini_get(&quot;date.default_longitude&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$zenith</code><span class="initializer">= ini_get(&quot;date.sunset_zenith&quot;)</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$gmt_offset</code><span class="initializer">= 0</span></span> ]]]]] )',
  'date_time_set' => '',
  'date_timestamp_get' => '',
  'date_timestamp_set' => '',
  'date_timezone_get' => '',
  'date_timezone_set' => '',
  'db2_autocommit' => '<span class="type">mixed</span> <span class="methodname">db2_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$value</code></span> ] )',
  'db2_bind_param' => '<span class="type">bool</span> <span class="methodname">db2_bind_param</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$parameter-number</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable-name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$parameter-type</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$data-type</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$precision</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scale</code><span class="initializer">= 0</span></span> ]]]] )',
  'db2_client_info' => '<span class="type">object</span> <span class="methodname">db2_client_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'db2_close' => '<span class="type">bool</span> <span class="methodname">db2_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'db2_column_privileges' => '<span class="type">resource</span> <span class="methodname">db2_column_privileges</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$column-name</code></span> ]]]] )',
  'db2_columns' => '<span class="type">resource</span> <span class="methodname">db2_columns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$column-name</code></span> ]]]] )',
  'db2_commit' => '<span class="type">bool</span> <span class="methodname">db2_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'db2_connect' => '<span class="type">resource</span> <span class="methodname">db2_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'db2_conn_error' => '<span class="type">string</span> <span class="methodname">db2_conn_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'db2_conn_errormsg' => '<span class="type">string</span> <span class="methodname">db2_conn_errormsg</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'db2_cursor_type' => '<span class="type">int</span> <span class="methodname">db2_cursor_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_escape_string' => '<span class="type">string</span> <span class="methodname">db2_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string_literal</code></span> )',
  'db2_exec' => '<span class="type">resource</span> <span class="methodname">db2_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$statement</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'db2_execute' => '<span class="type">bool</span> <span class="methodname">db2_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span> ] )',
  'db2_fetch_array' => '<span class="type">array</span> <span class="methodname">db2_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code><span class="initializer">= -1</span></span> ] )',
  'db2_fetch_assoc' => '<span class="type">array</span> <span class="methodname">db2_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code><span class="initializer">= -1</span></span> ] )',
  'db2_fetch_both' => '<span class="type">array</span> <span class="methodname">db2_fetch_both</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code><span class="initializer">= -1</span></span> ] )',
  'db2_fetch_object' => '<span class="type">object</span> <span class="methodname">db2_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code><span class="initializer">= -1</span></span> ] )',
  'db2_fetch_row' => '<span class="type">bool</span> <span class="methodname">db2_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> ] )',
  'db2_field_display_size' => '<span class="type">int</span> <span class="methodname">db2_field_display_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_name' => '<span class="type">string</span> <span class="methodname">db2_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_num' => '<span class="type">int</span> <span class="methodname">db2_field_num</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_precision' => '<span class="type">int</span> <span class="methodname">db2_field_precision</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_scale' => '<span class="type">int</span> <span class="methodname">db2_field_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_type' => '<span class="type">string</span> <span class="methodname">db2_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_field_width' => '<span class="type">int</span> <span class="methodname">db2_field_width</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_foreign_keys' => '<span class="type">resource</span> <span class="methodname">db2_foreign_keys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> )',
  'db2_free_result' => '<span class="type">bool</span> <span class="methodname">db2_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_free_stmt' => '<span class="type">bool</span> <span class="methodname">db2_free_stmt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_get_option' => '<span class="type">string</span> <span class="methodname">db2_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$resource</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span> )',
  'db2_last_insert_id' => '<span class="type">string</span> <span class="methodname">db2_last_insert_id</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$resource</code></span> )',
  'db2_lob_read' => '<span class="type">string</span> <span class="methodname">db2_lob_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$colnum</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'db2_next_result' => '<span class="type">resource</span> <span class="methodname">db2_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_num_fields' => '<span class="type">int</span> <span class="methodname">db2_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_num_rows' => '<span class="type">int</span> <span class="methodname">db2_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'db2_pclose' => '<span class="type">bool</span> <span class="methodname">db2_pclose</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$resource</code></span> )',
  'db2_pconnect' => '<span class="type">resource</span> <span class="methodname">db2_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'db2_prepare' => '<span class="type">resource</span> <span class="methodname">db2_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$statement</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'db2_primary_keys' => '<span class="type">resource</span> <span class="methodname">db2_primary_keys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> )',
  'db2_procedure_columns' => '<span class="type">resource</span> <span class="methodname">db2_procedure_columns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$procedure</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$parameter</code></span> )',
  'db2_procedures' => '<span class="type">resource</span> <span class="methodname">db2_procedures</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$procedure</code></span> )',
  'db2_result' => '<span class="type">mixed</span> <span class="methodname">db2_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$column</code></span> )',
  'db2_rollback' => '<span class="type">bool</span> <span class="methodname">db2_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'db2_server_info' => '<span class="type">object</span> <span class="methodname">db2_server_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'db2_set_option' => '<span class="type">bool</span> <span class="methodname">db2_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$resource</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'db2_special_columns' => '<span class="type">resource</span> <span class="methodname">db2_special_columns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$scope</code></span> )',
  'db2_statistics' => '<span class="type">resource</span> <span class="methodname">db2_statistics</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$unique</code></span> )',
  'db2_stmt_error' => '<span class="type">string</span> <span class="methodname">db2_stmt_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ] )',
  'db2_stmt_errormsg' => '<span class="type">string</span> <span class="methodname">db2_stmt_errormsg</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ] )',
  'db2_table_privileges' => '<span class="type">resource</span> <span class="methodname">db2_table_privileges</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> ]]] )',
  'db2_tables' => '<span class="type">resource</span> <span class="methodname">db2_tables</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table-type</code></span> ]]]] )',
  'dba_close' => '<span class="type">void</span> <span class="methodname">dba_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_delete' => '<span class="type">bool</span> <span class="methodname">dba_delete</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_exists' => '<span class="type">bool</span> <span class="methodname">dba_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_fetch' => '<span class="type">string</span> <span class="methodname">dba_fetch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> ) <span class="type">string</span> <span class="methodname">dba_fetch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$skip</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_firstkey' => '<span class="type">string</span> <span class="methodname">dba_firstkey</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_handlers' => '<span class="type">array</span> <span class="methodname">dba_handlers</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$full_info</code><span class="initializer">= false</span></span> ] )',
  'dba_insert' => '<span class="type">bool</span> <span class="methodname">dba_insert</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_key_split' => '<span class="type">mixed</span> <span class="methodname">dba_key_split</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'dba_list' => '<span class="type">array</span> <span class="methodname">dba_list</span> ( <span class="methodparam">void</span> )',
  'dba_nextkey' => '<span class="type">string</span> <span class="methodname">dba_nextkey</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_open' => '<span class="type">resource</span> <span class="methodname">dba_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$handler</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'dba_optimize' => '<span class="type">bool</span> <span class="methodname">dba_optimize</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dba_popen' => '<span class="type">resource</span> <span class="methodname">dba_popen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$handler</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'dba_replace' => '<span class="type">bool</span> <span class="methodname">dba_replace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dbase_add_record' => '<span class="type">bool</span> <span class="methodname">dbase_add_record</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$record</code></span> )',
  'dbase_close' => '<span class="type">bool</span> <span class="methodname">dbase_close</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> )',
  'dbase_create' => '<span class="type">int</span> <span class="methodname">dbase_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span> )',
  'dbase_delete_record' => '<span class="type">bool</span> <span class="methodname">dbase_delete_record</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$record_number</code></span> )',
  'dbase_get_header_info' => '<span class="type">array</span> <span class="methodname">dbase_get_header_info</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> )',
  'dbase_get_record' => '<span class="type">array</span> <span class="methodname">dbase_get_record</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$record_number</code></span> )',
  'dbase_get_record_with_names' => '<span class="type">array</span> <span class="methodname">dbase_get_record_with_names</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$record_number</code></span> )',
  'dbase_numfields' => '<span class="type">int</span> <span class="methodname">dbase_numfields</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> )',
  'dbase_numrecords' => '<span class="type">int</span> <span class="methodname">dbase_numrecords</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> )',
  'dbase_open' => '<span class="type">int</span> <span class="methodname">dbase_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'dbase_pack' => '<span class="type">bool</span> <span class="methodname">dbase_pack</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> )',
  'dbase_replace_record' => '<span class="type">bool</span> <span class="methodname">dbase_replace_record</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dbase_identifier</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$record</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$record_number</code></span> )',
  'dba_sync' => '<span class="type">bool</span> <span class="methodname">dba_sync</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'dbplus_add' => '<span class="type">int</span> <span class="methodname">dbplus_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tuple</code></span> )',
  'dbplus_aql' => '<span class="type">resource</span> <span class="methodname">dbplus_aql</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbpath</code></span> ]] )',
  'dbplus_chdir' => '<span class="type">string</span> <span class="methodname">dbplus_chdir</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$newdir</code></span> ] )',
  'dbplus_close' => '<span class="type">mixed</span> <span class="methodname">dbplus_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_curr' => '<span class="type">int</span> <span class="methodname">dbplus_curr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$tuple</code></span> )',
  'dbplus_errcode' => '<span class="type">string</span> <span class="methodname">dbplus_errcode</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> ] )',
  'dbplus_errno' => '<span class="type">int</span> <span class="methodname">dbplus_errno</span> ( <span class="methodparam">void</span> )',
  'dbplus_find' => '<span class="type">int</span> <span class="methodname">dbplus_find</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$constraints</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$tuple</code></span> )',
  'dbplus_first' => '<span class="type">int</span> <span class="methodname">dbplus_first</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$tuple</code></span> )',
  'dbplus_flush' => '<span class="type">int</span> <span class="methodname">dbplus_flush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_freealllocks' => '<span class="type">int</span> <span class="methodname">dbplus_freealllocks</span> ( <span class="methodparam">void</span> )',
  'dbplus_freelock' => '<span class="type">int</span> <span class="methodname">dbplus_freelock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tuple</code></span> )',
  'dbplus_freerlocks' => '<span class="type">int</span> <span class="methodname">dbplus_freerlocks</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_getlock' => '<span class="type">int</span> <span class="methodname">dbplus_getlock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tuple</code></span> )',
  'dbplus_getunique' => '<span class="type">int</span> <span class="methodname">dbplus_getunique</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uniqueid</code></span> )',
  'dbplus_info' => '<span class="type">int</span> <span class="methodname">dbplus_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> )',
  'dbplus_last' => '<span class="type">int</span> <span class="methodname">dbplus_last</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$tuple</code></span> )',
  'dbplus_lockrel' => '<span class="type">int</span> <span class="methodname">dbplus_lockrel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_next' => '<span class="type">int</span> <span class="methodname">dbplus_next</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$tuple</code></span> )',
  'dbplus_open' => '<span class="type">resource</span> <span class="methodname">dbplus_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'dbplus_prev' => '<span class="type">int</span> <span class="methodname">dbplus_prev</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$tuple</code></span> )',
  'dbplus_rchperm' => '<span class="type">int</span> <span class="methodname">dbplus_rchperm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mask</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$group</code></span> )',
  'dbplus_rcreate' => '<span class="type">resource</span> <span class="methodname">dbplus_rcreate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$domlist</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$overwrite</code></span> ] )',
  'dbplus_rcrtexact' => '<span class="type">mixed</span> <span class="methodname">dbplus_rcrtexact</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$overwrite</code></span> ] )',
  'dbplus_rcrtlike' => '<span class="type">mixed</span> <span class="methodname">dbplus_rcrtlike</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$overwrite</code></span> ] )',
  'dbplus_resolve' => '<span class="type">array</span> <span class="methodname">dbplus_resolve</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$relation_name</code></span> )',
  'dbplus_restorepos' => '<span class="type">int</span> <span class="methodname">dbplus_restorepos</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tuple</code></span> )',
  'dbplus_rkeys' => '<span class="type">mixed</span> <span class="methodname">dbplus_rkeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$domlist</code></span> )',
  'dbplus_ropen' => '<span class="type">resource</span> <span class="methodname">dbplus_ropen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'dbplus_rquery' => '<span class="type">resource</span> <span class="methodname">dbplus_rquery</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbpath</code></span> ] )',
  'dbplus_rrename' => '<span class="type">int</span> <span class="methodname">dbplus_rrename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'dbplus_rsecindex' => '<span class="type">mixed</span> <span class="methodname">dbplus_rsecindex</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$domlist</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'dbplus_runlink' => '<span class="type">int</span> <span class="methodname">dbplus_runlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_rzap' => '<span class="type">int</span> <span class="methodname">dbplus_rzap</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_savepos' => '<span class="type">int</span> <span class="methodname">dbplus_savepos</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_setindexbynumber' => '<span class="type">int</span> <span class="methodname">dbplus_setindexbynumber</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$idx_number</code></span> )',
  'dbplus_setindex' => '<span class="type">int</span> <span class="methodname">dbplus_setindex</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$idx_name</code></span> )',
  'dbplus_sql' => '<span class="type">resource</span> <span class="methodname">dbplus_sql</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbpath</code></span> ]] )',
  'dbplus_tcl' => '<span class="type">string</span> <span class="methodname">dbplus_tcl</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$sid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span> )',
  'dbplus_tremove' => '<span class="type">int</span> <span class="methodname">dbplus_tremove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tuple</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$current</code></span> ] )',
  'dbplus_undo' => '<span class="type">int</span> <span class="methodname">dbplus_undo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_undoprepare' => '<span class="type">int</span> <span class="methodname">dbplus_undoprepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_unlockrel' => '<span class="type">int</span> <span class="methodname">dbplus_unlockrel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_unselect' => '<span class="type">int</span> <span class="methodname">dbplus_unselect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_update' => '<span class="type">int</span> <span class="methodname">dbplus_update</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$old</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$new</code></span> )',
  'dbplus_xlockrel' => '<span class="type">int</span> <span class="methodname">dbplus_xlockrel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbplus_xunlockrel' => '<span class="type">int</span> <span class="methodname">dbplus_xunlockrel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$relation</code></span> )',
  'dbx_close' => '<span class="type">int</span> <span class="methodname">dbx_close</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$link_identifier</code></span> )',
  'dbx_compare' => '<span class="type">int</span> <span class="methodname">dbx_compare</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$row_a</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$row_b</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$column_key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= DBX_CMP_ASC | DBX_CMP_NATIVE</span></span> ] )',
  'dbx_connect' => '<span class="type">object</span> <span class="methodname">dbx_connect</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$module</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$persistent</code></span> ] )',
  'dbx_error' => '<span class="type">string</span> <span class="methodname">dbx_error</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$link_identifier</code></span> )',
  'dbx_escape_string' => '<span class="type">string</span> <span class="methodname">dbx_escape_string</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'dbx_fetch_row' => '<span class="type">mixed</span> <span class="methodname">dbx_fetch_row</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$result_identifier</code></span> )',
  'dbx_query' => '<span class="type">mixed</span> <span class="methodname">dbx_query</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql_statement</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'dbx_sort' => '<span class="type">bool</span> <span class="methodname">dbx_sort</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_compare_function</code></span> )',
  'dcgettext' => '<span class="type">string</span> <span class="methodname">dcgettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$category</code></span> )',
  'dcngettext' => '<span class="type">string</span> <span class="methodname">dcngettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$category</code></span> )',
  'deaggregate' => '<span class="type">void</span> <span class="methodname">deaggregate</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> ] )',
  'debug_backtrace' => '<span class="type">array</span> <span class="methodname">debug_backtrace</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= DEBUG_BACKTRACE_PROVIDE_OBJECT</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= 0</span></span> ]] )',
  'debug_print_backtrace' => '<span class="type">void</span> <span class="methodname">debug_print_backtrace</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= 0</span></span> ]] )',
  'debug_zval_dump' => '<span class="type">void</span> <span class="methodname">debug_zval_dump</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variable</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'decbin' => '<span class="type">string</span> <span class="methodname">decbin</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span> )',
  'dechex' => '<span class="type">string</span> <span class="methodname">dechex</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span> )',
  'decoct' => '<span class="type">string</span> <span class="methodname">decoct</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span> )',
  'defined' => '<span class="type">bool</span> <span class="methodname">defined</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'define' => '<span class="type">bool</span> <span class="methodname">define</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_insensitive</code><span class="initializer">= false</span></span> ] )',
  'define_syslog_variables' => '<span class="type">void</span> <span class="methodname">define_syslog_variables</span> ( <span class="methodparam">void</span> )',
  'deg2rad' => '<span class="type">float</span> <span class="methodname">deg2rad</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> )',
  'delete' => '',
  'dgettext' => '<span class="type">string</span> <span class="methodname">dgettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> )',
  'die' => '',
  'dio_close' => '<span class="type">void</span> <span class="methodname">dio_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> )',
  'dio_fcntl' => '<span class="type">mixed</span> <span class="methodname">dio_fcntl</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cmd</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> ] )',
  'dio_open' => '<span class="type">resource</span> <span class="methodname">dio_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ] )',
  'dio_read' => '<span class="type">string</span> <span class="methodname">dio_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code><span class="initializer">= 1024</span></span> ] )',
  'dio_seek' => '<span class="type">int</span> <span class="methodname">dio_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$whence</code><span class="initializer">= SEEK_SET</span></span> ] )',
  'dio_stat' => '<span class="type">array</span> <span class="methodname">dio_stat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> )',
  'dio_tcsetattr' => '<span class="type">bool</span> <span class="methodname">dio_tcsetattr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'dio_truncate' => '<span class="type">bool</span> <span class="methodname">dio_truncate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'dio_write' => '<span class="type">int</span> <span class="methodname">dio_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code><span class="initializer">= 0</span></span> ] )',
  'dir' => '<span class="type">Directory</span> <span class="methodname">dir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'dirname' => '<span class="type">string</span> <span class="methodname">dirname</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'diskfreespace' => '',
  'disk_free_space' => '<span class="type">float</span> <span class="methodname">disk_free_space</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'disk_total_space' => '<span class="type">float</span> <span class="methodname">disk_total_space</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'dl' => '<span class="type">bool</span> <span class="methodname">dl</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$library</code></span> )',
  'dngettext' => '<span class="type">string</span> <span class="methodname">dngettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'dns_check_record' => '',
  'dns_get_mx' => '',
  'dns_get_record' => '<span class="type">array</span> <span class="methodname">dns_get_record</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= DNS_ANY</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$authns</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$addtl</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$raw</code><span class="initializer">= false</span></span> ]]]] )',
  'dom_import_simplexml' => '<span class="type">DOMElement</span> <span class="methodname">dom_import_simplexml</span> ( <span class="methodparam"><span class="type">SimpleXMLElement</span> <code class="parameter">$node</code></span> )',
  'dotnet_load' => '<span class="type">int</span> <span class="methodname">dotnet_load</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$assembly_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$datatype_name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$codepage</code></span> ]] )',
  'doubleval' => '',
  'each' => '<span class="type">array</span> <span class="methodname">each</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'easter_date' => '<span class="type">int</span> <span class="methodname">easter_date</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> ] )',
  'easter_days' => '<span class="type">int</span> <span class="methodname">easter_days</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code><span class="initializer">= CAL_EASTER_DEFAULT</span></span> ]] )',
  'echo' => '<span class="type">void</span> <span class="methodname">echo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$arg1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ] )',
  'eio_busy' => '<span class="type">resource</span> <span class="methodname">eio_busy</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$delay</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_cancel' => '<span class="type">void</span> <span class="methodname">eio_cancel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req</code></span> )',
  'eio_chmod' => '<span class="type">resource</span> <span class="methodname">eio_chmod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_chown' => '<span class="type">resource</span> <span class="methodname">eio_chown</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]]] )',
  'eio_close' => '<span class="type">resource</span> <span class="methodname">eio_close</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_custom' => '<span class="type">resource</span> <span class="methodname">eio_custom</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$execute</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_dup2' => '<span class="type">resource</span> <span class="methodname">eio_dup2</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_event_loop' => '<span class="type">bool</span> <span class="methodname">eio_event_loop</span> ( <span class="methodparam">void</span> )',
  'eio_fallocate' => '<span class="type">resource</span> <span class="methodname">eio_fallocate</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_fchmod' => '<span class="type">resource</span> <span class="methodname">eio_fchmod</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_fchown' => '<span class="type">resource</span> <span class="methodname">eio_fchown</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]]] )',
  'eio_fdatasync' => '<span class="type">resource</span> <span class="methodname">eio_fdatasync</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_fstat' => '<span class="type">resource</span> <span class="methodname">eio_fstat</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> ] )',
  'eio_fstatvfs' => '<span class="type">resource</span> <span class="methodname">eio_fstatvfs</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> ] )',
  'eio_fsync' => '<span class="type">resource</span> <span class="methodname">eio_fsync</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_ftruncate' => '<span class="type">resource</span> <span class="methodname">eio_ftruncate</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]]] )',
  'eio_futime' => '<span class="type">resource</span> <span class="methodname">eio_futime</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$atime</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$mtime</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_get_event_stream' => '<span class="type">mixed</span> <span class="methodname">eio_get_event_stream</span> ( <span class="methodparam">void</span> )',
  'eio_get_last_error' => '<span class="type">string</span> <span class="methodname">eio_get_last_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req</code></span> )',
  'eio_grp_add' => '<span class="type">void</span> <span class="methodname">eio_grp_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grp</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$req</code></span> )',
  'eio_grp_cancel' => '<span class="type">void</span> <span class="methodname">eio_grp_cancel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grp</code></span> )',
  'eio_grp' => '<span class="type">resource</span> <span class="methodname">eio_grp</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_grp_limit' => '<span class="type">void</span> <span class="methodname">eio_grp_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code></span> )',
  'eio_init' => '<span class="type">void</span> <span class="methodname">eio_init</span> ( <span class="methodparam">void</span> )',
  'eio_link' => '<span class="type">resource</span> <span class="methodname">eio_link</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_lstat' => '<span class="type">resource</span> <span class="methodname">eio_lstat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_mkdir' => '<span class="type">resource</span> <span class="methodname">eio_mkdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_mknod' => '<span class="type">resource</span> <span class="methodname">eio_mknod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dev</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_nop' => '<span class="type">resource</span> <span class="methodname">eio_nop</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_npending' => '<span class="type">int</span> <span class="methodname">eio_npending</span> ( <span class="methodparam">void</span> )',
  'eio_nready' => '<span class="type">int</span> <span class="methodname">eio_nready</span> ( <span class="methodparam">void</span> )',
  'eio_nreqs' => '<span class="type">int</span> <span class="methodname">eio_nreqs</span> ( <span class="methodparam">void</span> )',
  'eio_nthreads' => '<span class="type">int</span> <span class="methodname">eio_nthreads</span> ( <span class="methodparam">void</span> )',
  'eio_open' => '<span class="type">resource</span> <span class="methodname">eio_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_poll' => '<span class="type">int</span> <span class="methodname">eio_poll</span> ( <span class="methodparam">void</span> )',
  'eio_readahead' => '<span class="type">resource</span> <span class="methodname">eio_readahead</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_readdir' => '<span class="type">resource</span> <span class="methodname">eio_readdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_read' => '<span class="type">resource</span> <span class="methodname">eio_read</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_readlink' => '<span class="type">resource</span> <span class="methodname">eio_readlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_realpath' => '<span class="type">resource</span> <span class="methodname">eio_realpath</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_rename' => '<span class="type">resource</span> <span class="methodname">eio_rename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_rmdir' => '<span class="type">resource</span> <span class="methodname">eio_rmdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_seek' => '<span class="type">resource</span> <span class="methodname">eio_seek</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$whence</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_sendfile' => '<span class="type">resource</span> <span class="methodname">eio_sendfile</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$out_fd</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$in_fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> ]]] )',
  'eio_set_max_idle' => '<span class="type">void</span> <span class="methodname">eio_set_max_idle</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$nthreads</code></span> )',
  'eio_set_max_parallel' => '<span class="type">void</span> <span class="methodname">eio_set_max_parallel</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$nthreads</code></span> )',
  'eio_set_max_poll_reqs' => '<span class="type">void</span> <span class="methodname">eio_set_max_poll_reqs</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$nreqs</code></span> )',
  'eio_set_max_poll_time' => '<span class="type">void</span> <span class="methodname">eio_set_max_poll_time</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$nseconds</code></span> )',
  'eio_set_min_parallel' => '<span class="type">void</span> <span class="methodname">eio_set_min_parallel</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$nthreads</code></span> )',
  'eio_stat' => '<span class="type">resource</span> <span class="methodname">eio_stat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ] )',
  'eio_statvfs' => '<span class="type">resource</span> <span class="methodname">eio_statvfs</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> ] )',
  'eio_symlink' => '<span class="type">resource</span> <span class="methodname">eio_symlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_sync_file_range' => '<span class="type">resource</span> <span class="methodname">eio_sync_file_range</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$nbytes</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_syncfs' => '<span class="type">resource</span> <span class="methodname">eio_syncfs</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_sync' => '<span class="type">resource</span> <span class="methodname">eio_sync</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_truncate' => '<span class="type">resource</span> <span class="methodname">eio_truncate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]]] )',
  'eio_unlink' => '<span class="type">resource</span> <span class="methodname">eio_unlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_utime' => '<span class="type">resource</span> <span class="methodname">eio_utime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$atime</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$mtime</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]] )',
  'eio_write' => '<span class="type">resource</span> <span class="methodname">eio_write</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pri</code><span class="initializer">= EIO_PRI_DEFAULT</span></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code><span class="initializer">= NULL</span></span> ]]]]] )',
  'empty' => '<span class="type">bool</span> <span class="methodname">empty</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'enchant_broker_describe' => '<span class="type">array</span> <span class="methodname">enchant_broker_describe</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> )',
  'enchant_broker_dict_exists' => '<span class="type">bool</span> <span class="methodname">enchant_broker_dict_exists</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tag</code></span> )',
  'enchant_broker_free_dict' => '<span class="type">bool</span> <span class="methodname">enchant_broker_free_dict</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> )',
  'enchant_broker_free' => '<span class="type">bool</span> <span class="methodname">enchant_broker_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> )',
  'enchant_broker_get_error' => '<span class="type">string</span> <span class="methodname">enchant_broker_get_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> )',
  'enchant_broker_init' => '<span class="type">resource</span> <span class="methodname">enchant_broker_init</span> ( <span class="methodparam">void</span> )',
  'enchant_broker_list_dicts' => '<span class="type">mixed</span> <span class="methodname">enchant_broker_list_dicts</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> )',
  'enchant_broker_request_dict' => '<span class="type">resource</span> <span class="methodname">enchant_broker_request_dict</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tag</code></span> )',
  'enchant_broker_request_pwl_dict' => '<span class="type">resource</span> <span class="methodname">enchant_broker_request_pwl_dict</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'enchant_broker_set_ordering' => '<span class="type">bool</span> <span class="methodname">enchant_broker_set_ordering</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$broker</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tag</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ordering</code></span> )',
  'enchant_dict_add_to_personal' => '<span class="type">void</span> <span class="methodname">enchant_dict_add_to_personal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'enchant_dict_add_to_session' => '<span class="type">void</span> <span class="methodname">enchant_dict_add_to_session</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'enchant_dict_check' => '<span class="type">bool</span> <span class="methodname">enchant_dict_check</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'enchant_dict_describe' => '<span class="type">mixed</span> <span class="methodname">enchant_dict_describe</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> )',
  'enchant_dict_get_error' => '<span class="type">string</span> <span class="methodname">enchant_dict_get_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> )',
  'enchant_dict_is_in_session' => '<span class="type">bool</span> <span class="methodname">enchant_dict_is_in_session</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'enchant_dict_quick_check' => '<span class="type">bool</span> <span class="methodname">enchant_dict_quick_check</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$suggestions</code></span> ] )',
  'enchant_dict_store_replacement' => '<span class="type">void</span> <span class="methodname">enchant_dict_store_replacement</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mis</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cor</code></span> )',
  'enchant_dict_suggest' => '<span class="type">array</span> <span class="methodname">enchant_dict_suggest</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dict</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'end' => '<span class="type">mixed</span> <span class="methodname">end</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'ereg' => '<span class="type">int</span> <span class="methodname">ereg</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$regs</code></span> ] )',
  'eregi' => '<span class="type">int</span> <span class="methodname">eregi</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$regs</code></span> ] )',
  'eregi_replace' => '<span class="type">string</span> <span class="methodname">eregi_replace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'ereg_replace' => '<span class="type">string</span> <span class="methodname">ereg_replace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'error_get_last' => '<span class="type">array</span> <span class="methodname">error_get_last</span> ( <span class="methodparam">void</span> )',
  'error_log' => '<span class="type">bool</span> <span class="methodname">error_log</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$message_type</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$destination</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$extra_headers</code></span> ]]] )',
  'error_reporting' => '<span class="type">int</span> <span class="methodname">error_reporting</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> ] )',
  'escapeshellarg' => '<span class="type">string</span> <span class="methodname">escapeshellarg</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$arg</code></span> )',
  'escapeshellcmd' => '<span class="type">string</span> <span class="methodname">escapeshellcmd</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> )',
  'eval' => '<span class="type">mixed</span> <span class="methodname">eval</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> )',
  'event_add' => '<span class="type">bool</span> <span class="methodname">event_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= -1</span></span> ] )',
  'event_base_free' => '<span class="type">void</span> <span class="methodname">event_base_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> )',
  'event_base_loopbreak' => '<span class="type">bool</span> <span class="methodname">event_base_loopbreak</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> )',
  'event_base_loopexit' => '<span class="type">bool</span> <span class="methodname">event_base_loopexit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= -1</span></span> ] )',
  'event_base_loop' => '<span class="type">int</span> <span class="methodname">event_base_loop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'event_base_new' => '<span class="type">resource</span> <span class="methodname">event_base_new</span> ( <span class="methodparam">void</span> )',
  'event_base_priority_init' => '<span class="type">bool</span> <span class="methodname">event_base_priority_init</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$npriorities</code></span> )',
  'event_base_set' => '<span class="type">bool</span> <span class="methodname">event_base_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> )',
  'event_buffer_base_set' => '<span class="type">bool</span> <span class="methodname">event_buffer_base_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event_base</code></span> )',
  'event_buffer_disable' => '<span class="type">bool</span> <span class="methodname">event_buffer_disable</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$events</code></span> )',
  'event_buffer_enable' => '<span class="type">bool</span> <span class="methodname">event_buffer_enable</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$events</code></span> )',
  'event_buffer_fd_set' => '<span class="type">void</span> <span class="methodname">event_buffer_fd_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fd</code></span> )',
  'event_buffer_free' => '<span class="type">void</span> <span class="methodname">event_buffer_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> )',
  'event_buffer_new' => '<span class="type">resource</span> <span class="methodname">event_buffer_new</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$readcb</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$writecb</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$errorcb</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'event_buffer_priority_set' => '<span class="type">bool</span> <span class="methodname">event_buffer_priority_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$priority</code></span> )',
  'event_buffer_read' => '<span class="type">string</span> <span class="methodname">event_buffer_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$data_size</code></span> )',
  'event_buffer_set_callback' => '<span class="type">bool</span> <span class="methodname">event_buffer_set_callback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$readcb</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$writecb</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$errorcb</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'event_buffer_timeout_set' => '<span class="type">void</span> <span class="methodname">event_buffer_timeout_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$read_timeout</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$write_timeout</code></span> )',
  'event_buffer_watermark_set' => '<span class="type">void</span> <span class="methodname">event_buffer_watermark_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$events</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lowmark</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$highmark</code></span> )',
  'event_buffer_write' => '<span class="type">bool</span> <span class="methodname">event_buffer_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bevent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$data_size</code><span class="initializer">= -1</span></span> ] )',
  'event_del' => '<span class="type">bool</span> <span class="methodname">event_del</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> )',
  'event_free' => '<span class="type">void</span> <span class="methodname">event_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> )',
  'event_new' => '<span class="type">resource</span> <span class="methodname">event_new</span> ( <span class="methodparam">void</span> )',
  'event_set' => '<span class="type">bool</span> <span class="methodname">event_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$fd</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$events</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'exec' => '<span class="type">string</span> <span class="methodname">exec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$output</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$return_var</code></span> ]] )',
  'exif_imagetype' => '<span class="type">int</span> <span class="methodname">exif_imagetype</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'exif_read_data' => '<span class="type">array</span> <span class="methodname">exif_read_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sections</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$arrays</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$thumbnail</code><span class="initializer">= false</span></span> ]]] )',
  'exif_tagname' => '<span class="type">string</span> <span class="methodname">exif_tagname</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'exif_thumbnail' => '<span class="type">string</span> <span class="methodname">exif_thumbnail</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$width</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$imagetype</code></span> ]]] )',
  'exit' => '<span class="type">void</span> <span class="methodname">exit</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$status</code></span> ] ) <span class="type">void</span> <span class="methodname">exit</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'expect_expectl' => '<span class="type">int</span> <span class="methodname">expect_expectl</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$expect</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$cases</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$match</code></span> ] )',
  'expect_popen' => '<span class="type">resource</span> <span class="methodname">expect_popen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> )',
  'exp' => '<span class="type">float</span> <span class="methodname">exp</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'explode' => '<span class="type">array</span> <span class="methodname">explode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code></span> ] )',
  'expm1' => '<span class="type">float</span> <span class="methodname">expm1</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'extension_loaded' => '<span class="type">bool</span> <span class="methodname">extension_loaded</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'extract' => '<span class="type">int</span> <span class="methodname">extract</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= EXTR_OVERWRITE</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'ezmlm_hash' => '<span class="type">int</span> <span class="methodname">ezmlm_hash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$addr</code></span> )',
  'fam_cancel_monitor' => '<span class="type">bool</span> <span class="methodname">fam_cancel_monitor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam_monitor</code></span> )',
  'fam_close' => '<span class="type">void</span> <span class="methodname">fam_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> )',
  'fam_monitor_collection' => '<span class="type">resource</span> <span class="methodname">fam_monitor_collection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mask</code></span> )',
  'fam_monitor_directory' => '<span class="type">resource</span> <span class="methodname">fam_monitor_directory</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirname</code></span> )',
  'fam_monitor_file' => '<span class="type">resource</span> <span class="methodname">fam_monitor_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fam_next_event' => '<span class="type">array</span> <span class="methodname">fam_next_event</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> )',
  'fam_open' => '<span class="type">resource</span> <span class="methodname">fam_open</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$appname</code></span> ] )',
  'fam_pending' => '<span class="type">int</span> <span class="methodname">fam_pending</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> )',
  'fam_resume_monitor' => '<span class="type">bool</span> <span class="methodname">fam_resume_monitor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam_monitor</code></span> )',
  'fam_suspend_monitor' => '<span class="type">bool</span> <span class="methodname">fam_suspend_monitor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fam_monitor</code></span> )',
  'fann_cascadetrain_on_data' => '<span class="type">bool</span> <span class="methodname">fann_cascadetrain_on_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_neurons</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neurons_between_reports</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$desired_error</code></span> )',
  'fann_cascadetrain_on_file' => '<span class="type">bool</span> <span class="methodname">fann_cascadetrain_on_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_neurons</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neurons_between_reports</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$desired_error</code></span> )',
  'fann_clear_scaling_params' => '<span class="type">bool</span> <span class="methodname">fann_clear_scaling_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_copy' => '<span class="type">resource</span> <span class="methodname">fann_copy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_create_from_file' => '<span class="type">resource</span> <span class="methodname">fann_create_from_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$configuration_file</code></span> )',
  'fann_create_shortcut_array' => '<span class="type">resource</span> <span class="methodname">fann_create_shortcut_array</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$layers</code></span> )',
  'fann_create_shortcut' => '<span class="type">reference</span> <span class="methodname">fann_create_shortcut</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> ] )',
  'fann_create_sparse_array' => '<span class="type">ReturnType</span> <span class="methodname">fann_create_sparse_array</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$connection_rate</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$layers</code></span> )',
  'fann_create_sparse' => '<span class="type">ReturnType</span> <span class="methodname">fann_create_sparse</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$connection_rate</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> ] )',
  'fann_create_standard_array' => '<span class="type">resource</span> <span class="methodname">fann_create_standard_array</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$layers</code></span> )',
  'fann_create_standard' => '<span class="type">resource</span> <span class="methodname">fann_create_standard</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_layers</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_neurons2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> ] )',
  'fann_create_train_from_callback' => '<span class="type">resource</span> <span class="methodname">fann_create_train_from_callback</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_input</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_output</code></span> , <span class="methodparam"><span class="type">collable</span> <code class="parameter">$user_function</code></span> )',
  'fann_create_train' => '<span class="type">resource</span> <span class="methodname">fann_create_train</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_input</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_output</code></span> )',
  'fann_descale_input' => '<span class="type">bool</span> <span class="methodname">fann_descale_input</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input_vector</code></span> )',
  'fann_descale_output' => '<span class="type">bool</span> <span class="methodname">fann_descale_output</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$output_vector</code></span> )',
  'fann_descale_train' => '<span class="type">bool</span> <span class="methodname">fann_descale_train</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> )',
  'fann_destroy' => '<span class="type">bool</span> <span class="methodname">fann_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_destroy_train' => '<span class="type">bool</span> <span class="methodname">fann_destroy_train</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> )',
  'fann_duplicate_train_data' => '<span class="type">resource</span> <span class="methodname">fann_duplicate_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_get_activation_function' => '<span class="type">int</span> <span class="methodname">fann_get_activation_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neuron</code></span> )',
  'fann_get_activation_steepness' => '<span class="type">float</span> <span class="methodname">fann_get_activation_steepness</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neuron</code></span> )',
  'fann_get_bias_array' => '<span class="type">array</span> <span class="methodname">fann_get_bias_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_bit_fail' => '<span class="type">int</span> <span class="methodname">fann_get_bit_fail</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_bit_fail_limit' => '<span class="type">float</span> <span class="methodname">fann_get_bit_fail_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_activation_functions_count' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_activation_functions_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_activation_functions' => '<span class="type">array</span> <span class="methodname">fann_get_cascade_activation_functions</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_activation_steepnesses_count' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_activation_steepnesses_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_activation_steepnesses' => '<span class="type">array</span> <span class="methodname">fann_get_cascade_activation_steepnesses</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_candidate_change_fraction' => '<span class="type">float</span> <span class="methodname">fann_get_cascade_candidate_change_fraction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_candidate_limit' => '<span class="type">float</span> <span class="methodname">fann_get_cascade_candidate_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_candidate_stagnation_epochs' => '<span class="type">float</span> <span class="methodname">fann_get_cascade_candidate_stagnation_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_max_cand_epochs' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_max_cand_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_max_out_epochs' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_max_out_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_min_cand_epochs' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_min_cand_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_min_out_epochs' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_min_out_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_num_candidate_groups' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_num_candidate_groups</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_num_candidates' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_num_candidates</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_output_change_fraction' => '<span class="type">float</span> <span class="methodname">fann_get_cascade_output_change_fraction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_output_stagnation_epochs' => '<span class="type">int</span> <span class="methodname">fann_get_cascade_output_stagnation_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_cascade_weight_multiplier' => '<span class="type">float</span> <span class="methodname">fann_get_cascade_weight_multiplier</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_connection_array' => '<span class="type">array</span> <span class="methodname">fann_get_connection_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_connection_rate' => '<span class="type">float</span> <span class="methodname">fann_get_connection_rate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_errno' => '<span class="type">int</span> <span class="methodname">fann_get_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$errdat</code></span> )',
  'fann_get_errstr' => '<span class="type">string</span> <span class="methodname">fann_get_errstr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$errdat</code></span> )',
  'fann_get_layer_array' => '<span class="type">array</span> <span class="methodname">fann_get_layer_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_learning_momentum' => '<span class="type">float</span> <span class="methodname">fann_get_learning_momentum</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_learning_rate' => '<span class="type">float</span> <span class="methodname">fann_get_learning_rate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_mse' => '<span class="type">float</span> <span class="methodname">fann_get_MSE</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_network_type' => '<span class="type">int</span> <span class="methodname">fann_get_network_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_num_input' => '<span class="type">int</span> <span class="methodname">fann_get_num_input</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_num_layers' => '<span class="type">int</span> <span class="methodname">fann_get_num_layers</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_num_output' => '<span class="type">int</span> <span class="methodname">fann_get_num_output</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_quickprop_decay' => '<span class="type">float</span> <span class="methodname">fann_get_quickprop_decay</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_quickprop_mu' => '<span class="type">float</span> <span class="methodname">fann_get_quickprop_mu</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_rprop_decrease_factor' => '<span class="type">float</span> <span class="methodname">fann_get_rprop_decrease_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_rprop_delta_max' => '<span class="type">float</span> <span class="methodname">fann_get_rprop_delta_max</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_rprop_delta_min' => '<span class="type">float</span> <span class="methodname">fann_get_rprop_delta_min</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_rprop_delta_zero' => '<span class="type">ReturnType</span> <span class="methodname">fann_get_rprop_delta_zero</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_rprop_increase_factor' => '<span class="type">float</span> <span class="methodname">fann_get_rprop_increase_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_sarprop_step_error_shift' => '<span class="type">float</span> <span class="methodname">fann_get_sarprop_step_error_shift</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_sarprop_step_error_threshold_factor' => '<span class="type">float</span> <span class="methodname">fann_get_sarprop_step_error_threshold_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_sarprop_temperature' => '<span class="type">float</span> <span class="methodname">fann_get_sarprop_temperature</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_sarprop_weight_decay_shift' => '<span class="type">float</span> <span class="methodname">fann_get_sarprop_weight_decay_shift</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_total_connections' => '<span class="type">int</span> <span class="methodname">fann_get_total_connections</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_total_neurons' => '<span class="type">int</span> <span class="methodname">fann_get_total_neurons</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_train_error_function' => '<span class="type">int</span> <span class="methodname">fann_get_train_error_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_training_algorithm' => '<span class="type">int</span> <span class="methodname">fann_get_training_algorithm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_get_train_stop_function' => '<span class="type">int</span> <span class="methodname">fann_get_train_stop_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> )',
  'fann_init_weights' => '<span class="type">bool</span> <span class="methodname">fann_init_weights</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> )',
  'fann_length_train_data' => '<span class="type">int</span> <span class="methodname">fann_length_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_merge_train_data' => '<span class="type">resource</span> <span class="methodname">fann_merge_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data1</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data2</code></span> )',
  'fann_num_input_train_data' => '<span class="type">int</span> <span class="methodname">fann_num_input_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_num_output_train_data' => '<span class="type">int</span> <span class="methodname">fann_num_output_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_print_error' => '<span class="type">void</span> <span class="methodname">fann_print_error</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$errdat</code></span> )',
  'fann_randomize_weights' => '<span class="type">bool</span> <span class="methodname">fann_randomize_weights</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$min_weight</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$max_weight</code></span> )',
  'fann_read_train_from_file' => '<span class="type">resource</span> <span class="methodname">fann_read_train_from_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fann_reset_errno' => '<span class="type">void</span> <span class="methodname">fann_reset_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$errdat</code></span> )',
  'fann_reset_errstr' => '<span class="type">void</span> <span class="methodname">fann_reset_errstr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$errdat</code></span> )',
  'fann_reset_mse' => '<span class="type">bool</span> <span class="methodname">fann_reset_MSE</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ann</code></span> )',
  'fann_run' => '<span class="type">array</span> <span class="methodname">fann_run</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input</code></span> )',
  'fann_save' => '<span class="type">bool</span> <span class="methodname">fann_save</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$configuration_file</code></span> )',
  'fann_save_train' => '<span class="type">bool</span> <span class="methodname">fann_save_train</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'fann_scale_input' => '<span class="type">bool</span> <span class="methodname">fann_scale_input</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input_vector</code></span> )',
  'fann_scale_input_train_data' => '<span class="type">bool</span> <span class="methodname">fann_scale_input_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_max</code></span> )',
  'fann_scale_output' => '<span class="type">bool</span> <span class="methodname">fann_scale_output</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$output_vector</code></span> )',
  'fann_scale_output_train_data' => '<span class="type">bool</span> <span class="methodname">fann_scale_output_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_max</code></span> )',
  'fann_scale_train_data' => '<span class="type">bool</span> <span class="methodname">fann_scale_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_max</code></span> )',
  'fann_scale_train' => '<span class="type">bool</span> <span class="methodname">fann_scale_train</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> )',
  'fann_set_activation_function_hidden' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_function_hidden</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$activation_function</code></span> )',
  'fann_set_activation_function' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$activation_function</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neuron</code></span> )',
  'fann_set_activation_function_layer' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_function_layer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$activation_function</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> )',
  'fann_set_activation_function_output' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_function_output</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$activation_function</code></span> )',
  'fann_set_activation_steepness_hidden' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_steepness_hidden</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$activation_steepness</code></span> )',
  'fann_set_activation_steepness' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_steepness</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$activation_steepness</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$neuron</code></span> )',
  'fann_set_activation_steepness_layer' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_steepness_layer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$activation_steepness</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> )',
  'fann_set_activation_steepness_output' => '<span class="type">bool</span> <span class="methodname">fann_set_activation_steepness_output</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$activation_steepness</code></span> )',
  'fann_set_bit_fail_limit' => '<span class="type">bool</span> <span class="methodname">fann_set_bit_fail_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$bit_fail_limit</code></span> )',
  'fann_set_callback' => '<span class="type">bool</span> <span class="methodname">fann_set_callback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">collable</span> <code class="parameter">$callback</code></span> )',
  'fann_set_cascade_activation_functions' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_activation_functions</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$cascade_activation_functions</code></span> )',
  'fann_set_cascade_activation_steepnesses' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_activation_steepnesses</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$cascade_activation_steepnesses_count</code></span> )',
  'fann_set_cascade_candidate_change_fraction' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_candidate_change_fraction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$cascade_candidate_change_fraction</code></span> )',
  'fann_set_cascade_candidate_limit' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_candidate_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$cascade_candidate_limit</code></span> )',
  'fann_set_cascade_candidate_stagnation_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_candidate_stagnation_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_candidate_stagnation_epochs</code></span> )',
  'fann_set_cascade_max_cand_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_max_cand_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_max_cand_epochs</code></span> )',
  'fann_set_cascade_max_out_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_max_out_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_max_out_epochs</code></span> )',
  'fann_set_cascade_min_cand_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_min_cand_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_min_cand_epochs</code></span> )',
  'fann_set_cascade_min_out_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_min_out_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_min_out_epochs</code></span> )',
  'fann_set_cascade_num_candidate_groups' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_num_candidate_groups</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_num_candidate_groups</code></span> )',
  'fann_set_cascade_output_change_fraction' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_output_change_fraction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$cascade_output_change_fraction</code></span> )',
  'fann_set_cascade_output_stagnation_epochs' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_output_stagnation_epochs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cascade_output_stagnation_epochs</code></span> )',
  'fann_set_cascade_weight_multiplier' => '<span class="type">bool</span> <span class="methodname">fann_set_cascade_weight_multiplier</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$cascade_weight_multiplier</code></span> )',
  'fann_set_error_log' => '<span class="type">void</span> <span class="methodname">fann_set_error_log</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$errdat</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$log_file</code></span> )',
  'fann_set_input_scaling_params' => '<span class="type">bool</span> <span class="methodname">fann_set_input_scaling_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_input_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_input_max</code></span> )',
  'fann_set_learning_momentum' => '<span class="type">bool</span> <span class="methodname">fann_set_learning_momentum</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$learning_momentum</code></span> )',
  'fann_set_learning_rate' => '<span class="type">bool</span> <span class="methodname">fann_set_learning_rate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$learning_rate</code></span> )',
  'fann_set_output_scaling_params' => '<span class="type">bool</span> <span class="methodname">fann_set_output_scaling_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_output_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_output_max</code></span> )',
  'fann_set_quickprop_decay' => '<span class="type">bool</span> <span class="methodname">fann_set_quickprop_decay</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$quickprop_decay</code></span> )',
  'fann_set_quickprop_mu' => '<span class="type">bool</span> <span class="methodname">fann_set_quickprop_mu</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$quickprop_mu</code></span> )',
  'fann_set_rprop_decrease_factor' => '<span class="type">bool</span> <span class="methodname">fann_set_rprop_decrease_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rprop_decrease_factor</code></span> )',
  'fann_set_rprop_delta_max' => '<span class="type">bool</span> <span class="methodname">fann_set_rprop_delta_max</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rprop_delta_max</code></span> )',
  'fann_set_rprop_delta_min' => '<span class="type">bool</span> <span class="methodname">fann_set_rprop_delta_min</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rprop_delta_min</code></span> )',
  'fann_set_rprop_delta_zero' => '<span class="type">bool</span> <span class="methodname">fann_set_rprop_delta_zero</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rprop_delta_zero</code></span> )',
  'fann_set_rprop_increase_factor' => '<span class="type">bool</span> <span class="methodname">fann_set_rprop_increase_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rprop_increase_factor</code></span> )',
  'fann_set_sarprop_step_error_shift' => '<span class="type">bool</span> <span class="methodname">fann_set_sarprop_step_error_shift</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sarprop_step_error_shift</code></span> )',
  'fann_set_sarprop_step_error_threshold_factor' => '<span class="type">bool</span> <span class="methodname">fann_set_sarprop_step_error_threshold_factor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sarprop_step_error_threshold_factor</code></span> )',
  'fann_set_sarprop_temperature' => '<span class="type">bool</span> <span class="methodname">fann_set_sarprop_temperature</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sarprop_temperature</code></span> )',
  'fann_set_sarprop_weight_decay_shift' => '<span class="type">bool</span> <span class="methodname">fann_set_sarprop_weight_decay_shift</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sarprop_weight_decay_shift</code></span> )',
  'fann_set_scaling_params' => '<span class="type">bool</span> <span class="methodname">fann_set_scaling_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_input_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_input_max</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_output_min</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$new_output_max</code></span> )',
  'fann_set_train_error_function' => '<span class="type">bool</span> <span class="methodname">fann_set_train_error_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_function</code></span> )',
  'fann_set_training_algorithm' => '<span class="type">bool</span> <span class="methodname">fann_set_training_algorithm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$training_algorithm</code></span> )',
  'fann_set_train_stop_function' => '<span class="type">bool</span> <span class="methodname">fann_set_train_stop_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$stop_function</code></span> )',
  'fann_set_weight_array' => '<span class="type">bool</span> <span class="methodname">fann_set_weight_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$connections</code></span> )',
  'fann_set_weight' => '<span class="type">bool</span> <span class="methodname">fann_set_weight</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$from_neuron</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$to_neuron</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$weight</code></span> )',
  'fann_shuffle_train_data' => '<span class="type">bool</span> <span class="methodname">fann_shuffle_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$train_data</code></span> )',
  'fann_subset_train_data' => '<span class="type">resource</span> <span class="methodname">fann_subset_train_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'fann_test_data' => '<span class="type">float</span> <span class="methodname">fann_test_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_test' => '<span class="type">bool</span> <span class="methodname">fann_test</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$desired_output</code></span> )',
  'fann_train_epoch' => '<span class="type">float</span> <span class="methodname">fann_train_epoch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> )',
  'fann_train' => '<span class="type">bool</span> <span class="methodname">fann_train</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$desired_output</code></span> )',
  'fann_train_on_data' => '<span class="type">bool</span> <span class="methodname">fann_train_on_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_epochs</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$epochs_between_reports</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$desired_error</code></span> )',
  'fann_train_on_file' => '<span class="type">bool</span> <span class="methodname">fann_train_on_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ann</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_epochs</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$epochs_between_reports</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$desired_error</code></span> )',
  'fastcgi_finish_request' => '<span class="type">boolean</span> <span class="methodname">fastcgi_finish_request</span> ( <span class="methodparam">void</span> )',
  'fbsql_affected_rows' => '<span class="type">int</span> <span class="methodname">fbsql_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_autocommit' => '<span class="type">bool</span> <span class="methodname">fbsql_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$OnOff</code></span> ] )',
  'fbsql_blob_size' => '<span class="type">int</span> <span class="methodname">fbsql_blob_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_handle</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_change_user' => '<span class="type">bool</span> <span class="methodname">fbsql_change_user</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ]] )',
  'fbsql_clob_size' => '<span class="type">int</span> <span class="methodname">fbsql_clob_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clob_handle</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_close' => '<span class="type">bool</span> <span class="methodname">fbsql_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_commit' => '<span class="type">bool</span> <span class="methodname">fbsql_commit</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_connect' => '<span class="type">resource</span> <span class="methodname">fbsql_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code><span class="initializer">= ini_get(&quot;fbsql.default_host&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code><span class="initializer">= ini_get(&quot;fbsql.default_user&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code><span class="initializer">= ini_get(&quot;fbsql.default_password&quot;)</span></span> ]]] )',
  'fbsql_create_blob' => '<span class="type">string</span> <span class="methodname">fbsql_create_blob</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_data</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_create_clob' => '<span class="type">string</span> <span class="methodname">fbsql_create_clob</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clob_data</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_create_db' => '<span class="type">bool</span> <span class="methodname">fbsql_create_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_options</code></span> ]] )',
  'fbsql_database' => '<span class="type">string</span> <span class="methodname">fbsql_database</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> ] )',
  'fbsql_database_password' => '<span class="type">string</span> <span class="methodname">fbsql_database_password</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_password</code></span> ] )',
  'fbsql_data_seek' => '<span class="type">bool</span> <span class="methodname">fbsql_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'fbsql_db_query' => '<span class="type">resource</span> <span class="methodname">fbsql_db_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_db_status' => '<span class="type">int</span> <span class="methodname">fbsql_db_status</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_drop_db' => '<span class="type">bool</span> <span class="methodname">fbsql_drop_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_errno' => '<span class="type">int</span> <span class="methodname">fbsql_errno</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_error' => '<span class="type">string</span> <span class="methodname">fbsql_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_fetch_array' => '<span class="type">array</span> <span class="methodname">fbsql_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code></span> ] )',
  'fbsql_fetch_assoc' => '<span class="type">array</span> <span class="methodname">fbsql_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_fetch_field' => '<span class="type">object</span> <span class="methodname">fbsql_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_fetch_lengths' => '<span class="type">array</span> <span class="methodname">fbsql_fetch_lengths</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_fetch_object' => '<span class="type">object</span> <span class="methodname">fbsql_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_fetch_row' => '<span class="type">array</span> <span class="methodname">fbsql_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_field_flags' => '<span class="type">string</span> <span class="methodname">fbsql_field_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_field_len' => '<span class="type">int</span> <span class="methodname">fbsql_field_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_field_name' => '<span class="type">string</span> <span class="methodname">fbsql_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span> ] )',
  'fbsql_field_seek' => '<span class="type">bool</span> <span class="methodname">fbsql_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_field_table' => '<span class="type">string</span> <span class="methodname">fbsql_field_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_field_type' => '<span class="type">string</span> <span class="methodname">fbsql_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> ] )',
  'fbsql_free_result' => '<span class="type">bool</span> <span class="methodname">fbsql_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_get_autostart_info' => '<span class="type">array</span> <span class="methodname">fbsql_get_autostart_info</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_hostname' => '<span class="type">string</span> <span class="methodname">fbsql_hostname</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$host_name</code></span> ] )',
  'fbsql_insert_id' => '<span class="type">int</span> <span class="methodname">fbsql_insert_id</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_list_dbs' => '<span class="type">resource</span> <span class="methodname">fbsql_list_dbs</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_list_fields' => '<span class="type">resource</span> <span class="methodname">fbsql_list_fields</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_list_tables' => '<span class="type">resource</span> <span class="methodname">fbsql_list_tables</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_next_result' => '<span class="type">bool</span> <span class="methodname">fbsql_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_num_fields' => '<span class="type">int</span> <span class="methodname">fbsql_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_num_rows' => '<span class="type">int</span> <span class="methodname">fbsql_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_password' => '<span class="type">string</span> <span class="methodname">fbsql_password</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> ] )',
  'fbsql_pconnect' => '<span class="type">resource</span> <span class="methodname">fbsql_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code><span class="initializer">= ini_get(&quot;fbsql.default_host&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code><span class="initializer">= ini_get(&quot;fbsql.default_user&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code><span class="initializer">= ini_get(&quot;fbsql.default_password&quot;)</span></span> ]]] )',
  'fbsql_query' => '<span class="type">resource</span> <span class="methodname">fbsql_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$batch_size</code></span> ]] )',
  'fbsql_read_blob' => '<span class="type">string</span> <span class="methodname">fbsql_read_blob</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_handle</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_read_clob' => '<span class="type">string</span> <span class="methodname">fbsql_read_clob</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clob_handle</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_result' => '<span class="type">mixed</span> <span class="methodname">fbsql_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> ]] )',
  'fbsql_rollback' => '<span class="type">bool</span> <span class="methodname">fbsql_rollback</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_rows_fetched' => '<span class="type">int</span> <span class="methodname">fbsql_rows_fetched</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'fbsql_select_db' => '<span class="type">bool</span> <span class="methodname">fbsql_select_db</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ]] )',
  'fbsql_set_characterset' => '<span class="type">void</span> <span class="methodname">fbsql_set_characterset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$characterset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$in_out_both</code></span> ] )',
  'fbsql_set_lob_mode' => '<span class="type">bool</span> <span class="methodname">fbsql_set_lob_mode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lob_mode</code></span> )',
  'fbsql_set_password' => '<span class="type">bool</span> <span class="methodname">fbsql_set_password</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_password</code></span> )',
  'fbsql_set_transaction' => '<span class="type">void</span> <span class="methodname">fbsql_set_transaction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$locking</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$isolation</code></span> )',
  'fbsql_start_db' => '<span class="type">bool</span> <span class="methodname">fbsql_start_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_options</code></span> ]] )',
  'fbsql_stop_db' => '<span class="type">bool</span> <span class="methodname">fbsql_stop_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'fbsql_tablename' => '',
  'fbsql_table_name' => '<span class="type">string</span> <span class="methodname">fbsql_table_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'fbsql_username' => '<span class="type">string</span> <span class="methodname">fbsql_username</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> ] )',
  'fbsql_warnings' => '<span class="type">bool</span> <span class="methodname">fbsql_warnings</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$OnOff</code></span> ] )',
  'fclose' => '<span class="type">bool</span> <span class="methodname">fclose</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'fdf_add_doc_javascript' => '<span class="type">bool</span> <span class="methodname">fdf_add_doc_javascript</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script_code</code></span> )',
  'fdf_add_template' => '<span class="type">bool</span> <span class="methodname">fdf_add_template</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$newpage</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$template</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rename</code></span> )',
  'fdf_close' => '<span class="type">void</span> <span class="methodname">fdf_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> )',
  'fdf_create' => '<span class="type">resource</span> <span class="methodname">fdf_create</span> ( <span class="methodparam">void</span> )',
  'fdf_enum_values' => '<span class="type">bool</span> <span class="methodname">fdf_enum_values</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$userdata</code></span> ] )',
  'fdf_errno' => '<span class="type">int</span> <span class="methodname">fdf_errno</span> ( <span class="methodparam">void</span> )',
  'fdf_error' => '<span class="type">string</span> <span class="methodname">fdf_error</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code><span class="initializer">= -1</span></span> ] )',
  'fdf_get_ap' => '<span class="type">bool</span> <span class="methodname">fdf_get_ap</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$face</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fdf_get_attachment' => '<span class="type">array</span> <span class="methodname">fdf_get_attachment</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$savepath</code></span> )',
  'fdf_get_encoding' => '<span class="type">string</span> <span class="methodname">fdf_get_encoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> )',
  'fdf_get_file' => '<span class="type">string</span> <span class="methodname">fdf_get_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> )',
  'fdf_get_flags' => '<span class="type">int</span> <span class="methodname">fdf_get_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$whichflags</code></span> )',
  'fdf_get_opt' => '<span class="type">mixed</span> <span class="methodname">fdf_get_opt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$element</code><span class="initializer">= -1</span></span> ] )',
  'fdf_get_status' => '<span class="type">string</span> <span class="methodname">fdf_get_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> )',
  'fdf_get_value' => '<span class="type">mixed</span> <span class="methodname">fdf_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code><span class="initializer">= -1</span></span> ] )',
  'fdf_get_version' => '<span class="type">string</span> <span class="methodname">fdf_get_version</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> ] )',
  'fdf_header' => '<span class="type">void</span> <span class="methodname">fdf_header</span> ( <span class="methodparam">void</span> )',
  'fdf_next_field_name' => '<span class="type">string</span> <span class="methodname">fdf_next_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> ] )',
  'fdf_open' => '<span class="type">resource</span> <span class="methodname">fdf_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fdf_open_string' => '<span class="type">resource</span> <span class="methodname">fdf_open_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$fdf_data</code></span> )',
  'fdf_remove_item' => '<span class="type">bool</span> <span class="methodname">fdf_remove_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$item</code></span> )',
  'fdf_save' => '<span class="type">bool</span> <span class="methodname">fdf_save</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'fdf_save_string' => '<span class="type">string</span> <span class="methodname">fdf_save_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> )',
  'fdf_set_ap' => '<span class="type">bool</span> <span class="methodname">fdf_set_ap</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$face</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page_number</code></span> )',
  'fdf_set_encoding' => '<span class="type">bool</span> <span class="methodname">fdf_set_encoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'fdf_set_file' => '<span class="type">bool</span> <span class="methodname">fdf_set_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$target_frame</code></span> ] )',
  'fdf_set_flags' => '<span class="type">bool</span> <span class="methodname">fdf_set_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$whichFlags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$newFlags</code></span> )',
  'fdf_set_javascript_action' => '<span class="type">bool</span> <span class="methodname">fdf_set_javascript_action</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$trigger</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span> )',
  'fdf_set_on_import_javascript' => '<span class="type">bool</span> <span class="methodname">fdf_set_on_import_javascript</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_data_import</code></span> )',
  'fdf_set_opt' => '<span class="type">bool</span> <span class="methodname">fdf_set_opt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$element</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'fdf_set_status' => '<span class="type">bool</span> <span class="methodname">fdf_set_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$status</code></span> )',
  'fdf_set_submit_form_action' => '<span class="type">bool</span> <span class="methodname">fdf_set_submit_form_action</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$trigger</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> )',
  'fdf_set_target_frame' => '<span class="type">bool</span> <span class="methodname">fdf_set_target_frame</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$frame_name</code></span> )',
  'fdf_set_value' => '<span class="type">bool</span> <span class="methodname">fdf_set_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fieldname</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$isName</code></span> ] )',
  'fdf_set_version' => '<span class="type">bool</span> <span class="methodname">fdf_set_version</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fdf_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$version</code></span> )',
  'feof' => '<span class="type">bool</span> <span class="methodname">feof</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'fflush' => '<span class="type">bool</span> <span class="methodname">fflush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'fgetc' => '<span class="type">string</span> <span class="methodname">fgetc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'fgetcsv' => '<span class="type">array</span> <span class="methodname">fgetcsv</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= &#039;,&#039;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$enclosure</code><span class="initializer">= &#039;&quot;&#039;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$escape</code><span class="initializer">= &#039;\\&#039;</span></span> ]]]] )',
  'fgets' => '<span class="type">string</span> <span class="methodname">fgets</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'fgetss' => '<span class="type">string</span> <span class="methodname">fgetss</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$allowable_tags</code></span> ]] )',
  'fileatime' => '<span class="type">int</span> <span class="methodname">fileatime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'filectime' => '<span class="type">int</span> <span class="methodname">filectime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'file_exists' => '<span class="type">bool</span> <span class="methodname">file_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'file_get_contents' => '<span class="type">string</span> <span class="methodname">file_get_contents</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_include_path</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxlen</code></span> ]]]] )',
  'filegroup' => '<span class="type">int</span> <span class="methodname">filegroup</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'file' => '<span class="type">array</span> <span class="methodname">file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]] )',
  'fileinode' => '<span class="type">int</span> <span class="methodname">fileinode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'filemtime' => '<span class="type">int</span> <span class="methodname">filemtime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fileowner' => '<span class="type">int</span> <span class="methodname">fileowner</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'fileperms' => '<span class="type">int</span> <span class="methodname">fileperms</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'filepro_fieldcount' => '<span class="type">int</span> <span class="methodname">filepro_fieldcount</span> ( <span class="methodparam">void</span> )',
  'filepro_fieldname' => '<span class="type">string</span> <span class="methodname">filepro_fieldname</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'filepro_fieldtype' => '<span class="type">string</span> <span class="methodname">filepro_fieldtype</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'filepro_fieldwidth' => '<span class="type">int</span> <span class="methodname">filepro_fieldwidth</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'filepro' => '<span class="type">bool</span> <span class="methodname">filepro</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'filepro_retrieve' => '<span class="type">string</span> <span class="methodname">filepro_retrieve</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'filepro_rowcount' => '<span class="type">int</span> <span class="methodname">filepro_rowcount</span> ( <span class="methodparam">void</span> )',
  'file_put_contents' => '<span class="type">int</span> <span class="methodname">file_put_contents</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]] )',
  'filesize' => '<span class="type">int</span> <span class="methodname">filesize</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'filetype' => '<span class="type">string</span> <span class="methodname">filetype</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'filter_has_var' => '<span class="type">bool</span> <span class="methodname">filter_has_var</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable_name</code></span> )',
  'filter_id' => '<span class="type">int</span> <span class="methodname">filter_id</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filtername</code></span> )',
  'filter_input_array' => '<span class="type">mixed</span> <span class="methodname">filter_input_array</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$definition</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$add_empty</code><span class="initializer">= true</span></span> ]] )',
  'filter_input' => '<span class="type">mixed</span> <span class="methodname">filter_input</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable_name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$filter</code><span class="initializer">= FILTER_DEFAULT</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$options</code></span> ]] )',
  'filter_list' => '<span class="type">array</span> <span class="methodname">filter_list</span> ( <span class="methodparam">void</span> )',
  'filter_var_array' => '<span class="type">mixed</span> <span class="methodname">filter_var_array</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$definition</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$add_empty</code><span class="initializer">= true</span></span> ]] )',
  'filter_var' => '<span class="type">mixed</span> <span class="methodname">filter_var</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variable</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$filter</code><span class="initializer">= FILTER_DEFAULT</span></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$options</code></span> ]] )',
  'finfo_buffer' => '<span class="type">string</span> <span class="methodname">finfo_buffer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$finfo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= FILEINFO_NONE</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] ) <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">finfo::buffer</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= FILEINFO_NONE</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'finfo_close' => '<span class="type">bool</span> <span class="methodname">finfo_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$finfo</code></span> )',
  'finfo_file' => '<span class="type">string</span> <span class="methodname">finfo_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$finfo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= FILEINFO_NONE</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] ) <span class="modifier">public</span> <span class="type">string</span> <span class="methodname">finfo::file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= FILEINFO_NONE</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'finfo_open' => '<span class="type">resource</span> <span class="methodname">finfo_open</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= FILEINFO_NONE</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$magic_file</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'finfo_set_flags' => '<span class="type">bool</span> <span class="methodname">finfo_set_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$finfo</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code></span> ) <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">finfo::set_flags</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code></span> )',
  'floatval' => '<span class="type">float</span> <span class="methodname">floatval</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'flock' => '<span class="type">bool</span> <span class="methodname">flock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$operation</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$wouldblock</code></span> ] )',
  'floor' => '<span class="type">float</span> <span class="methodname">floor</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'flush' => '<span class="type">void</span> <span class="methodname">flush</span> ( <span class="methodparam">void</span> )',
  'fmod' => '<span class="type">float</span> <span class="methodname">fmod</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'fnmatch' => '<span class="type">bool</span> <span class="methodname">fnmatch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'fopen' => '<span class="type">resource</span> <span class="methodname">fopen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_include_path</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]] )',
  'forward_static_call_array' => '<span class="type">mixed</span> <span class="methodname">forward_static_call_array</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span> )',
  'forward_static_call' => '<span class="type">mixed</span> <span class="methodname">forward_static_call</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$parameter</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'fpassthru' => '<span class="type">int</span> <span class="methodname">fpassthru</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'fprintf' => '<span class="type">int</span> <span class="methodname">fprintf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'fputcsv' => '<span class="type">int</span> <span class="methodname">fputcsv</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= &#039;,&#039;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$enclosure</code><span class="initializer">= &#039;&quot;&#039;</span></span> ]] )',
  'fputs' => '',
  'fread' => '<span class="type">string</span> <span class="methodname">fread</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'frenchtojd' => '<span class="type">int</span> <span class="methodname">frenchtojd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'fribidi_log2vis' => '<span class="type">string</span> <span class="methodname">fribidi_log2vis</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$direction</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$charset</code></span> )',
  'fscanf' => '<span class="type">mixed</span> <span class="methodname">fscanf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] )',
  'fseek' => '<span class="type">int</span> <span class="methodname">fseek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$whence</code><span class="initializer">= SEEK_SET</span></span> ] )',
  'fsockopen' => '<span class="type">resource</span> <span class="methodname">fsockopen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errno</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$errstr</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer">= ini_get(&quot;default_socket_timeout&quot;)</span></span> ]]]] )',
  'fstat' => '<span class="type">array</span> <span class="methodname">fstat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'ftell' => '<span class="type">int</span> <span class="methodname">ftell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'ftok' => '<span class="type">int</span> <span class="methodname">ftok</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$proj</code></span> )',
  'ftp_alloc' => '<span class="type">bool</span> <span class="methodname">ftp_alloc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$filesize</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$result</code></span> ] )',
  'ftp_cdup' => '<span class="type">bool</span> <span class="methodname">ftp_cdup</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> )',
  'ftp_chdir' => '<span class="type">bool</span> <span class="methodname">ftp_chdir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'ftp_chmod' => '<span class="type">int</span> <span class="methodname">ftp_chmod</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ftp_close' => '<span class="type">bool</span> <span class="methodname">ftp_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> )',
  'ftp_connect' => '<span class="type">resource</span> <span class="methodname">ftp_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 21</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 90</span></span> ]] )',
  'ftp_delete' => '<span class="type">bool</span> <span class="methodname">ftp_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'ftp_exec' => '<span class="type">bool</span> <span class="methodname">ftp_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> )',
  'ftp_fget' => '<span class="type">bool</span> <span class="methodname">ftp_fget</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resumepos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_fput' => '<span class="type">bool</span> <span class="methodname">ftp_fput</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$startpos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_get' => '<span class="type">bool</span> <span class="methodname">ftp_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resumepos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_get_option' => '<span class="type">mixed</span> <span class="methodname">ftp_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> )',
  'ftp_login' => '<span class="type">bool</span> <span class="methodname">ftp_login</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'ftp_mdtm' => '<span class="type">int</span> <span class="methodname">ftp_mdtm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> )',
  'ftp_mkdir' => '<span class="type">string</span> <span class="methodname">ftp_mkdir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'ftp_nb_continue' => '<span class="type">int</span> <span class="methodname">ftp_nb_continue</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> )',
  'ftp_nb_fget' => '<span class="type">int</span> <span class="methodname">ftp_nb_fget</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resumepos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_nb_fput' => '<span class="type">int</span> <span class="methodname">ftp_nb_fput</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$startpos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_nb_get' => '<span class="type">int</span> <span class="methodname">ftp_nb_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resumepos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_nb_put' => '<span class="type">int</span> <span class="methodname">ftp_nb_put</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$startpos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_nlist' => '<span class="type">array</span> <span class="methodname">ftp_nlist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'ftp_pasv' => '<span class="type">bool</span> <span class="methodname">ftp_pasv</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$pasv</code></span> )',
  'ftp_put' => '<span class="type">bool</span> <span class="methodname">ftp_put</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$startpos</code><span class="initializer">= 0</span></span> ] )',
  'ftp_pwd' => '<span class="type">string</span> <span class="methodname">ftp_pwd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> )',
  'ftp_quit' => '',
  'ftp_raw' => '<span class="type">array</span> <span class="methodname">ftp_raw</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> )',
  'ftp_rawlist' => '<span class="type">array</span> <span class="methodname">ftp_rawlist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= false</span></span> ] )',
  'ftp_rename' => '<span class="type">bool</span> <span class="methodname">ftp_rename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$oldname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newname</code></span> )',
  'ftp_rmdir' => '<span class="type">bool</span> <span class="methodname">ftp_rmdir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'ftp_set_option' => '<span class="type">bool</span> <span class="methodname">ftp_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'ftp_site' => '<span class="type">bool</span> <span class="methodname">ftp_site</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> )',
  'ftp_size' => '<span class="type">int</span> <span class="methodname">ftp_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> )',
  'ftp_ssl_connect' => '<span class="type">resource</span> <span class="methodname">ftp_ssl_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 21</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 90</span></span> ]] )',
  'ftp_systype' => '<span class="type">string</span> <span class="methodname">ftp_systype</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$ftp_stream</code></span> )',
  'ftruncate' => '<span class="type">bool</span> <span class="methodname">ftruncate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> )',
  'func_get_arg' => '<span class="type">mixed</span> <span class="methodname">func_get_arg</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$arg_num</code></span> )',
  'func_get_args' => '<span class="type">array</span> <span class="methodname">func_get_args</span> ( <span class="methodparam">void</span> )',
  'func_name' => '<span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">GearmanWorker::setId</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$id</code></span> )',
  'func_num_args' => '<span class="type">int</span> <span class="methodname">func_num_args</span> ( <span class="methodparam">void</span> )',
  'function_exists' => '<span class="type">bool</span> <span class="methodname">function_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> )',
  'fwrite' => '<span class="type">int</span> <span class="methodname">fwrite</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'gc_collect_cycles' => '<span class="type">int</span> <span class="methodname">gc_collect_cycles</span> ( <span class="methodparam">void</span> )',
  'gc_disable' => '<span class="type">void</span> <span class="methodname">gc_disable</span> ( <span class="methodparam">void</span> )',
  'gc_enabled' => '<span class="type">bool</span> <span class="methodname">gc_enabled</span> ( <span class="methodparam">void</span> )',
  'gc_enable' => '<span class="type">void</span> <span class="methodname">gc_enable</span> ( <span class="methodparam">void</span> )',
  'gd_info' => '<span class="type">array</span> <span class="methodname">gd_info</span> ( <span class="methodparam">void</span> )',
  'geoip_continent_code_by_name' => '<span class="type">string</span> <span class="methodname">geoip_continent_code_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_country_code3_by_name' => '<span class="type">string</span> <span class="methodname">geoip_country_code3_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_country_code_by_name' => '<span class="type">string</span> <span class="methodname">geoip_country_code_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_country_name_by_name' => '<span class="type">string</span> <span class="methodname">geoip_country_name_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_database_info' => '<span class="type">string</span> <span class="methodname">geoip_database_info</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$database</code><span class="initializer">= GEOIP_COUNTRY_EDITION</span></span> ] )',
  'geoip_db_avail' => '<span class="type">bool</span> <span class="methodname">geoip_db_avail</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$database</code></span> )',
  'geoip_db_filename' => '<span class="type">string</span> <span class="methodname">geoip_db_filename</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$database</code></span> )',
  'geoip_db_get_all_info' => '<span class="type">array</span> <span class="methodname">geoip_db_get_all_info</span> ( <span class="methodparam">void</span> )',
  'geoip_id_by_name' => '<span class="type">int</span> <span class="methodname">geoip_id_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_isp_by_name' => '<span class="type">string</span> <span class="methodname">geoip_isp_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_org_by_name' => '<span class="type">string</span> <span class="methodname">geoip_org_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_record_by_name' => '<span class="type">array</span> <span class="methodname">geoip_record_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_region_by_name' => '<span class="type">array</span> <span class="methodname">geoip_region_by_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'geoip_region_name_by_code' => '<span class="type">string</span> <span class="methodname">geoip_region_name_by_code</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$country_code</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$region_code</code></span> )',
  'geoip_time_zone_by_country_and_region' => '<span class="type">string</span> <span class="methodname">geoip_time_zone_by_country_and_region</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$country_code</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$region_code</code></span> ] )',
  'getallheaders' => '<span class="type">array</span> <span class="methodname">getallheaders</span> ( <span class="methodparam">void</span> )',
  'get_browser' => '<span class="type">mixed</span> <span class="methodname">get_browser</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_agent</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return_array</code><span class="initializer">= false</span></span> ]] )',
  'get_called_class' => '<span class="type">string</span> <span class="methodname">get_called_class</span> ( <span class="methodparam">void</span> )',
  'get_cfg_var' => '<span class="type">string</span> <span class="methodname">get_cfg_var</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span> )',
  'get_class' => '<span class="type">string</span> <span class="methodname">get_class</span> ([ <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'get_class_methods' => '<span class="type">array</span> <span class="methodname">get_class_methods</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$class_name</code></span> )',
  'get_class_vars' => '<span class="type">array</span> <span class="methodname">get_class_vars</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> )',
  'get_current_user' => '<span class="type">string</span> <span class="methodname">get_current_user</span> ( <span class="methodparam">void</span> )',
  'getcwd' => '<span class="type">string</span> <span class="methodname">getcwd</span> ( <span class="methodparam">void</span> )',
  'getdate' => '<span class="type">array</span> <span class="methodname">getdate</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'get_declared_classes' => '<span class="type">array</span> <span class="methodname">get_declared_classes</span> ( <span class="methodparam">void</span> )',
  'get_declared_interfaces' => '<span class="type">array</span> <span class="methodname">get_declared_interfaces</span> ( <span class="methodparam">void</span> )',
  'get_declared_traits' => '<span class="type">array</span> <span class="methodname">get_declared_traits</span> ( <span class="methodparam">void</span> )',
  'get_defined_constants' => '<span class="type">array</span> <span class="methodname">get_defined_constants</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$categorize</code><span class="initializer">= false</span></span> ] )',
  'get_defined_functions' => '<span class="type">array</span> <span class="methodname">get_defined_functions</span> ( <span class="methodparam">void</span> )',
  'get_defined_vars' => '<span class="type">array</span> <span class="methodname">get_defined_vars</span> ( <span class="methodparam">void</span> )',
  'getenv' => '<span class="type">string</span> <span class="methodname">getenv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span> )',
  'get_extension_funcs' => '<span class="type">array</span> <span class="methodname">get_extension_funcs</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$module_name</code></span> )',
  'get_headers' => '<span class="type">array</span> <span class="methodname">get_headers</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code><span class="initializer">= 0</span></span> ] )',
  'gethostbyaddr' => '<span class="type">string</span> <span class="methodname">gethostbyaddr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ip_address</code></span> )',
  'gethostbyname' => '<span class="type">string</span> <span class="methodname">gethostbyname</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'gethostbynamel' => '<span class="type">array</span> <span class="methodname">gethostbynamel</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> )',
  'gethostname' => '<span class="type">string</span> <span class="methodname">gethostname</span> ( <span class="methodparam">void</span> )',
  'get_html_translation_table' => '<span class="type">array</span> <span class="methodname">get_html_translation_table</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code><span class="initializer">= HTML_SPECIALCHARS</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= ENT_COMPAT | ENT_HTML401</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= &#039;UTF-8&#039;</span></span> ]]] )',
  'getimagesizefromstring' => '<span class="type">array</span> <span class="methodname">getimagesizefromstring</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$imagedata</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$imageinfo</code></span> ] )',
  'getimagesize' => '<span class="type">array</span> <span class="methodname">getimagesize</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$imageinfo</code></span> ] )',
  'get_included_files' => '<span class="type">array</span> <span class="methodname">get_included_files</span> ( <span class="methodparam">void</span> )',
  'get_include_path' => '<span class="type">string</span> <span class="methodname">get_include_path</span> ( <span class="methodparam">void</span> )',
  'getlastmod' => '<span class="type">int</span> <span class="methodname">getlastmod</span> ( <span class="methodparam">void</span> )',
  'get_loaded_extensions' => '<span class="type">array</span> <span class="methodname">get_loaded_extensions</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$zend_extensions</code><span class="initializer">= false</span></span> ] )',
  'get_magic_quotes_gpc' => '<span class="type">bool</span> <span class="methodname">get_magic_quotes_gpc</span> ( <span class="methodparam">void</span> )',
  'get_magic_quotes_runtime' => '<span class="type">bool</span> <span class="methodname">get_magic_quotes_runtime</span> ( <span class="methodparam">void</span> )',
  'get_meta_tags' => '<span class="type">array</span> <span class="methodname">get_meta_tags</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_include_path</code><span class="initializer">= false</span></span> ] )',
  'getmxrr' => '<span class="type">bool</span> <span class="methodname">getmxrr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$mxhosts</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$weight</code></span> ] )',
  'getmygid' => '<span class="type">int</span> <span class="methodname">getmygid</span> ( <span class="methodparam">void</span> )',
  'getmyinode' => '<span class="type">int</span> <span class="methodname">getmyinode</span> ( <span class="methodparam">void</span> )',
  'getmypid' => '<span class="type">int</span> <span class="methodname">getmypid</span> ( <span class="methodparam">void</span> )',
  'getmyuid' => '<span class="type">int</span> <span class="methodname">getmyuid</span> ( <span class="methodparam">void</span> )',
  'get_object_vars' => '<span class="type">array</span> <span class="methodname">get_object_vars</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> )',
  'getopt' => '<span class="type">array</span> <span class="methodname">getopt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$longopts</code></span> ] )',
  'get_parent_class' => '<span class="type">string</span> <span class="methodname">get_parent_class</span> ([ <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object</code></span> ] )',
  'getprotobyname' => '<span class="type">int</span> <span class="methodname">getprotobyname</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'getprotobynumber' => '<span class="type">string</span> <span class="methodname">getprotobynumber</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span> )',
  'getrandmax' => '<span class="type">int</span> <span class="methodname">getrandmax</span> ( <span class="methodparam">void</span> )',
  'get_required_files' => '',
  'get_resource_type' => '<span class="type">string</span> <span class="methodname">get_resource_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'getrusage' => '<span class="type">array</span> <span class="methodname">getrusage</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$who</code><span class="initializer">= 0</span></span> ] )',
  'getservbyname' => '<span class="type">int</span> <span class="methodname">getservbyname</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$service</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$protocol</code></span> )',
  'getservbyport' => '<span class="type">string</span> <span class="methodname">getservbyport</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$protocol</code></span> )',
  'gettext' => '<span class="type">string</span> <span class="methodname">gettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> )',
  'gettimeofday' => '<span class="type">mixed</span> <span class="methodname">gettimeofday</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return_float</code><span class="initializer">= false</span></span> ] )',
  'gettype' => '<span class="type">string</span> <span class="methodname">gettype</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'glob' => '<span class="type">array</span> <span class="methodname">glob</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'gmdate' => '<span class="type">string</span> <span class="methodname">gmdate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'gmmktime' => '<span class="type">int</span> <span class="methodname">gmmktime</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$hour</code><span class="initializer">= gmdate(&quot;H&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$minute</code><span class="initializer">= gmdate(&quot;i&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$second</code><span class="initializer">= gmdate(&quot;s&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code><span class="initializer">= gmdate(&quot;n&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code><span class="initializer">= gmdate(&quot;j&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code><span class="initializer">= gmdate(&quot;Y&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$is_dst</code><span class="initializer">= -1</span></span> ]]]]]]] )',
  'gmp_abs' => '<span class="type">resource</span> <span class="methodname">gmp_abs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_add' => '<span class="type">resource</span> <span class="methodname">gmp_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_and' => '<span class="type">resource</span> <span class="methodname">gmp_and</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_clrbit' => '<span class="type">void</span> <span class="methodname">gmp_clrbit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'gmp_cmp' => '<span class="type">int</span> <span class="methodname">gmp_cmp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_com' => '<span class="type">resource</span> <span class="methodname">gmp_com</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_divexact' => '<span class="type">resource</span> <span class="methodname">gmp_divexact</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$d</code></span> )',
  'gmp_div' => '',
  'gmp_div_q' => '<span class="type">resource</span> <span class="methodname">gmp_div_q</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$round</code><span class="initializer">= GMP_ROUND_ZERO</span></span> ] )',
  'gmp_div_qr' => '<span class="type">array</span> <span class="methodname">gmp_div_qr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$d</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$round</code><span class="initializer">= GMP_ROUND_ZERO</span></span> ] )',
  'gmp_div_r' => '<span class="type">resource</span> <span class="methodname">gmp_div_r</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$d</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$round</code><span class="initializer">= GMP_ROUND_ZERO</span></span> ] )',
  'gmp_fact' => '<span class="type">resource</span> <span class="methodname">gmp_fact</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span> )',
  'gmp_gcdext' => '<span class="type">array</span> <span class="methodname">gmp_gcdext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_gcd' => '<span class="type">resource</span> <span class="methodname">gmp_gcd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_hamdist' => '<span class="type">int</span> <span class="methodname">gmp_hamdist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_init' => '<span class="type">resource</span> <span class="methodname">gmp_init</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$base</code><span class="initializer">= 0</span></span> ] )',
  'gmp_intval' => '<span class="type">int</span> <span class="methodname">gmp_intval</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$gmpnumber</code></span> )',
  'gmp_invert' => '<span class="type">resource</span> <span class="methodname">gmp_invert</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_jacobi' => '<span class="type">int</span> <span class="methodname">gmp_jacobi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'gmp_legendre' => '<span class="type">int</span> <span class="methodname">gmp_legendre</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'gmp_mod' => '<span class="type">resource</span> <span class="methodname">gmp_mod</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$d</code></span> )',
  'gmp_mul' => '<span class="type">resource</span> <span class="methodname">gmp_mul</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_neg' => '<span class="type">resource</span> <span class="methodname">gmp_neg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_nextprime' => '<span class="type">resource</span> <span class="methodname">gmp_nextprime</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$a</code></span> )',
  'gmp_or' => '<span class="type">resource</span> <span class="methodname">gmp_or</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_perfect_square' => '<span class="type">bool</span> <span class="methodname">gmp_perfect_square</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_popcount' => '<span class="type">int</span> <span class="methodname">gmp_popcount</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_pow' => '<span class="type">resource</span> <span class="methodname">gmp_pow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$exp</code></span> )',
  'gmp_powm' => '<span class="type">resource</span> <span class="methodname">gmp_powm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$exp</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mod</code></span> )',
  'gmp_prob_prime' => '<span class="type">int</span> <span class="methodname">gmp_prob_prime</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$reps</code><span class="initializer">= 10</span></span> ] )',
  'gmp_random' => '<span class="type">resource</span> <span class="methodname">gmp_random</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$limiter</code><span class="initializer">= 20</span></span> ] )',
  'gmp_scan0' => '<span class="type">int</span> <span class="methodname">gmp_scan0</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> )',
  'gmp_scan1' => '<span class="type">int</span> <span class="methodname">gmp_scan1</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> )',
  'gmp_setbit' => '<span class="type">void</span> <span class="methodname">gmp_setbit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$a</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$bit_on</code><span class="initializer">= true</span></span> ] )',
  'gmp_sign' => '<span class="type">int</span> <span class="methodname">gmp_sign</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_sqrt' => '<span class="type">resource</span> <span class="methodname">gmp_sqrt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_sqrtrem' => '<span class="type">array</span> <span class="methodname">gmp_sqrtrem</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> )',
  'gmp_strval' => '<span class="type">string</span> <span class="methodname">gmp_strval</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$gmpnumber</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$base</code><span class="initializer">= 10</span></span> ] )',
  'gmp_sub' => '<span class="type">resource</span> <span class="methodname">gmp_sub</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmp_testbit' => '<span class="type">bool</span> <span class="methodname">gmp_testbit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'gmp_xor' => '<span class="type">resource</span> <span class="methodname">gmp_xor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$b</code></span> )',
  'gmstrftime' => '<span class="type">string</span> <span class="methodname">gmstrftime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'gnupg_adddecryptkey' => '<span class="type">bool</span> <span class="methodname">gnupg_adddecryptkey</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fingerprint</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> )',
  'gnupg_addencryptkey' => '<span class="type">bool</span> <span class="methodname">gnupg_addencryptkey</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fingerprint</code></span> )',
  'gnupg_addsignkey' => '<span class="type">bool</span> <span class="methodname">gnupg_addsignkey</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fingerprint</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> ] )',
  'gnupg_cleardecryptkeys' => '<span class="type">bool</span> <span class="methodname">gnupg_cleardecryptkeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> )',
  'gnupg_clearencryptkeys' => '<span class="type">bool</span> <span class="methodname">gnupg_clearencryptkeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> )',
  'gnupg_clearsignkeys' => '<span class="type">bool</span> <span class="methodname">gnupg_clearsignkeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> )',
  'gnupg_decrypt' => '<span class="type">string</span> <span class="methodname">gnupg_decrypt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'gnupg_decryptverify' => '<span class="type">array</span> <span class="methodname">gnupg_decryptverify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$plaintext</code></span> )',
  'gnupg_encrypt' => '<span class="type">string</span> <span class="methodname">gnupg_encrypt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$plaintext</code></span> )',
  'gnupg_encryptsign' => '<span class="type">string</span> <span class="methodname">gnupg_encryptsign</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$plaintext</code></span> )',
  'gnupg_export' => '<span class="type">string</span> <span class="methodname">gnupg_export</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fingerprint</code></span> )',
  'gnupg_geterror' => '<span class="type">string</span> <span class="methodname">gnupg_geterror</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> )',
  'gnupg_getprotocol' => '<span class="type">int</span> <span class="methodname">gnupg_getprotocol</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> )',
  'gnupg_import' => '<span class="type">array</span> <span class="methodname">gnupg_import</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keydata</code></span> )',
  'gnupg_init' => '<span class="type">resource</span> <span class="methodname">gnupg_init</span> ( <span class="methodparam">void</span> )',
  'gnupg_keyinfo' => '<span class="type">array</span> <span class="methodname">gnupg_keyinfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'gnupg_setarmor' => '<span class="type">bool</span> <span class="methodname">gnupg_setarmor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$armor</code></span> )',
  'gnupg_seterrormode' => '<span class="type">void</span> <span class="methodname">gnupg_seterrormode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$errormode</code></span> )',
  'gnupg_setsignmode' => '<span class="type">bool</span> <span class="methodname">gnupg_setsignmode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$signmode</code></span> )',
  'gnupg_sign' => '<span class="type">string</span> <span class="methodname">gnupg_sign</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$plaintext</code></span> )',
  'gnupg_verify' => '<span class="type">array</span> <span class="methodname">gnupg_verify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$signed_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$signature</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$plaintext</code></span> ] )',
  'gopher_parsedir' => '<span class="type">array</span> <span class="methodname">gopher_parsedir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirent</code></span> )',
  'grapheme_extract' => '<span class="type">string</span> <span class="methodname">grapheme_extract</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$extract_type</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$next</code></span> ]]] )',
  'grapheme_stripos' => '<span class="type">int</span> <span class="methodname">grapheme_stripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'grapheme_stristr' => '<span class="type">string</span> <span class="methodname">grapheme_stristr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> ] )',
  'grapheme_strlen' => '<span class="type">int</span> <span class="methodname">grapheme_strlen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> )',
  'grapheme_strpos' => '<span class="type">int</span> <span class="methodname">grapheme_strpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'grapheme_strripos' => '<span class="type">int</span> <span class="methodname">grapheme_strripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'grapheme_strrpos' => '<span class="type">int</span> <span class="methodname">grapheme_strrpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'grapheme_strstr' => '<span class="type">string</span> <span class="methodname">grapheme_strstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> ] )',
  'grapheme_substr' => '<span class="type">int</span> <span class="methodname">grapheme_substr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'gregoriantojd' => '<span class="type">int</span> <span class="methodname">gregoriantojd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'gupnp_context_get_host_ip' => '<span class="type">string</span> <span class="methodname">gupnp_context_get_host_ip</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'gupnp_context_get_port' => '<span class="type">int</span> <span class="methodname">gupnp_context_get_port</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'gupnp_context_get_subscription_timeout' => '<span class="type">int</span> <span class="methodname">gupnp_context_get_subscription_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'gupnp_context_host_path' => '<span class="type">bool</span> <span class="methodname">gupnp_context_host_path</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_path</code></span> )',
  'gupnp_context_new' => '<span class="type">resource</span> <span class="methodname">gupnp_context_new</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$host_ip</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> ]] )',
  'gupnp_context_set_subscription_timeout' => '<span class="type">void</span> <span class="methodname">gupnp_context_set_subscription_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code></span> )',
  'gupnp_context_timeout_add' => '<span class="type">bool</span> <span class="methodname">gupnp_context_timeout_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'gupnp_context_unhost_path' => '<span class="type">bool</span> <span class="methodname">gupnp_context_unhost_path</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_path</code></span> )',
  'gupnp_control_point_browse_start' => '<span class="type">bool</span> <span class="methodname">gupnp_control_point_browse_start</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$cpoint</code></span> )',
  'gupnp_control_point_browse_stop' => '<span class="type">bool</span> <span class="methodname">gupnp_control_point_browse_stop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$cpoint</code></span> )',
  'gupnp_control_point_callback_set' => '<span class="type">bool</span> <span class="methodname">gupnp_control_point_callback_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$cpoint</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$signal</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'gupnp_control_point_new' => '<span class="type">resource</span> <span class="methodname">gupnp_control_point_new</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> )',
  'gupnp_device_action_callback_set' => '<span class="type">bool</span> <span class="methodname">gupnp_device_action_callback_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$signal</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$action_name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'gupnp_device_info_get' => '<span class="type">array</span> <span class="methodname">gupnp_device_info_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> )',
  'gupnp_device_info_get_service' => '<span class="type">resource</span> <span class="methodname">gupnp_device_info_get_service</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> )',
  'gupnp_root_device_get_available' => '<span class="type">bool</span> <span class="methodname">gupnp_root_device_get_available</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> )',
  'gupnp_root_device_get_relative_location' => '<span class="type">string</span> <span class="methodname">gupnp_root_device_get_relative_location</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> )',
  'gupnp_root_device_new' => '<span class="type">resource</span> <span class="methodname">gupnp_root_device_new</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$location</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$description_dir</code></span> )',
  'gupnp_root_device_set_available' => '<span class="type">bool</span> <span class="methodname">gupnp_root_device_set_available</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$available</code></span> )',
  'gupnp_root_device_start' => '<span class="type">bool</span> <span class="methodname">gupnp_root_device_start</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> )',
  'gupnp_root_device_stop' => '<span class="type">bool</span> <span class="methodname">gupnp_root_device_stop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root_device</code></span> )',
  'gupnp_service_action_get' => '<span class="type">mixed</span> <span class="methodname">gupnp_service_action_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$action</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'gupnp_service_action_return_error' => '<span class="type">bool</span> <span class="methodname">gupnp_service_action_return_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$action</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$error_description</code></span> ] )',
  'gupnp_service_action_return' => '<span class="type">bool</span> <span class="methodname">gupnp_service_action_return</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$action</code></span> )',
  'gupnp_service_action_set' => '<span class="type">bool</span> <span class="methodname">gupnp_service_action_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$action</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'gupnp_service_freeze_notify' => '<span class="type">bool</span> <span class="methodname">gupnp_service_freeze_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service</code></span> )',
  'gupnp_service_info_get' => '<span class="type">array</span> <span class="methodname">gupnp_service_info_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> )',
  'gupnp_service_info_get_introspection' => '<span class="type">mixed</span> <span class="methodname">gupnp_service_info_get_introspection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ]] )',
  'gupnp_service_introspection_get_state_variable' => '<span class="type">array</span> <span class="methodname">gupnp_service_introspection_get_state_variable</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$introspection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$variable_name</code></span> )',
  'gupnp_service_notify' => '<span class="type">bool</span> <span class="methodname">gupnp_service_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'gupnp_service_proxy_action_get' => '<span class="type">mixed</span> <span class="methodname">gupnp_service_proxy_action_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'gupnp_service_proxy_action_set' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_action_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$action</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'gupnp_service_proxy_add_notify' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_add_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'gupnp_service_proxy_callback_set' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_callback_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$signal</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> ] )',
  'gupnp_service_proxy_get_subscribed' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_get_subscribed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> )',
  'gupnp_service_proxy_remove_notify' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_remove_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'gupnp_service_proxy_set_subscribed' => '<span class="type">bool</span> <span class="methodname">gupnp_service_proxy_set_subscribed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$proxy</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$subscribed</code></span> )',
  'gupnp_service_thaw_notify' => '<span class="type">bool</span> <span class="methodname">gupnp_service_thaw_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service</code></span> )',
  'gzclose' => '<span class="type">bool</span> <span class="methodname">gzclose</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzcompress' => '<span class="type">string</span> <span class="methodname">gzcompress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$encoding</code><span class="initializer">= ZLIB_ENCODING_DEFLATE</span></span> ]] )',
  'gzdecode' => '<span class="type">string</span> <span class="methodname">gzdecode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'gzdeflate' => '<span class="type">string</span> <span class="methodname">gzdeflate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$encoding</code><span class="initializer">= ZLIB_ENCODING_RAW</span></span> ]] )',
  'gzencode' => '<span class="type">string</span> <span class="methodname">gzencode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$encoding_mode</code><span class="initializer">= FORCE_GZIP</span></span> ]] )',
  'gzeof' => '<span class="type">int</span> <span class="methodname">gzeof</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzfile' => '<span class="type">array</span> <span class="methodname">gzfile</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$use_include_path</code><span class="initializer">= 0</span></span> ] )',
  'gzgetc' => '<span class="type">string</span> <span class="methodname">gzgetc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzgets' => '<span class="type">string</span> <span class="methodname">gzgets</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'gzgetss' => '<span class="type">string</span> <span class="methodname">gzgetss</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$allowable_tags</code></span> ] )',
  'gzinflate' => '<span class="type">string</span> <span class="methodname">gzinflate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> ] )',
  'gzopen' => '<span class="type">resource</span> <span class="methodname">gzopen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$use_include_path</code><span class="initializer">= 0</span></span> ] )',
  'gzpassthru' => '<span class="type">int</span> <span class="methodname">gzpassthru</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzputs' => '',
  'gzread' => '<span class="type">string</span> <span class="methodname">gzread</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'gzrewind' => '<span class="type">bool</span> <span class="methodname">gzrewind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzseek' => '<span class="type">int</span> <span class="methodname">gzseek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$whence</code><span class="initializer">= SEEK_SET</span></span> ] )',
  'gztell' => '<span class="type">int</span> <span class="methodname">gztell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> )',
  'gzuncompress' => '<span class="type">string</span> <span class="methodname">gzuncompress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> ] )',
  'gzwrite' => '<span class="type">int</span> <span class="methodname">gzwrite</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'halt_compiler' => '<span class="type">void</span> <span class="methodname">__halt_compiler</span> ( <span class="methodparam">void</span> )',
  'hash_algos' => '<span class="type">array</span> <span class="methodname">hash_algos</span> ( <span class="methodparam">void</span> )',
  'hash_copy' => '<span class="type">resource</span> <span class="methodname">hash_copy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'hash_file' => '<span class="type">string</span> <span class="methodname">hash_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'hash_final' => '<span class="type">string</span> <span class="methodname">hash_final</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'hash_hmac_file' => '<span class="type">string</span> <span class="methodname">hash_hmac_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'hash_hmac' => '<span class="type">string</span> <span class="methodname">hash_hmac</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'hash' => '<span class="type">string</span> <span class="methodname">hash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'hash_init' => '<span class="type">resource</span> <span class="methodname">hash_init</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'hash_pbkdf2' => '<span class="type">string</span> <span class="methodname">hash_pbkdf2</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$salt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$iterations</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ]] )',
  'hash_update_file' => '<span class="type">bool</span> <span class="methodname">hash_update_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'hash_update' => '<span class="type">bool</span> <span class="methodname">hash_update</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'hash_update_stream' => '<span class="type">int</span> <span class="methodname">hash_update_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= -1</span></span> ] )',
  'header' => '<span class="type">void</span> <span class="methodname">header</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$replace</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$http_response_code</code></span> ]] )',
  'header_register_callback' => '<span class="type">bool</span> <span class="methodname">header_register_callback</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> )',
  'header_remove' => '<span class="type">void</span> <span class="methodname">header_remove</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ] )',
  'headers_list' => '<span class="type">array</span> <span class="methodname">headers_list</span> ( <span class="methodparam">void</span> )',
  'headers_sent' => '<span class="type">bool</span> <span class="methodname">headers_sent</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$file</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$line</code></span> ]] )',
  'hebrevc' => '<span class="type">string</span> <span class="methodname">hebrevc</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hebrew_text</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_chars_per_line</code><span class="initializer">= 0</span></span> ] )',
  'hebrev' => '<span class="type">string</span> <span class="methodname">hebrev</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hebrew_text</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_chars_per_line</code><span class="initializer">= 0</span></span> ] )',
  'hex2bin' => '<span class="type">string</span> <span class="methodname">hex2bin</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'hexdec' => '<span class="type">number</span> <span class="methodname">hexdec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hex_string</code></span> )',
  'highlight_file' => '<span class="type">mixed</span> <span class="methodname">highlight_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return</code><span class="initializer">= false</span></span> ] )',
  'highlight_string' => '<span class="type">mixed</span> <span class="methodname">highlight_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return</code><span class="initializer">= false</span></span> ] )',
  'htmlentities' => '<span class="type">string</span> <span class="methodname">htmlentities</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= ENT_COMPAT | ENT_HTML401</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= &#039;UTF-8&#039;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$double_encode</code><span class="initializer">= true</span></span> ]]] )',
  'html_entity_decode' => '<span class="type">string</span> <span class="methodname">html_entity_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= ENT_COMPAT | ENT_HTML401</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= &#039;UTF-8&#039;</span></span> ]] )',
  'htmlspecialchars_decode' => '<span class="type">string</span> <span class="methodname">htmlspecialchars_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= ENT_COMPAT | ENT_HTML401</span></span> ] )',
  'htmlspecialchars' => '<span class="type">string</span> <span class="methodname">htmlspecialchars</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= ENT_COMPAT | ENT_HTML401</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= &#039;UTF-8&#039;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$double_encode</code><span class="initializer">= true</span></span> ]]] )',
  'http_build_cookie' => '<span class="type">string</span> <span class="methodname">http_build_cookie</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$cookie</code></span> )',
  'http_build_query' => '<span class="type">string</span> <span class="methodname">http_build_query</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$query_data</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$numeric_prefix</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$arg_separator</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$enc_type</code><span class="initializer">= <strong><code>PHP_QUERY_RFC1738</code></strong></span></span> ]]] )',
  'http_build_str' => '<span class="type">string</span> <span class="methodname">http_build_str</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$arg_separator</code><span class="initializer">= ini_get(&quot;arg_separator.output&quot;)</span></span> ]] )',
  'http_build_url' => '<span class="type">string</span> <span class="methodname">http_build_url</span> ([ <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$parts</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= HTTP_URL_REPLACE</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$new_url</code></span> ]]]] )',
  'http_cache_etag' => '<span class="type">bool</span> <span class="methodname">http_cache_etag</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$etag</code></span> ] )',
  'http_cache_last_modified' => '<span class="type">bool</span> <span class="methodname">http_cache_last_modified</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp_or_expires</code></span> ] )',
  'http_chunked_decode' => '<span class="type">string</span> <span class="methodname">http_chunked_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoded</code></span> )',
  'http_date' => '<span class="type">string</span> <span class="methodname">http_date</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code></span> ] )',
  'http_deflate' => '<span class="type">string</span> <span class="methodname">http_deflate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'http_get' => '<span class="type">string</span> <span class="methodname">http_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_get_request_body' => '<span class="type">string</span> <span class="methodname">http_get_request_body</span> ( <span class="methodparam">void</span> )',
  'http_get_request_body_stream' => '<span class="type">resource</span> <span class="methodname">http_get_request_body_stream</span> ( <span class="methodparam">void</span> )',
  'http_get_request_headers' => '<span class="type">array</span> <span class="methodname">http_get_request_headers</span> ( <span class="methodparam">void</span> )',
  'http_head' => '<span class="type">string</span> <span class="methodname">http_head</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_inflate' => '<span class="type">string</span> <span class="methodname">http_inflate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'http_match_etag' => '<span class="type">bool</span> <span class="methodname">http_match_etag</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$etag</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$for_range</code><span class="initializer">= false</span></span> ] )',
  'http_match_modified' => '<span class="type">bool</span> <span class="methodname">http_match_modified</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$for_range</code><span class="initializer">= false</span></span> ]] )',
  'http_match_request_header' => '<span class="type">bool</span> <span class="methodname">http_match_request_header</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$header</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$match_case</code><span class="initializer">= false</span></span> ] )',
  'http_negotiate_charset' => '<span class="type">string</span> <span class="methodname">http_negotiate_charset</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$supported</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> ] )',
  'http_negotiate_content_type' => '<span class="type">string</span> <span class="methodname">http_negotiate_content_type</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$supported</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> ] )',
  'http_negotiate_language' => '<span class="type">string</span> <span class="methodname">http_negotiate_language</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$supported</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> ] )',
  'http_parse_cookie' => '<span class="type">object</span> <span class="methodname">http_parse_cookie</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cookie</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$allowed_extras</code></span> ]] )',
  'http_parse_headers' => '<span class="type">array</span> <span class="methodname">http_parse_headers</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$header</code></span> )',
  'http_parse_message' => '<span class="type">object</span> <span class="methodname">http_parse_message</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> )',
  'http_parse_params' => '<span class="type">object</span> <span class="methodname">http_parse_params</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$param</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= HTTP_PARAMS_DEFAULT</span></span> ] )',
  'http_persistent_handles_clean' => '<span class="type">string</span> <span class="methodname">http_persistent_handles_clean</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$ident</code></span> ] )',
  'http_persistent_handles_count' => '<span class="type">object</span> <span class="methodname">http_persistent_handles_count</span> ( <span class="methodparam">void</span> )',
  'http_persistent_handles_ident' => '<span class="type">string</span> <span class="methodname">http_persistent_handles_ident</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$ident</code></span> ] )',
  'http_post_data' => '<span class="type">string</span> <span class="methodname">http_post_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_post_fields' => '<span class="type">string</span> <span class="methodname">http_post_fields</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]]] )',
  'http_put_data' => '<span class="type">string</span> <span class="methodname">http_put_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_put_file' => '<span class="type">string</span> <span class="methodname">http_put_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_put_stream' => '<span class="type">string</span> <span class="methodname">http_put_stream</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]] )',
  'http_redirect' => '<span class="type">bool</span> <span class="methodname">http_redirect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$session</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code><span class="initializer">= 0</span></span> ]]]] )',
  'http_request_body_encode' => '<span class="type">string</span> <span class="methodname">http_request_body_encode</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$fields</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code></span> )',
  'http_request' => '<span class="type">string</span> <span class="methodname">http_request</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$body</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$info</code></span> ]]] )',
  'http_request_method_exists' => '<span class="type">int</span> <span class="methodname">http_request_method_exists</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$method</code></span> )',
  'http_request_method_name' => '<span class="type">string</span> <span class="methodname">http_request_method_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code></span> )',
  'http_request_method_register' => '<span class="type">int</span> <span class="methodname">http_request_method_register</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> )',
  'http_request_method_unregister' => '<span class="type">bool</span> <span class="methodname">http_request_method_unregister</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$method</code></span> )',
  'http_response_code' => '<span class="type">int</span> <span class="methodname">http_response_code</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$response_code</code></span> ] )',
  'http_send_content_disposition' => '<span class="type">bool</span> <span class="methodname">http_send_content_disposition</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$inline</code><span class="initializer">= false</span></span> ] )',
  'http_send_content_type' => '<span class="type">bool</span> <span class="methodname">http_send_content_type</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$content_type</code><span class="initializer">= &quot;application/x-octetstream&quot;</span></span> ] )',
  'http_send_data' => '<span class="type">bool</span> <span class="methodname">http_send_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'http_send_file' => '<span class="type">bool</span> <span class="methodname">http_send_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'http_send_last_modified' => '<span class="type">bool</span> <span class="methodname">http_send_last_modified</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'http_send_status' => '<span class="type">bool</span> <span class="methodname">http_send_status</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'http_send_stream' => '<span class="type">bool</span> <span class="methodname">http_send_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> )',
  'http_support' => '<span class="type">int</span> <span class="methodname">http_support</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$feature</code><span class="initializer">= 0</span></span> ] )',
  'http_throttle' => '<span class="type">void</span> <span class="methodname">http_throttle</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$sec</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$bytes</code><span class="initializer">= 40960</span></span> ] )',
  'hwapi_attribute_new' => '<span class="type">HW_API_Attribute</span> <span class="methodname">hwapi_attribute_new</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> ]] )',
  'hwapi_content_new' => '<span class="type">HW_API_Content</span> <span class="methodname">hwapi_content_new</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mimetype</code></span> )',
  'hwapi_hgcsp' => '<span class="type">HW_API</span> <span class="methodname">hwapi_hgcsp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> ] )',
  'hwapi_object_new' => '<span class="type">hw_api_object</span> <span class="methodname">hwapi_object_new</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameter</code></span> )',
  'hw_array2objrec' => '<span class="type">string</span> <span class="methodname">hw_array2objrec</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$object_array</code></span> )',
  'hw_changeobject' => '<span class="type">bool</span> <span class="methodname">hw_changeobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> )',
  'hw_children' => '<span class="type">array</span> <span class="methodname">hw_children</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_childrenobj' => '<span class="type">array</span> <span class="methodname">hw_childrenobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_close' => '<span class="type">bool</span> <span class="methodname">hw_close</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hw_connect' => '<span class="type">int</span> <span class="methodname">hw_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'hw_connection_info' => '<span class="type">void</span> <span class="methodname">hw_connection_info</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> )',
  'hw_cp' => '<span class="type">int</span> <span class="methodname">hw_cp</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$object_id_array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$destination_id</code></span> )',
  'hw_deleteobject' => '<span class="type">bool</span> <span class="methodname">hw_deleteobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$object_to_delete</code></span> )',
  'hw_docbyanchor' => '<span class="type">int</span> <span class="methodname">hw_docbyanchor</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$anchorID</code></span> )',
  'hw_docbyanchorobj' => '<span class="type">string</span> <span class="methodname">hw_docbyanchorobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$anchorID</code></span> )',
  'hw_document_attributes' => '<span class="type">string</span> <span class="methodname">hw_document_attributes</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_document_bodytag' => '<span class="type">string</span> <span class="methodname">hw_document_bodytag</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> ] )',
  'hw_document_content' => '<span class="type">string</span> <span class="methodname">hw_document_content</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_document_setcontent' => '<span class="type">bool</span> <span class="methodname">hw_document_setcontent</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'hw_document_size' => '<span class="type">int</span> <span class="methodname">hw_document_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_dummy' => '<span class="type">string</span> <span class="methodname">hw_dummy</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msgid</code></span> )',
  'hw_edittext' => '<span class="type">bool</span> <span class="methodname">hw_edittext</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_error' => '<span class="type">int</span> <span class="methodname">hw_error</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hw_errormsg' => '<span class="type">string</span> <span class="methodname">hw_errormsg</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hw_free_document' => '<span class="type">bool</span> <span class="methodname">hw_free_document</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_getanchors' => '<span class="type">array</span> <span class="methodname">hw_getanchors</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getanchorsobj' => '<span class="type">array</span> <span class="methodname">hw_getanchorsobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getandlock' => '<span class="type">string</span> <span class="methodname">hw_getandlock</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getchildcoll' => '<span class="type">array</span> <span class="methodname">hw_getchildcoll</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getchildcollobj' => '<span class="type">array</span> <span class="methodname">hw_getchildcollobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getchilddoccoll' => '<span class="type">array</span> <span class="methodname">hw_getchilddoccoll</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getchilddoccollobj' => '<span class="type">array</span> <span class="methodname">hw_getchilddoccollobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getobjectbyquerycoll' => '<span class="type">array</span> <span class="methodname">hw_getobjectbyquerycoll</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_hits</code></span> )',
  'hw_getobjectbyquerycollobj' => '<span class="type">array</span> <span class="methodname">hw_getobjectbyquerycollobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_hits</code></span> )',
  'hw_getobjectbyquery' => '<span class="type">array</span> <span class="methodname">hw_getobjectbyquery</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_hits</code></span> )',
  'hw_getobjectbyqueryobj' => '<span class="type">array</span> <span class="methodname">hw_getobjectbyqueryobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_hits</code></span> )',
  'hw_getobject' => '<span class="type">mixed</span> <span class="methodname">hw_getobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$objectID</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ] )',
  'hw_getparents' => '<span class="type">array</span> <span class="methodname">hw_getparents</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getparentsobj' => '<span class="type">array</span> <span class="methodname">hw_getparentsobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getrellink' => '<span class="type">string</span> <span class="methodname">hw_getrellink</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rootid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sourceid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$destid</code></span> )',
  'hw_getremotechildren' => '<span class="type">mixed</span> <span class="methodname">hw_getremotechildren</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_record</code></span> )',
  'hw_getremote' => '<span class="type">int</span> <span class="methodname">hw_getremote</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_getsrcbydestobj' => '<span class="type">array</span> <span class="methodname">hw_getsrcbydestobj</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_gettext' => '<span class="type">int</span> <span class="methodname">hw_gettext</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$rootID/prefix</code></span> ] )',
  'hw_getusername' => '<span class="type">string</span> <span class="methodname">hw_getusername</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hw_identify' => '<span class="type">string</span> <span class="methodname">hw_identify</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'hw_incollections' => '<span class="type">array</span> <span class="methodname">hw_incollections</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$object_id_array</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$collection_id_array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$return_collections</code></span> )',
  'hw_info' => '<span class="type">string</span> <span class="methodname">hw_info</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hw_inscoll' => '<span class="type">int</span> <span class="methodname">hw_inscoll</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$object_array</code></span> )',
  'hw_insdoc' => '<span class="type">int</span> <span class="methodname">hw_insdoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$parentID</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_record</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> ] )',
  'hw_insertanchors' => '<span class="type">bool</span> <span class="methodname">hw_insertanchors</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hwdoc</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$anchorecs</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$dest</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$urlprefixes</code></span> ] )',
  'hw_insertdocument' => '<span class="type">int</span> <span class="methodname">hw_insertdocument</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$parent_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_insertobject' => '<span class="type">int</span> <span class="methodname">hw_insertobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_rec</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$parameter</code></span> )',
  'hw_mapid' => '<span class="type">int</span> <span class="methodname">hw_mapid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$object_id</code></span> )',
  'hw_modifyobject' => '<span class="type">bool</span> <span class="methodname">hw_modifyobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$object_to_change</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$remove</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$add</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> ] )',
  'hw_mv' => '<span class="type">int</span> <span class="methodname">hw_mv</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$object_id_array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$source_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$destination_id</code></span> )',
  'hw_new_document' => '<span class="type">int</span> <span class="methodname">hw_new_document</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_record</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$document_data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$document_size</code></span> )',
  'hw_objrec2array' => '<span class="type">array</span> <span class="methodname">hw_objrec2array</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_record</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$format</code></span> ] )',
  'hw_output_document' => '<span class="type">bool</span> <span class="methodname">hw_output_document</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hw_document</code></span> )',
  'hw_pconnect' => '<span class="type">int</span> <span class="methodname">hw_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'hw_pipedocument' => '<span class="type">int</span> <span class="methodname">hw_pipedocument</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$url_prefixes</code></span> ] )',
  'hw_root' => '<span class="type">int</span> <span class="methodname">hw_root</span> ( <span class="methodparam">void</span> )',
  'hw_setlinkroot' => '<span class="type">int</span> <span class="methodname">hw_setlinkroot</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rootid</code></span> )',
  'hw_stat' => '<span class="type">string</span> <span class="methodname">hw_stat</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> )',
  'hw_unlock' => '<span class="type">bool</span> <span class="methodname">hw_unlock</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$objectID</code></span> )',
  'hw_who' => '<span class="type">array</span> <span class="methodname">hw_who</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'hypot' => '<span class="type">float</span> <span class="methodname">hypot</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ibase_add_user' => '<span class="type">bool</span> <span class="methodname">ibase_add_user</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$first_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$middle_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$last_name</code></span> ]]] )',
  'ibase_affected_rows' => '<span class="type">int</span> <span class="methodname">ibase_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'ibase_backup' => '<span class="type">mixed</span> <span class="methodname">ibase_backup</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$source_db</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest_file</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$verbose</code><span class="initializer">= false</span></span> ]] )',
  'ibase_blob_add' => '<span class="type">void</span> <span class="methodname">ibase_blob_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$blob_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'ibase_blob_cancel' => '<span class="type">bool</span> <span class="methodname">ibase_blob_cancel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$blob_handle</code></span> )',
  'ibase_blob_close' => '<span class="type">mixed</span> <span class="methodname">ibase_blob_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$blob_handle</code></span> )',
  'ibase_blob_create' => '<span class="type">resource</span> <span class="methodname">ibase_blob_create</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_blob_echo' => '<span class="type">bool</span> <span class="methodname">ibase_blob_echo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> ) <span class="type">bool</span> <span class="methodname">ibase_blob_echo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> )',
  'ibase_blob_get' => '<span class="type">string</span> <span class="methodname">ibase_blob_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$blob_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'ibase_blob_import' => '<span class="type">string</span> <span class="methodname">ibase_blob_import</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$file_handle</code></span> ) <span class="type">string</span> <span class="methodname">ibase_blob_import</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$file_handle</code></span> )',
  'ibase_blob_info' => '<span class="type">array</span> <span class="methodname">ibase_blob_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> ) <span class="type">array</span> <span class="methodname">ibase_blob_info</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> )',
  'ibase_blob_open' => '<span class="type">resource</span> <span class="methodname">ibase_blob_open</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> ) <span class="type">resource</span> <span class="methodname">ibase_blob_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob_id</code></span> )',
  'ibase_close' => '<span class="type">bool</span> <span class="methodname">ibase_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_commit' => '<span class="type">bool</span> <span class="methodname">ibase_commit</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_or_trans_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_commit_ret' => '<span class="type">bool</span> <span class="methodname">ibase_commit_ret</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_or_trans_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_connect' => '<span class="type">resource</span> <span class="methodname">ibase_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$buffers</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$dialect</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$role</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sync</code></span> ]]]]]]]] )',
  'ibase_db_info' => '<span class="type">string</span> <span class="methodname">ibase_db_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$action</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$argument</code><span class="initializer">= 0</span></span> ] )',
  'ibase_delete_user' => '<span class="type">bool</span> <span class="methodname">ibase_delete_user</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> )',
  'ibase_drop_db' => '<span class="type">bool</span> <span class="methodname">ibase_drop_db</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_errcode' => '<span class="type">int</span> <span class="methodname">ibase_errcode</span> ( <span class="methodparam">void</span> )',
  'ibase_errmsg' => '<span class="type">string</span> <span class="methodname">ibase_errmsg</span> ( <span class="methodparam">void</span> )',
  'ibase_execute' => '<span class="type">resource</span> <span class="methodname">ibase_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$bind_arg</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'ibase_fetch_assoc' => '<span class="type">array</span> <span class="methodname">ibase_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fetch_flag</code><span class="initializer">= 0</span></span> ] )',
  'ibase_fetch_object' => '<span class="type">object</span> <span class="methodname">ibase_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fetch_flag</code><span class="initializer">= 0</span></span> ] )',
  'ibase_fetch_row' => '<span class="type">array</span> <span class="methodname">ibase_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fetch_flag</code><span class="initializer">= 0</span></span> ] )',
  'ibase_field_info' => '<span class="type">array</span> <span class="methodname">ibase_field_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'ibase_free_event_handler' => '<span class="type">bool</span> <span class="methodname">ibase_free_event_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$event</code></span> )',
  'ibase_free_query' => '<span class="type">bool</span> <span class="methodname">ibase_free_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$query</code></span> )',
  'ibase_free_result' => '<span class="type">bool</span> <span class="methodname">ibase_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> )',
  'ibase_gen_id' => '<span class="type">mixed</span> <span class="methodname">ibase_gen_id</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$generator</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$increment</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'ibase_maintain_db' => '<span class="type">bool</span> <span class="methodname">ibase_maintain_db</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$action</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$argument</code><span class="initializer">= 0</span></span> ] )',
  'ibase_modify_user' => '<span class="type">bool</span> <span class="methodname">ibase_modify_user</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$first_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$middle_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$last_name</code></span> ]]] )',
  'ibase_name_result' => '<span class="type">bool</span> <span class="methodname">ibase_name_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'ibase_num_fields' => '<span class="type">int</span> <span class="methodname">ibase_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ibase_num_params' => '<span class="type">int</span> <span class="methodname">ibase_num_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$query</code></span> )',
  'ibase_param_info' => '<span class="type">array</span> <span class="methodname">ibase_param_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_number</code></span> )',
  'ibase_pconnect' => '<span class="type">resource</span> <span class="methodname">ibase_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$buffers</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$dialect</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$role</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sync</code></span> ]]]]]]]] )',
  'ibase_prepare' => '<span class="type">resource</span> <span class="methodname">ibase_prepare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">resource</span> <span class="methodname">ibase_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">resource</span> <span class="methodname">ibase_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$trans</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'ibase_query' => '<span class="type">resource</span> <span class="methodname">ibase_query</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$bind_args</code></span> ] )',
  'ibase_restore' => '<span class="type">mixed</span> <span class="methodname">ibase_restore</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$source_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest_db</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$verbose</code><span class="initializer">= false</span></span> ]] )',
  'ibase_rollback' => '<span class="type">bool</span> <span class="methodname">ibase_rollback</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_or_trans_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_rollback_ret' => '<span class="type">bool</span> <span class="methodname">ibase_rollback_ret</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_or_trans_identifier</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'ibase_server_info' => '<span class="type">string</span> <span class="methodname">ibase_server_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$action</code></span> )',
  'ibase_service_attach' => '<span class="type">resource</span> <span class="methodname">ibase_service_attach</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dba_username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dba_password</code></span> )',
  'ibase_service_detach' => '<span class="type">bool</span> <span class="methodname">ibase_service_detach</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$service_handle</code></span> )',
  'ibase_set_event_handler' => '<span class="type">resource</span> <span class="methodname">ibase_set_event_handler</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$event_handler</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] ) <span class="type">resource</span> <span class="methodname">ibase_set_event_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$event_handler</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] )',
  'ibase_trans' => '<span class="type">resource</span> <span class="methodname">ibase_trans</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$trans_args</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ]] ) <span class="type">resource</span> <span class="methodname">ibase_trans</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$trans_args</code></span> ]] )',
  'ibase_wait_event' => '<span class="type">string</span> <span class="methodname">ibase_wait_event</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] ) <span class="type">string</span> <span class="methodname">ibase_wait_event</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$event_name2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] )',
  'iconv_get_encoding' => '<span class="type">mixed</span> <span class="methodname">iconv_get_encoding</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer">= &quot;all&quot;</span></span> ] )',
  'iconv' => '<span class="type">string</span> <span class="methodname">iconv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$in_charset</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$out_charset</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'iconv_mime_decode_headers' => '<span class="type">array</span> <span class="methodname">iconv_mime_decode_headers</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoded_headers</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ]] )',
  'iconv_mime_decode' => '<span class="type">string</span> <span class="methodname">iconv_mime_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoded_header</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ]] )',
  'iconv_mime_encode' => '<span class="type">string</span> <span class="methodname">iconv_mime_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_value</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$preferences</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'iconv_set_encoding' => '<span class="type">bool</span> <span class="methodname">iconv_set_encoding</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> )',
  'iconv_strlen' => '<span class="type">int</span> <span class="methodname">iconv_strlen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ] )',
  'iconv_strpos' => '<span class="type">int</span> <span class="methodname">iconv_strpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ]] )',
  'iconv_strrpos' => '<span class="type">int</span> <span class="methodname">iconv_strrpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ] )',
  'iconv_substr' => '<span class="type">string</span> <span class="methodname">iconv_substr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= iconv_strlen($str, $charset)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= ini_get(&quot;iconv.internal_encoding&quot;)</span></span> ]] )',
  'id3_get_frame_long_name' => '<span class="type">string</span> <span class="methodname">id3_get_frame_long_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$frameId</code></span> )',
  'id3_get_frame_short_name' => '<span class="type">string</span> <span class="methodname">id3_get_frame_short_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$frameId</code></span> )',
  'id3_get_genre_id' => '<span class="type">int</span> <span class="methodname">id3_get_genre_id</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$genre</code></span> )',
  'id3_get_genre_list' => '<span class="type">array</span> <span class="methodname">id3_get_genre_list</span> ( <span class="methodparam">void</span> )',
  'id3_get_genre_name' => '<span class="type">string</span> <span class="methodname">id3_get_genre_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$genre_id</code></span> )',
  'id3_get_tag' => '<span class="type">array</span> <span class="methodname">id3_get_tag</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code><span class="initializer">= ID3_BEST</span></span> ] )',
  'id3_get_version' => '<span class="type">int</span> <span class="methodname">id3_get_version</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'id3_remove_tag' => '<span class="type">bool</span> <span class="methodname">id3_remove_tag</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code><span class="initializer">= ID3_V1_0</span></span> ] )',
  'id3_set_tag' => '<span class="type">bool</span> <span class="methodname">id3_set_tag</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tag</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code><span class="initializer">= ID3_V1_0</span></span> ] )',
  'idate' => '<span class="type">int</span> <span class="methodname">idate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'idn_to_ascii' => '<span class="type">string</span> <span class="methodname">idn_to_ascii</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$variant</code><span class="initializer">= INTL_IDNA_VARIANT_2003</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$idna_info</code></span> ]]] )',
  'idn_to_unicode' => '',
  'idn_to_utf8' => '<span class="type">string</span> <span class="methodname">idn_to_utf8</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$variant</code><span class="initializer">= INTL_IDNA_VARIANT_2003</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$idna_info</code></span> ]]] )',
  'ifx_affected_rows' => '<span class="type">int</span> <span class="methodname">ifx_affected_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_blobinfile_mode' => '<span class="type">bool</span> <span class="methodname">ifx_blobinfile_mode</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifx_byteasvarchar' => '<span class="type">bool</span> <span class="methodname">ifx_byteasvarchar</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifx_close' => '<span class="type">bool</span> <span class="methodname">ifx_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'ifx_connect' => '<span class="type">resource</span> <span class="methodname">ifx_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> ]]] )',
  'ifx_copy_blob' => '<span class="type">int</span> <span class="methodname">ifx_copy_blob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifx_create_blob' => '<span class="type">int</span> <span class="methodname">ifx_create_blob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$param</code></span> )',
  'ifx_create_char' => '<span class="type">int</span> <span class="methodname">ifx_create_char</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$param</code></span> )',
  'ifx_do' => '<span class="type">bool</span> <span class="methodname">ifx_do</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_error' => '<span class="type">string</span> <span class="methodname">ifx_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'ifx_errormsg' => '<span class="type">string</span> <span class="methodname">ifx_errormsg</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$errorcode</code></span> ] )',
  'ifx_fetch_row' => '<span class="type">array</span> <span class="methodname">ifx_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$position</code></span> ] )',
  'ifx_fieldproperties' => '<span class="type">array</span> <span class="methodname">ifx_fieldproperties</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_fieldtypes' => '<span class="type">array</span> <span class="methodname">ifx_fieldtypes</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_free_blob' => '<span class="type">bool</span> <span class="methodname">ifx_free_blob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifx_free_char' => '<span class="type">bool</span> <span class="methodname">ifx_free_char</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifx_free_result' => '<span class="type">bool</span> <span class="methodname">ifx_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_get_blob' => '<span class="type">string</span> <span class="methodname">ifx_get_blob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifx_get_char' => '<span class="type">string</span> <span class="methodname">ifx_get_char</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifx_getsqlca' => '<span class="type">array</span> <span class="methodname">ifx_getsqlca</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_htmltbl_result' => '<span class="type">int</span> <span class="methodname">ifx_htmltbl_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$html_table_options</code></span> ] )',
  'ifx_nullformat' => '<span class="type">bool</span> <span class="methodname">ifx_nullformat</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifx_num_fields' => '<span class="type">int</span> <span class="methodname">ifx_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_num_rows' => '<span class="type">int</span> <span class="methodname">ifx_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'ifx_pconnect' => '<span class="type">resource</span> <span class="methodname">ifx_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$userid</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> ]]] )',
  'ifx_prepare' => '<span class="type">resource</span> <span class="methodname">ifx_prepare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$cursor_def</code></span> ], <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$blobidarray</code></span> )',
  'ifx_query' => '<span class="type">resource</span> <span class="methodname">ifx_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$cursor_type</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$blobidarray</code></span> ]] )',
  'ifx_textasvarchar' => '<span class="type">bool</span> <span class="methodname">ifx_textasvarchar</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifx_update_blob' => '<span class="type">bool</span> <span class="methodname">ifx_update_blob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'ifx_update_char' => '<span class="type">bool</span> <span class="methodname">ifx_update_char</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'ifxus_close_slob' => '<span class="type">bool</span> <span class="methodname">ifxus_close_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifxus_create_slob' => '<span class="type">int</span> <span class="methodname">ifxus_create_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifxus_free_slob' => '<span class="type">bool</span> <span class="methodname">ifxus_free_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifxus_open_slob' => '<span class="type">int</span> <span class="methodname">ifxus_open_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ifxus_read_slob' => '<span class="type">string</span> <span class="methodname">ifxus_read_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$nbytes</code></span> )',
  'ifxus_seek_slob' => '<span class="type">int</span> <span class="methodname">ifxus_seek_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'ifxus_tell_slob' => '<span class="type">int</span> <span class="methodname">ifxus_tell_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> )',
  'ifxus_write_slob' => '<span class="type">int</span> <span class="methodname">ifxus_write_slob</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'ignore_user_abort' => '<span class="type">int</span> <span class="methodname">ignore_user_abort</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> ] )',
  'iis_add_server' => '<span class="type">int</span> <span class="methodname">iis_add_server</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$comment</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$server_ip</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rights</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start_server</code></span> )',
  'iis_get_dir_security' => '<span class="type">int</span> <span class="methodname">iis_get_dir_security</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> )',
  'iis_get_script_map' => '<span class="type">string</span> <span class="methodname">iis_get_script_map</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script_extension</code></span> )',
  'iis_get_server_by_comment' => '<span class="type">int</span> <span class="methodname">iis_get_server_by_comment</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$comment</code></span> )',
  'iis_get_server_by_path' => '<span class="type">int</span> <span class="methodname">iis_get_server_by_path</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'iis_get_server_rights' => '<span class="type">int</span> <span class="methodname">iis_get_server_rights</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> )',
  'iis_get_service_state' => '<span class="type">int</span> <span class="methodname">iis_get_service_state</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$service_id</code></span> )',
  'iis_remove_server' => '<span class="type">int</span> <span class="methodname">iis_remove_server</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> )',
  'iis_set_app_settings' => '<span class="type">int</span> <span class="methodname">iis_set_app_settings</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$application_scope</code></span> )',
  'iis_set_dir_security' => '<span class="type">int</span> <span class="methodname">iis_set_dir_security</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$directory_flags</code></span> )',
  'iis_set_script_map' => '<span class="type">int</span> <span class="methodname">iis_set_script_map</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$script_extension</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$engine_path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$allow_scripting</code></span> )',
  'iis_set_server_rights' => '<span class="type">int</span> <span class="methodname">iis_set_server_rights</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$virtual_path</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$directory_flags</code></span> )',
  'iis_start_server' => '<span class="type">int</span> <span class="methodname">iis_start_server</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> )',
  'iis_start_service' => '<span class="type">int</span> <span class="methodname">iis_start_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$service_id</code></span> )',
  'iis_stop_server' => '<span class="type">int</span> <span class="methodname">iis_stop_server</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$server_instance</code></span> )',
  'iis_stop_service' => '<span class="type">int</span> <span class="methodname">iis_stop_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$service_id</code></span> )',
  'image2wbmp' => '<span class="type">bool</span> <span class="methodname">image2wbmp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$threshold</code></span> ]] )',
  'imageaffine' => '<span class="type">resource</span> <span class="methodname">imageaffine</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$affine</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$clip</code></span> ] )',
  'imageaffinematrixconcat' => '<span class="type">array</span> <span class="methodname">imageaffinematrixconcat</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$m1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$m2</code></span> )',
  'imageaffinematrixget' => '<span class="type">array</span> <span class="methodname">imageaffinematrixget</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$options</code></span> ] )',
  'imagealphablending' => '<span class="type">bool</span> <span class="methodname">imagealphablending</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$blendmode</code></span> )',
  'imageantialias' => '<span class="type">bool</span> <span class="methodname">imageantialias</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$enabled</code></span> )',
  'imagearc' => '<span class="type">bool</span> <span class="methodname">imagearc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cx</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cy</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$end</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagechar' => '<span class="type">bool</span> <span class="methodname">imagechar</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$c</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagecharup' => '<span class="type">bool</span> <span class="methodname">imagecharup</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$c</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagecolorallocatealpha' => '<span class="type">int</span> <span class="methodname">imagecolorallocatealpha</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$alpha</code></span> )',
  'imagecolorallocate' => '<span class="type">int</span> <span class="methodname">imagecolorallocate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> )',
  'imagecolorat' => '<span class="type">int</span> <span class="methodname">imagecolorat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> )',
  'imagecolorclosestalpha' => '<span class="type">int</span> <span class="methodname">imagecolorclosestalpha</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$alpha</code></span> )',
  'imagecolorclosest' => '<span class="type">int</span> <span class="methodname">imagecolorclosest</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> )',
  'imagecolorclosesthwb' => '<span class="type">int</span> <span class="methodname">imagecolorclosesthwb</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> )',
  'imagecolordeallocate' => '<span class="type">bool</span> <span class="methodname">imagecolordeallocate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagecolorexactalpha' => '<span class="type">int</span> <span class="methodname">imagecolorexactalpha</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$alpha</code></span> )',
  'imagecolorexact' => '<span class="type">int</span> <span class="methodname">imagecolorexact</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> )',
  'imagecolormatch' => '<span class="type">bool</span> <span class="methodname">imagecolormatch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image1</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image2</code></span> )',
  'imagecolorresolvealpha' => '<span class="type">int</span> <span class="methodname">imagecolorresolvealpha</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$alpha</code></span> )',
  'imagecolorresolve' => '<span class="type">int</span> <span class="methodname">imagecolorresolve</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> )',
  'imagecolorset' => '<span class="type">void</span> <span class="methodname">imagecolorset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$blue</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$alpha</code><span class="initializer">= 0</span></span> ] )',
  'imagecolorsforindex' => '<span class="type">array</span> <span class="methodname">imagecolorsforindex</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'imagecolorstotal' => '<span class="type">int</span> <span class="methodname">imagecolorstotal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'imagecolortransparent' => '<span class="type">int</span> <span class="methodname">imagecolortransparent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> ] )',
  'imageconvolution' => '<span class="type">bool</span> <span class="methodname">imageconvolution</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$matrix</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$div</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$offset</code></span> )',
  'imagecopy' => '<span class="type">bool</span> <span class="methodname">imagecopy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dst_im</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src_im</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_h</code></span> )',
  'imagecopymergegray' => '<span class="type">bool</span> <span class="methodname">imagecopymergegray</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dst_im</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src_im</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_h</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pct</code></span> )',
  'imagecopymerge' => '<span class="type">bool</span> <span class="methodname">imagecopymerge</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dst_im</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src_im</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_h</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pct</code></span> )',
  'imagecopyresampled' => '<span class="type">bool</span> <span class="methodname">imagecopyresampled</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dst_image</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src_image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_h</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_h</code></span> )',
  'imagecopyresized' => '<span class="type">bool</span> <span class="methodname">imagecopyresized</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dst_image</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src_image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dst_h</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_w</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$src_h</code></span> )',
  'imagecreatefromgd2' => '<span class="type">resource</span> <span class="methodname">imagecreatefromgd2</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromgd2part' => '<span class="type">resource</span> <span class="methodname">imagecreatefromgd2part</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$srcX</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$srcY</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'imagecreatefromgd' => '<span class="type">resource</span> <span class="methodname">imagecreatefromgd</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromgif' => '<span class="type">resource</span> <span class="methodname">imagecreatefromgif</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromjpeg' => '<span class="type">resource</span> <span class="methodname">imagecreatefromjpeg</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefrompng' => '<span class="type">resource</span> <span class="methodname">imagecreatefrompng</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromstring' => '<span class="type">resource</span> <span class="methodname">imagecreatefromstring</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$image</code></span> )',
  'imagecreatefromwbmp' => '<span class="type">resource</span> <span class="methodname">imagecreatefromwbmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromwebp' => '<span class="type">resource</span> <span class="methodname">imagecreatefromwebp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromxbm' => '<span class="type">resource</span> <span class="methodname">imagecreatefromxbm</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreatefromxpm' => '<span class="type">resource</span> <span class="methodname">imagecreatefromxpm</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagecreate' => '<span class="type">resource</span> <span class="methodname">imagecreate</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'imagecreatetruecolor' => '<span class="type">resource</span> <span class="methodname">imagecreatetruecolor</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'imagecropauto' => '<span class="type">resource</span> <span class="methodname">imagecropauto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$threshold</code><span class="initializer">= .5</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code><span class="initializer">= -1</span></span> ]]] )',
  'imagecrop' => '<span class="type">resource</span> <span class="methodname">imagecrop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$rect</code></span> )',
  'imagedashedline' => '<span class="type">bool</span> <span class="methodname">imagedashedline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagedestroy' => '<span class="type">bool</span> <span class="methodname">imagedestroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'imageellipse' => '<span class="type">bool</span> <span class="methodname">imageellipse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cx</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cy</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefilledarc' => '<span class="type">bool</span> <span class="methodname">imagefilledarc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cx</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cy</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$end</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$style</code></span> )',
  'imagefilledellipse' => '<span class="type">bool</span> <span class="methodname">imagefilledellipse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cx</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cy</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefilledpolygon' => '<span class="type">bool</span> <span class="methodname">imagefilledpolygon</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$points</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_points</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefilledrectangle' => '<span class="type">bool</span> <span class="methodname">imagefilledrectangle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefill' => '<span class="type">bool</span> <span class="methodname">imagefill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefilltoborder' => '<span class="type">bool</span> <span class="methodname">imagefilltoborder</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$border</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagefilter' => '<span class="type">bool</span> <span class="methodname">imagefilter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$filtertype</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$arg1</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$arg2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$arg3</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$arg4</code></span> ]]]] )',
  'imageflip' => '<span class="type">bool</span> <span class="methodname">imageflip</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'imagefontheight' => '<span class="type">int</span> <span class="methodname">imagefontheight</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> )',
  'imagefontwidth' => '<span class="type">int</span> <span class="methodname">imagefontwidth</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> )',
  'imageftbbox' => '<span class="type">array</span> <span class="methodname">imageftbbox</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$extrainfo</code></span> ] )',
  'imagefttext' => '<span class="type">array</span> <span class="methodname">imagefttext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$extrainfo</code></span> ] )',
  'imagegammacorrect' => '<span class="type">bool</span> <span class="methodname">imagegammacorrect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$inputgamma</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$outputgamma</code></span> )',
  'imagegd2' => '<span class="type">bool</span> <span class="methodname">imagegd2</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$chunk_size</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= IMG_GD2_RAW</span></span> ]]] )',
  'imagegd' => '<span class="type">bool</span> <span class="methodname">imagegd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'imagegif' => '<span class="type">bool</span> <span class="methodname">imagegif</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'imagegrabscreen' => '<span class="type">resource</span> <span class="methodname">imagegrabscreen</span> ( <span class="methodparam">void</span> )',
  'imagegrabwindow' => '<span class="type">resource</span> <span class="methodname">imagegrabwindow</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$window_handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$client_area</code><span class="initializer">= 0</span></span> ] )',
  'imageinterlace' => '<span class="type">int</span> <span class="methodname">imageinterlace</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$interlace</code><span class="initializer">= 0</span></span> ] )',
  'imageistruecolor' => '<span class="type">bool</span> <span class="methodname">imageistruecolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'imagejpeg' => '<span class="type">bool</span> <span class="methodname">imagejpeg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$quality</code></span> ]] )',
  'imagelayereffect' => '<span class="type">bool</span> <span class="methodname">imagelayereffect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$effect</code></span> )',
  'imageline' => '<span class="type">bool</span> <span class="methodname">imageline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imageloadfont' => '<span class="type">int</span> <span class="methodname">imageloadfont</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'imagepalettecopy' => '<span class="type">void</span> <span class="methodname">imagepalettecopy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$destination</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'imagepalettetotruecolor' => '<span class="type">bool</span> <span class="methodname">imagepalettetotruecolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$src</code></span> )',
  'imagepng' => '<span class="type">bool</span> <span class="methodname">imagepng</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$quality</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$filters</code></span> ]]] )',
  'imagepolygon' => '<span class="type">bool</span> <span class="methodname">imagepolygon</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$points</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_points</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagepsbbox' => '<span class="type">array</span> <span class="methodname">imagepsbbox</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> ) <span class="type">array</span> <span class="methodname">imagepsbbox</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$space</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tightness</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> )',
  'imagepsencodefont' => '<span class="type">bool</span> <span class="methodname">imagepsencodefont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_index</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encodingfile</code></span> )',
  'imagepsextendfont' => '<span class="type">bool</span> <span class="methodname">imagepsextendfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_index</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$extend</code></span> )',
  'imagepsfreefont' => '<span class="type">bool</span> <span class="methodname">imagepsfreefont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_index</code></span> )',
  'imagepsloadfont' => '<span class="type">resource</span> <span class="methodname">imagepsloadfont</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagepsslantfont' => '<span class="type">bool</span> <span class="methodname">imagepsslantfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_index</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$slant</code></span> )',
  'imagepstext' => '<span class="type">array</span> <span class="methodname">imagepstext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_index</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$foreground</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$background</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$space</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tightness</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code><span class="initializer">= 0.0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$antialias_steps</code><span class="initializer">= 4</span></span> ]]]] )',
  'imagerectangle' => '<span class="type">bool</span> <span class="methodname">imagerectangle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagerotate' => '<span class="type">resource</span> <span class="methodname">imagerotate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bgd_color</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ignore_transparent</code><span class="initializer">= 0</span></span> ] )',
  'imagesavealpha' => '<span class="type">bool</span> <span class="methodname">imagesavealpha</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$saveflag</code></span> )',
  'imagescale' => '<span class="type">resource</span> <span class="methodname">imagescale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_width</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_height</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= IMG_BILINEAR_FIXED</span></span> ]] )',
  'imagesetbrush' => '<span class="type">bool</span> <span class="methodname">imagesetbrush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brush</code></span> )',
  'imagesetinterpolation' => '<span class="type">bool</span> <span class="methodname">imagesetinterpolation</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code><span class="initializer">= IMG_BILINEAR_FIXED</span></span> ] )',
  'imagesetpixel' => '<span class="type">bool</span> <span class="methodname">imagesetpixel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagesetstyle' => '<span class="type">bool</span> <span class="methodname">imagesetstyle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$style</code></span> )',
  'imagesetthickness' => '<span class="type">bool</span> <span class="methodname">imagesetthickness</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$thickness</code></span> )',
  'imagesettile' => '<span class="type">bool</span> <span class="methodname">imagesettile</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$tile</code></span> )',
  'imagestring' => '<span class="type">bool</span> <span class="methodname">imagestring</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagestringup' => '<span class="type">bool</span> <span class="methodname">imagestringup</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> )',
  'imagesx' => '<span class="type">int</span> <span class="methodname">imagesx</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'imagesy' => '<span class="type">int</span> <span class="methodname">imagesy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'imagetruecolortopalette' => '<span class="type">bool</span> <span class="methodname">imagetruecolortopalette</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$dither</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ncolors</code></span> )',
  'imagettfbbox' => '<span class="type">array</span> <span class="methodname">imagettfbbox</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'imagettftext' => '<span class="type">array</span> <span class="methodname">imagettftext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'imagetypes' => '<span class="type">int</span> <span class="methodname">imagetypes</span> ( <span class="methodparam">void</span> )',
  'image_type_to_extension' => '<span class="type">string</span> <span class="methodname">image_type_to_extension</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$imagetype</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$include_dot</code><span class="initializer">= <strong><code>TRUE</code></strong></span></span> ] )',
  'image_type_to_mime_type' => '<span class="type">string</span> <span class="methodname">image_type_to_mime_type</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$imagetype</code></span> )',
  'imagewbmp' => '<span class="type">bool</span> <span class="methodname">imagewbmp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$foreground</code></span> ]] )',
  'imagewebp' => '<span class="type">bool</span> <span class="methodname">imagewebp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'imagexbm' => '<span class="type">bool</span> <span class="methodname">imagexbm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$foreground</code></span> ] )',
  'imap_8bit' => '<span class="type">string</span> <span class="methodname">imap_8bit</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'imap_alerts' => '<span class="type">array</span> <span class="methodname">imap_alerts</span> ( <span class="methodparam">void</span> )',
  'imap_append' => '<span class="type">bool</span> <span class="methodname">imap_append</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$internal_date</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'imap_base64' => '<span class="type">string</span> <span class="methodname">imap_base64</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'imap_binary' => '<span class="type">string</span> <span class="methodname">imap_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'imap_body' => '<span class="type">string</span> <span class="methodname">imap_body</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_bodystruct' => '<span class="type">object</span> <span class="methodname">imap_bodystruct</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$section</code></span> )',
  'imap_check' => '<span class="type">object</span> <span class="methodname">imap_check</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_clearflag_full' => '<span class="type">bool</span> <span class="methodname">imap_clearflag_full</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sequence</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_close' => '<span class="type">bool</span> <span class="methodname">imap_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code><span class="initializer">= 0</span></span> ] )',
  'imap_create' => '',
  'imap_createmailbox' => '<span class="type">bool</span> <span class="methodname">imap_createmailbox</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> )',
  'imap_delete' => '<span class="type">bool</span> <span class="methodname">imap_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_deletemailbox' => '<span class="type">bool</span> <span class="methodname">imap_deletemailbox</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> )',
  'imap_errors' => '<span class="type">array</span> <span class="methodname">imap_errors</span> ( <span class="methodparam">void</span> )',
  'imap_expunge' => '<span class="type">bool</span> <span class="methodname">imap_expunge</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_fetchbody' => '<span class="type">string</span> <span class="methodname">imap_fetchbody</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$section</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_fetchheader' => '<span class="type">string</span> <span class="methodname">imap_fetchheader</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_fetchmime' => '<span class="type">string</span> <span class="methodname">imap_fetchmime</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$section</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_fetch_overview' => '<span class="type">array</span> <span class="methodname">imap_fetch_overview</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sequence</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_fetchstructure' => '<span class="type">object</span> <span class="methodname">imap_fetchstructure</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_fetchtext' => '',
  'imap_gc' => '<span class="type">bool</span> <span class="methodname">imap_gc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$caches</code></span> )',
  'imap_getacl' => '<span class="type">array</span> <span class="methodname">imap_getacl</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> )',
  'imap_getmailboxes' => '<span class="type">array</span> <span class="methodname">imap_getmailboxes</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ref</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'imap_get_quota' => '<span class="type">array</span> <span class="methodname">imap_get_quota</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$quota_root</code></span> )',
  'imap_get_quotaroot' => '<span class="type">array</span> <span class="methodname">imap_get_quotaroot</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$quota_root</code></span> )',
  'imap_getsubscribed' => '<span class="type">array</span> <span class="methodname">imap_getsubscribed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ref</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'imap_header' => '',
  'imap_headerinfo' => '<span class="type">object</span> <span class="methodname">imap_headerinfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fromlength</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$subjectlength</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$defaulthost</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]]] )',
  'imap_headers' => '<span class="type">array</span> <span class="methodname">imap_headers</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_last_error' => '<span class="type">string</span> <span class="methodname">imap_last_error</span> ( <span class="methodparam">void</span> )',
  'imap_list' => '<span class="type">array</span> <span class="methodname">imap_list</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ref</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'imap_listmailbox' => '',
  'imap_listscan' => '<span class="type">array</span> <span class="methodname">imap_listscan</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ref</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'imap_listsubscribed' => '',
  'imap_lsub' => '<span class="type">array</span> <span class="methodname">imap_lsub</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ref</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> )',
  'imap_mailboxmsginfo' => '<span class="type">object</span> <span class="methodname">imap_mailboxmsginfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_mail_compose' => '<span class="type">string</span> <span class="methodname">imap_mail_compose</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$envelope</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$body</code></span> )',
  'imap_mail_copy' => '<span class="type">bool</span> <span class="methodname">imap_mail_copy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msglist</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_mail' => '<span class="type">bool</span> <span class="methodname">imap_mail</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_headers</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$cc</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bcc</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$rpath</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]]]] )',
  'imap_mail_move' => '<span class="type">bool</span> <span class="methodname">imap_mail_move</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msglist</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'imap_mime_header_decode' => '<span class="type">array</span> <span class="methodname">imap_mime_header_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'imap_msgno' => '<span class="type">int</span> <span class="methodname">imap_msgno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> )',
  'imap_num_msg' => '<span class="type">int</span> <span class="methodname">imap_num_msg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_num_recent' => '<span class="type">int</span> <span class="methodname">imap_num_recent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_open' => '<span class="type">resource</span> <span class="methodname">imap_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$n_retries</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]]] )',
  'imap_ping' => '<span class="type">bool</span> <span class="methodname">imap_ping</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> )',
  'imap_qprint' => '<span class="type">string</span> <span class="methodname">imap_qprint</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'imap_rename' => '',
  'imap_renamemailbox' => '<span class="type">bool</span> <span class="methodname">imap_renamemailbox</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_mbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_mbox</code></span> )',
  'imap_reopen' => '<span class="type">bool</span> <span class="methodname">imap_reopen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$n_retries</code><span class="initializer">= 0</span></span> ]] )',
  'imap_rfc822_parse_adrlist' => '<span class="type">array</span> <span class="methodname">imap_rfc822_parse_adrlist</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$default_host</code></span> )',
  'imap_rfc822_parse_headers' => '<span class="type">object</span> <span class="methodname">imap_rfc822_parse_headers</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$headers</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$defaulthost</code><span class="initializer">= &quot;UNKNOWN&quot;</span></span> ] )',
  'imap_rfc822_write_address' => '<span class="type">string</span> <span class="methodname">imap_rfc822_write_address</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$personal</code></span> )',
  'imap_savebody' => '<span class="type">bool</span> <span class="methodname">imap_savebody</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$part_number</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ]] )',
  'imap_scan' => '',
  'imap_scanmailbox' => '',
  'imap_search' => '<span class="type">array</span> <span class="methodname">imap_search</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$criteria</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= SE_FREE</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= NIL</span></span> ]] )',
  'imap_setacl' => '<span class="type">bool</span> <span class="methodname">imap_setacl</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$rights</code></span> )',
  'imap_setflag_full' => '<span class="type">bool</span> <span class="methodname">imap_setflag_full</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sequence</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$flag</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= NIL</span></span> ] )',
  'imap_set_quota' => '<span class="type">bool</span> <span class="methodname">imap_set_quota</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$quota_root</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$quota_limit</code></span> )',
  'imap_sort' => '<span class="type">array</span> <span class="methodname">imap_sort</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$criteria</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$reverse</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$search_criteria</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= NIL</span></span> ]]] )',
  'imap_status' => '<span class="type">object</span> <span class="methodname">imap_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code></span> )',
  'imap_subscribe' => '<span class="type">bool</span> <span class="methodname">imap_subscribe</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> )',
  'imap_thread' => '<span class="type">array</span> <span class="methodname">imap_thread</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= SE_FREE</span></span> ] )',
  'imap_timeout' => '<span class="type">mixed</span> <span class="methodname">imap_timeout</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout_type</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= -1</span></span> ] )',
  'imap_uid' => '<span class="type">int</span> <span class="methodname">imap_uid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> )',
  'imap_undelete' => '<span class="type">bool</span> <span class="methodname">imap_undelete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'imap_unsubscribe' => '<span class="type">bool</span> <span class="methodname">imap_unsubscribe</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$imap_stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> )',
  'imap_utf7_decode' => '<span class="type">string</span> <span class="methodname">imap_utf7_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'imap_utf7_encode' => '<span class="type">string</span> <span class="methodname">imap_utf7_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'imap_utf8' => '<span class="type">string</span> <span class="methodname">imap_utf8</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mime_encoded_text</code></span> )',
  'implode' => '<span class="type">string</span> <span class="methodname">implode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$glue</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$pieces</code></span> ) <span class="type">string</span> <span class="methodname">implode</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$pieces</code></span> )',
  'import_request_variables' => '<span class="type">bool</span> <span class="methodname">import_request_variables</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> ] )',
  'in_array' => '<span class="type">bool</span> <span class="methodname">in_array</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$haystack</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer">= <strong><code>FALSE</code></strong></span></span> ] )',
  'include' => '',
  'include_once' => '',
  'inclued_get_data' => '<span class="type">array</span> <span class="methodname">inclued_get_data</span> ( <span class="methodparam">void</span> )',
  'inet_ntop' => '<span class="type">string</span> <span class="methodname">inet_ntop</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$in_addr</code></span> )',
  'inet_pton' => '<span class="type">string</span> <span class="methodname">inet_pton</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> )',
  'ingres_autocommit' => '<span class="type">bool</span> <span class="methodname">ingres_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_autocommit_state' => '<span class="type">bool</span> <span class="methodname">ingres_autocommit_state</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_charset' => '<span class="type">string</span> <span class="methodname">ingres_charset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_close' => '<span class="type">bool</span> <span class="methodname">ingres_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_commit' => '<span class="type">bool</span> <span class="methodname">ingres_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_connect' => '<span class="type">resource</span> <span class="methodname">ingres_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]]]] )',
  'ingres_cursor' => '<span class="type">string</span> <span class="methodname">ingres_cursor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_errno' => '<span class="type">int</span> <span class="methodname">ingres_errno</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ] )',
  'ingres_error' => '<span class="type">string</span> <span class="methodname">ingres_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ] )',
  'ingres_errsqlstate' => '<span class="type">string</span> <span class="methodname">ingres_errsqlstate</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ] )',
  'ingres_escape_string' => '<span class="type">string</span> <span class="methodname">ingres_escape_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$source_string</code></span> )',
  'ingres_execute' => '<span class="type">bool</span> <span class="methodname">ingres_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> ]] )',
  'ingres_fetch_array' => '<span class="type">array</span> <span class="methodname">ingres_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code></span> ] )',
  'ingres_fetch_assoc' => '<span class="type">array</span> <span class="methodname">ingres_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_fetch_object' => '<span class="type">object</span> <span class="methodname">ingres_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code></span> ] )',
  'ingres_fetch_proc_return' => '<span class="type">int</span> <span class="methodname">ingres_fetch_proc_return</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_fetch_row' => '<span class="type">array</span> <span class="methodname">ingres_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_field_length' => '<span class="type">int</span> <span class="methodname">ingres_field_length</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_field_name' => '<span class="type">string</span> <span class="methodname">ingres_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_field_nullable' => '<span class="type">bool</span> <span class="methodname">ingres_field_nullable</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_field_precision' => '<span class="type">int</span> <span class="methodname">ingres_field_precision</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_field_scale' => '<span class="type">int</span> <span class="methodname">ingres_field_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_field_type' => '<span class="type">string</span> <span class="methodname">ingres_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> )',
  'ingres_free_result' => '<span class="type">bool</span> <span class="methodname">ingres_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_next_error' => '<span class="type">bool</span> <span class="methodname">ingres_next_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ] )',
  'ingres_num_fields' => '<span class="type">int</span> <span class="methodname">ingres_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_num_rows' => '<span class="type">int</span> <span class="methodname">ingres_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ingres_pconnect' => '<span class="type">resource</span> <span class="methodname">ingres_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]]]] )',
  'ingres_prepare' => '<span class="type">mixed</span> <span class="methodname">ingres_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'ingres_query' => '<span class="type">mixed</span> <span class="methodname">ingres_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> ]] )',
  'ingres_result_seek' => '<span class="type">bool</span> <span class="methodname">ingres_result_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$position</code></span> )',
  'ingres_rollback' => '<span class="type">bool</span> <span class="methodname">ingres_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ingres_set_environment' => '<span class="type">bool</span> <span class="methodname">ingres_set_environment</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'ingres_unbuffered_query' => '<span class="type">mixed</span> <span class="methodname">ingres_unbuffered_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> ]] )',
  'ini_alter' => '',
  'ini_get_all' => '<span class="type">array</span> <span class="methodname">ini_get_all</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$extension</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$details</code><span class="initializer">= true</span></span> ]] )',
  'ini_get' => '<span class="type">string</span> <span class="methodname">ini_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span> )',
  'ini_restore' => '<span class="type">void</span> <span class="methodname">ini_restore</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span> )',
  'ini_set' => '<span class="type">string</span> <span class="methodname">ini_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newvalue</code></span> )',
  'inotify_add_watch' => '<span class="type">int</span> <span class="methodname">inotify_add_watch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$inotify_instance</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mask</code></span> )',
  'inotify_init' => '<span class="type">resource</span> <span class="methodname">inotify_init</span> ( <span class="methodparam">void</span> )',
  'inotify_queue_len' => '<span class="type">int</span> <span class="methodname">inotify_queue_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$inotify_instance</code></span> )',
  'inotify_read' => '<span class="type">array</span> <span class="methodname">inotify_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$inotify_instance</code></span> )',
  'inotify_rm_watch' => '<span class="type">bool</span> <span class="methodname">inotify_rm_watch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$inotify_instance</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$watch_descriptor</code></span> )',
  'interface_exists' => '<span class="type">bool</span> <span class="methodname">interface_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$interface_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code><span class="initializer">= true</span></span> ] )',
  'intl_error_name' => '<span class="type">string</span> <span class="methodname">intl_error_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span> )',
  'intl_get_error_code' => '<span class="type">int</span> <span class="methodname">intl_get_error_code</span> ( <span class="methodparam">void</span> )',
  'intl_get_error_message' => '<span class="type">string</span> <span class="methodname">intl_get_error_message</span> ( <span class="methodparam">void</span> )',
  'intl_is_failure' => '<span class="type">bool</span> <span class="methodname">intl_is_failure</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span> )',
  'intval' => '<span class="type">int</span> <span class="methodname">intval</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$base</code><span class="initializer">= 10</span></span> ] )',
  'ip2long' => '<span class="type">int</span> <span class="methodname">ip2long</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ip_address</code></span> )',
  'iptcembed' => '<span class="type">mixed</span> <span class="methodname">iptcembed</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$iptcdata</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$jpeg_file_name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$spool</code></span> ] )',
  'iptcparse' => '<span class="type">array</span> <span class="methodname">iptcparse</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$iptcblock</code></span> )',
  'is_a' => '<span class="type">bool</span> <span class="methodname">is_a</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$allow_string</code><span class="initializer">= <strong><code>FALSE</code></strong></span></span> ] )',
  'is_array' => '<span class="type">bool</span> <span class="methodname">is_array</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_bool' => '<span class="type">bool</span> <span class="methodname">is_bool</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_callable' => '<span class="type">bool</span> <span class="methodname">is_callable</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$syntax_only</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$callable_name</code></span> ]] )',
  'is_dir' => '<span class="type">bool</span> <span class="methodname">is_dir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_double' => '',
  'is_executable' => '<span class="type">bool</span> <span class="methodname">is_executable</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_file' => '<span class="type">bool</span> <span class="methodname">is_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_finite' => '<span class="type">bool</span> <span class="methodname">is_finite</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span> )',
  'is_float' => '<span class="type">bool</span> <span class="methodname">is_float</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_infinite' => '<span class="type">bool</span> <span class="methodname">is_infinite</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span> )',
  'is_integer' => '',
  'is_int' => '<span class="type">bool</span> <span class="methodname">is_int</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_link' => '<span class="type">bool</span> <span class="methodname">is_link</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_long' => '',
  'is_nan' => '<span class="type">bool</span> <span class="methodname">is_nan</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span> )',
  'is_null' => '<span class="type">bool</span> <span class="methodname">is_null</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_numeric' => '<span class="type">bool</span> <span class="methodname">is_numeric</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_object' => '<span class="type">bool</span> <span class="methodname">is_object</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_readable' => '<span class="type">bool</span> <span class="methodname">is_readable</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_real' => '',
  'is_resource' => '<span class="type">bool</span> <span class="methodname">is_resource</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_scalar' => '<span class="type">bool</span> <span class="methodname">is_scalar</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'isset' => '<span class="type">bool</span> <span class="methodname">isset</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'is_soap_fault' => '<span class="type">bool</span> <span class="methodname">is_soap_fault</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object</code></span> )',
  'is_string' => '<span class="type">bool</span> <span class="methodname">is_string</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'is_subclass_of' => '<span class="type">bool</span> <span class="methodname">is_subclass_of</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$allow_string</code><span class="initializer">= <strong><code>TRUE</code></strong></span></span> ] )',
  'is_tainted' => '<span class="type">bool</span> <span class="methodname">is_tainted</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'is_uploaded_file' => '<span class="type">bool</span> <span class="methodname">is_uploaded_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_writable' => '<span class="type">bool</span> <span class="methodname">is_writable</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'is_writeable' => '',
  'iterator_apply' => '<span class="type">int</span> <span class="methodname">iterator_apply</span> ( <span class="methodparam"><span class="type">Traversable</span> <code class="parameter">$iterator</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> ] )',
  'iterator_count' => '<span class="type">int</span> <span class="methodname">iterator_count</span> ( <span class="methodparam"><span class="type">Traversable</span> <code class="parameter">$iterator</code></span> )',
  'iterator_to_array' => '<span class="type">array</span> <span class="methodname">iterator_to_array</span> ( <span class="methodparam"><span class="type">Traversable</span> <code class="parameter">$iterator</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_keys</code><span class="initializer">= true</span></span> ] )',
  'java_last_exception_clear' => '<span class="type">void</span> <span class="methodname">java_last_exception_clear</span> ( <span class="methodparam">void</span> )',
  'java_last_exception_get' => '<span class="type">object</span> <span class="methodname">java_last_exception_get</span> ( <span class="methodparam">void</span> )',
  'jddayofweek' => '<span class="type">mixed</span> <span class="methodname">jddayofweek</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$julianday</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= CAL_DOW_DAYNO</span></span> ] )',
  'jdmonthname' => '<span class="type">string</span> <span class="methodname">jdmonthname</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$julianday</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'jdtofrench' => '<span class="type">string</span> <span class="methodname">jdtofrench</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$juliandaycount</code></span> )',
  'jdtogregorian' => '<span class="type">string</span> <span class="methodname">jdtogregorian</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$julianday</code></span> )',
  'jdtojewish' => '<span class="type">string</span> <span class="methodname">jdtojewish</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$juliandaycount</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$hebrew</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fl</code><span class="initializer">= 0</span></span> ]] )',
  'jdtojulian' => '<span class="type">string</span> <span class="methodname">jdtojulian</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$julianday</code></span> )',
  'jdtounix' => '<span class="type">int</span> <span class="methodname">jdtounix</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$jday</code></span> )',
  'jewishtojd' => '<span class="type">int</span> <span class="methodname">jewishtojd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'join' => '',
  'jpeg2wbmp' => '<span class="type">bool</span> <span class="methodname">jpeg2wbmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$jpegname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$wbmpname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dest_height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dest_width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$threshold</code></span> )',
  'json_decode' => '<span class="type">mixed</span> <span class="methodname">json_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$json</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$assoc</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code><span class="initializer">= 512</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ]]] )',
  'json_encode' => '<span class="type">string</span> <span class="methodname">json_encode</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code><span class="initializer">= 512</span></span> ]] )',
  'json_last_error' => '<span class="type">int</span> <span class="methodname">json_last_error</span> ( <span class="methodparam">void</span> )',
  'json_last_error_msg' => '<span class="type">string</span> <span class="methodname">json_last_error_msg</span> ( <span class="methodparam">void</span> )',
  'judy_type' => '<span class="type">int</span> <span class="methodname">judy_type</span> ( <span class="methodparam"><span class="type">Judy</span> <code class="parameter">$array</code></span> )',
  'judy_version' => '<span class="type">string</span> <span class="methodname">judy_version</span> ( <span class="methodparam">void</span> )',
  'juliantojd' => '<span class="type">int</span> <span class="methodname">juliantojd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code></span> )',
  'kadm5_chpass_principal' => '<span class="type">bool</span> <span class="methodname">kadm5_chpass_principal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'kadm5_create_principal' => '<span class="type">bool</span> <span class="methodname">kadm5_create_principal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]] )',
  'kadm5_delete_principal' => '<span class="type">bool</span> <span class="methodname">kadm5_delete_principal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> )',
  'kadm5_destroy' => '<span class="type">bool</span> <span class="methodname">kadm5_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'kadm5_flush' => '<span class="type">bool</span> <span class="methodname">kadm5_flush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'kadm5_get_policies' => '<span class="type">array</span> <span class="methodname">kadm5_get_policies</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'kadm5_get_principal' => '<span class="type">array</span> <span class="methodname">kadm5_get_principal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> )',
  'kadm5_get_principals' => '<span class="type">array</span> <span class="methodname">kadm5_get_principals</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'kadm5_init_with_password' => '<span class="type">resource</span> <span class="methodname">kadm5_init_with_password</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$admin_server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$realm</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'kadm5_modify_principal' => '<span class="type">bool</span> <span class="methodname">kadm5_modify_principal</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$principal</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'key_exists' => '',
  'key' => '<span class="type">mixed</span> <span class="methodname">key</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'krsort' => '<span class="type">bool</span> <span class="methodname">krsort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'ksort' => '<span class="type">bool</span> <span class="methodname">ksort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'lcfirst' => '<span class="type">string</span> <span class="methodname">lcfirst</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'lcg_value' => '<span class="type">float</span> <span class="methodname">lcg_value</span> ( <span class="methodparam">void</span> )',
  'lchgrp' => '<span class="type">bool</span> <span class="methodname">lchgrp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$group</code></span> )',
  'lchown' => '<span class="type">bool</span> <span class="methodname">lchown</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$user</code></span> )',
  'ldap_8859_to_t61' => '<span class="type">string</span> <span class="methodname">ldap_8859_to_t61</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'ldap_add' => '<span class="type">bool</span> <span class="methodname">ldap_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$entry</code></span> )',
  'ldap_bind' => '<span class="type">bool</span> <span class="methodname">ldap_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bind_rdn</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bind_password</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'ldap_close' => '',
  'ldap_compare' => '<span class="type">mixed</span> <span class="methodname">ldap_compare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attribute</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'ldap_connect' => '<span class="type">resource</span> <span class="methodname">ldap_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 389</span></span> ]] )',
  'ldap_control_paged_result' => '<span class="type">bool</span> <span class="methodname">ldap_control_paged_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pagesize</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$iscritical</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$cookie</code><span class="initializer">= &quot;&quot;</span></span> ]] )',
  'ldap_control_paged_result_response' => '<span class="type">bool</span> <span class="methodname">ldap_control_paged_result_response</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$cookie</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$estimated</code></span> ]] )',
  'ldap_count_entries' => '<span class="type">int</span> <span class="methodname">ldap_count_entries</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> )',
  'ldap_delete' => '<span class="type">bool</span> <span class="methodname">ldap_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> )',
  'ldap_dn2ufn' => '<span class="type">string</span> <span class="methodname">ldap_dn2ufn</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> )',
  'ldap_err2str' => '<span class="type">string</span> <span class="methodname">ldap_err2str</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> )',
  'ldap_errno' => '<span class="type">int</span> <span class="methodname">ldap_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> )',
  'ldap_error' => '<span class="type">string</span> <span class="methodname">ldap_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> )',
  'ldap_explode_dn' => '<span class="type">array</span> <span class="methodname">ldap_explode_dn</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$with_attrib</code></span> )',
  'ldap_first_attribute' => '<span class="type">string</span> <span class="methodname">ldap_first_attribute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> )',
  'ldap_first_entry' => '<span class="type">resource</span> <span class="methodname">ldap_first_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> )',
  'ldap_first_reference' => '<span class="type">resource</span> <span class="methodname">ldap_first_reference</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'ldap_free_result' => '<span class="type">bool</span> <span class="methodname">ldap_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> )',
  'ldap_get_attributes' => '<span class="type">array</span> <span class="methodname">ldap_get_attributes</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> )',
  'ldap_get_dn' => '<span class="type">string</span> <span class="methodname">ldap_get_dn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> )',
  'ldap_get_entries' => '<span class="type">array</span> <span class="methodname">ldap_get_entries</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> )',
  'ldap_get_option' => '<span class="type">bool</span> <span class="methodname">ldap_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$retval</code></span> )',
  'ldap_get_values' => '<span class="type">array</span> <span class="methodname">ldap_get_values</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attribute</code></span> )',
  'ldap_get_values_len' => '<span class="type">array</span> <span class="methodname">ldap_get_values_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$attribute</code></span> )',
  'ldap_list' => '<span class="type">resource</span> <span class="methodname">ldap_list</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base_dn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filter</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrsonly</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sizelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$deref</code></span> ]]]]] )',
  'ldap_mod_add' => '<span class="type">bool</span> <span class="methodname">ldap_mod_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$entry</code></span> )',
  'ldap_mod_del' => '<span class="type">bool</span> <span class="methodname">ldap_mod_del</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$entry</code></span> )',
  'ldap_modify' => '<span class="type">bool</span> <span class="methodname">ldap_modify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$entry</code></span> )',
  'ldap_mod_replace' => '<span class="type">bool</span> <span class="methodname">ldap_mod_replace</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$entry</code></span> )',
  'ldap_next_attribute' => '<span class="type">string</span> <span class="methodname">ldap_next_attribute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> )',
  'ldap_next_entry' => '<span class="type">resource</span> <span class="methodname">ldap_next_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_entry_identifier</code></span> )',
  'ldap_next_reference' => '<span class="type">resource</span> <span class="methodname">ldap_next_reference</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> )',
  'ldap_parse_reference' => '<span class="type">bool</span> <span class="methodname">ldap_parse_reference</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$referrals</code></span> )',
  'ldap_parse_result' => '<span class="type">bool</span> <span class="methodname">ldap_parse_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errcode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$matcheddn</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$errmsg</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$referrals</code></span> ]]] )',
  'ldap_read' => '<span class="type">resource</span> <span class="methodname">ldap_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base_dn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filter</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrsonly</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sizelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$deref</code></span> ]]]]] )',
  'ldap_rename' => '<span class="type">bool</span> <span class="methodname">ldap_rename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newrdn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newparent</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$deleteoldrdn</code></span> )',
  'ldap_sasl_bind' => '<span class="type">bool</span> <span class="methodname">ldap_sasl_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$binddn</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sasl_mech</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sasl_realm</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sasl_authc_id</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sasl_authz_id</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$props</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]]]]]]] )',
  'ldap_search' => '<span class="type">resource</span> <span class="methodname">ldap_search</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base_dn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filter</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrsonly</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sizelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timelimit</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$deref</code></span> ]]]]] )',
  'ldap_set_option' => '<span class="type">bool</span> <span class="methodname">ldap_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$newval</code></span> )',
  'ldap_set_rebind_proc' => '<span class="type">bool</span> <span class="methodname">ldap_set_rebind_proc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> )',
  'ldap_sort' => '<span class="type">bool</span> <span class="methodname">ldap_sort</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sortfilter</code></span> )',
  'ldap_start_tls' => '<span class="type">bool</span> <span class="methodname">ldap_start_tls</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'ldap_t61_to_8859' => '<span class="type">string</span> <span class="methodname">ldap_t61_to_8859</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'ldap_unbind' => '<span class="type">bool</span> <span class="methodname">ldap_unbind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> )',
  'levenshtein' => '<span class="type">int</span> <span class="methodname">levenshtein</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> ) <span class="type">int</span> <span class="methodname">levenshtein</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cost_ins</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cost_rep</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cost_del</code></span> )',
  'libxml_clear_errors' => '<span class="type">void</span> <span class="methodname">libxml_clear_errors</span> ( <span class="methodparam">void</span> )',
  'libxml_disable_entity_loader' => '<span class="type">bool</span> <span class="methodname">libxml_disable_entity_loader</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$disable</code><span class="initializer">= true</span></span> ] )',
  'libxml_get_errors' => '<span class="type">array</span> <span class="methodname">libxml_get_errors</span> ( <span class="methodparam">void</span> )',
  'libxml_get_last_error' => '<span class="type">LibXMLError</span> <span class="methodname">libxml_get_last_error</span> ( <span class="methodparam">void</span> )',
  'libxml_set_external_entity_loader' => '<span class="type">void</span> <span class="methodname">libxml_set_external_entity_loader</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$resolver_function</code></span> )',
  'libxml_set_streams_context' => '<span class="type">void</span> <span class="methodname">libxml_set_streams_context</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$streams_context</code></span> )',
  'libxml_use_internal_errors' => '<span class="type">bool</span> <span class="methodname">libxml_use_internal_errors</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_errors</code><span class="initializer">= false</span></span> ] )',
  'link' => '<span class="type">bool</span> <span class="methodname">link</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$link</code></span> )',
  'linkinfo' => '<span class="type">int</span> <span class="methodname">linkinfo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'list' => '<span class="type">array</span> <span class="methodname">list</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'localeconv' => '<span class="type">array</span> <span class="methodname">localeconv</span> ( <span class="methodparam">void</span> )',
  'localtime' => '<span class="type">array</span> <span class="methodname">localtime</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_associative</code><span class="initializer">= false</span></span> ]] )',
  'log10' => '<span class="type">float</span> <span class="methodname">log10</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'log1p' => '<span class="type">float</span> <span class="methodname">log1p</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> )',
  'log' => '<span class="type">float</span> <span class="methodname">log</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$base</code><span class="initializer">= M_E</span></span> ] )',
  'long2ip' => '<span class="type">string</span> <span class="methodname">long2ip</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$proper_address</code></span> )',
  'lstat' => '<span class="type">array</span> <span class="methodname">lstat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ltrim' => '<span class="type">string</span> <span class="methodname">ltrim</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charlist</code></span> ] )',
  'lzf_compress' => '<span class="type">string</span> <span class="methodname">lzf_compress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'lzf_decompress' => '<span class="type">string</span> <span class="methodname">lzf_decompress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'lzf_optimized_for' => '<span class="type">int</span> <span class="methodname">lzf_optimized_for</span> ( <span class="methodparam">void</span> )',
  'magic_quotes_runtime' => '',
  'mail' => '<span class="type">bool</span> <span class="methodname">mail</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_headers</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_parameters</code></span> ]] )',
  'mailparse_determine_best_xfer_encoding' => '<span class="type">string</span> <span class="methodname">mailparse_determine_best_xfer_encoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fp</code></span> )',
  'mailparse_msg_create' => '<span class="type">resource</span> <span class="methodname">mailparse_msg_create</span> ( <span class="methodparam">void</span> )',
  'mailparse_msg_extract_part_file' => '<span class="type">string</span> <span class="methodname">mailparse_msg_extract_part_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callbackfunc</code></span> ] )',
  'mailparse_msg_extract_part' => '<span class="type">void</span> <span class="methodname">mailparse_msg_extract_part</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgbody</code></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callbackfunc</code></span> ] )',
  'mailparse_msg_extract_whole_part_file' => '<span class="type">string</span> <span class="methodname">mailparse_msg_extract_whole_part_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callbackfunc</code></span> ] )',
  'mailparse_msg_free' => '<span class="type">bool</span> <span class="methodname">mailparse_msg_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> )',
  'mailparse_msg_get_part_data' => '<span class="type">array</span> <span class="methodname">mailparse_msg_get_part_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> )',
  'mailparse_msg_get_part' => '<span class="type">resource</span> <span class="methodname">mailparse_msg_get_part</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mimesection</code></span> )',
  'mailparse_msg_get_structure' => '<span class="type">array</span> <span class="methodname">mailparse_msg_get_structure</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> )',
  'mailparse_msg_parse_file' => '<span class="type">resource</span> <span class="methodname">mailparse_msg_parse_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'mailparse_msg_parse' => '<span class="type">bool</span> <span class="methodname">mailparse_msg_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$mimemail</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'mailparse_rfc822_parse_addresses' => '<span class="type">array</span> <span class="methodname">mailparse_rfc822_parse_addresses</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$addresses</code></span> )',
  'mailparse_stream_encode' => '<span class="type">bool</span> <span class="methodname">mailparse_stream_encode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sourcefp</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$destfp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'mailparse_uudecode_all' => '<span class="type">array</span> <span class="methodname">mailparse_uudecode_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fp</code></span> )',
  'main' => '',
  'maxdb_affected_rows' => '<span class="type">int</span> <span class="methodname">maxdb_affected_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_autocommit' => '<span class="type">bool</span> <span class="methodname">maxdb_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$mode</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::auto_commit</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$mode</code></span> )',
  'maxdb_bind_param' => '',
  'maxdb_bind_result' => '',
  'maxdb_change_user' => '<span class="type">bool</span> <span class="methodname">maxdb_change_user</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::change_user</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> )',
  'maxdb_character_set_name' => '<span class="type">string</span> <span class="methodname">maxdb_character_set_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">string</span> <span class="methodname">maxdb::character_set_name</span> ( <span class="methodparam">void</span> )',
  'maxdb_client_encoding' => '',
  'maxdb_close' => '<span class="type">bool</span> <span class="methodname">maxdb_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::close</span> ( <span class="methodparam">void</span> )',
  'maxdb_close_long_data' => '',
  'maxdb_commit' => '<span class="type">bool</span> <span class="methodname">maxdb_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::commit</span> ( <span class="methodparam">void</span> )',
  'maxdb_connect_errno' => '<span class="type">int</span> <span class="methodname">maxdb_connect_errno</span> ( <span class="methodparam">void</span> )',
  'maxdb_connect_error' => '<span class="type">string</span> <span class="methodname">maxdb_connect_error</span> ( <span class="methodparam">void</span> )',
  'maxdb_connect' => '<span class="type">resource</span> <span class="methodname">maxdb_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$socket</code></span> ]]]]]] )',
  'maxdb_data_seek' => '<span class="type">bool</span> <span class="methodname">maxdb_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_result::data_seek</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'maxdb_debug' => '<span class="type">void</span> <span class="methodname">maxdb_debug</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$debug</code></span> )',
  'maxdb_disable_reads_from_master' => '<span class="type">bool</span> <span class="methodname">maxdb_disable_reads_from_master</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">void</span> <span class="methodname">maxdb::disable_reads_from_master</span> ( <span class="methodparam">void</span> )',
  'maxdb_disable_rpl_parse' => '<span class="type">bool</span> <span class="methodname">maxdb_disable_rpl_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_dump_debug_info' => '<span class="type">bool</span> <span class="methodname">maxdb_dump_debug_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_embedded_connect' => '<span class="type">resource</span> <span class="methodname">maxdb_embedded_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> ] )',
  'maxdb_enable_reads_from_master' => '<span class="type">bool</span> <span class="methodname">maxdb_enable_reads_from_master</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_enable_rpl_parse' => '<span class="type">bool</span> <span class="methodname">maxdb_enable_rpl_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_errno' => '<span class="type">int</span> <span class="methodname">maxdb_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_error' => '<span class="type">string</span> <span class="methodname">maxdb_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_escape_string' => '',
  'maxdb_execute' => '',
  'maxdb_fetch_array' => '<span class="type">mixed</span> <span class="methodname">maxdb_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resulttype</code></span> ] ) <span class="type">mixed</span> <span class="methodname">maxdb_result::fetch_array</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$resulttype</code></span> ] )',
  'maxdb_fetch_assoc' => '<span class="type">array</span> <span class="methodname">maxdb_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">array</span> <span class="methodname">maxdb_result::fetch_assoc</span> ( <span class="methodparam">void</span> )',
  'maxdb_fetch_field_direct' => '<span class="type">mixed</span> <span class="methodname">maxdb_fetch_field_direct</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldnr</code></span> ) <span class="type">mixed</span> <span class="methodname">maxdb_result::fetch_field_direct</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldnr</code></span> )',
  'maxdb_fetch_field' => '<span class="type">mixed</span> <span class="methodname">maxdb_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">mixed</span> <span class="methodname">maxdb_result::fetch_field</span> ( <span class="methodparam">void</span> )',
  'maxdb_fetch_fields' => '<span class="type">mixed</span> <span class="methodname">maxdb_fetch_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">mixed</span> <span class="methodname">maxdb_result::fetch_fields</span> ( <span class="methodparam">void</span> )',
  'maxdb_fetch' => '',
  'maxdb_fetch_lengths' => '<span class="type">array</span> <span class="methodname">maxdb_fetch_lengths</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'maxdb_fetch_object' => '<span class="type">object</span> <span class="methodname">maxdb_fetch_object</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$result</code></span> ) <span class="type">object</span> <span class="methodname">maxdb_result::fetch_object</span> ( <span class="methodparam">void</span> )',
  'maxdb_fetch_row' => '<span class="type">mixed</span> <span class="methodname">maxdb_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">mixed</span> <span class="methodname">maxdb_result::fetch_row</span> ( <span class="methodparam">void</span> )',
  'maxdb_field_count' => '<span class="type">int</span> <span class="methodname">maxdb_field_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">int</span> <span class="methodname">maxdb::field_count</span> ( <span class="methodparam">void</span> )',
  'maxdb_field_seek' => '<span class="type">bool</span> <span class="methodname">maxdb_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldnr</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_result::field_seek</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldnr</code></span> )',
  'maxdb_field_tell' => '<span class="type">int</span> <span class="methodname">maxdb_field_tell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'maxdb_free_result' => '<span class="type">void</span> <span class="methodname">maxdb_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">void</span> <span class="methodname">maxdb_result::free</span> ( <span class="methodparam">void</span> )',
  'maxdb_get_client_info' => '<span class="type">string</span> <span class="methodname">maxdb_get_client_info</span> ( <span class="methodparam">void</span> )',
  'maxdb_get_client_version' => '<span class="type">int</span> <span class="methodname">maxdb_get_client_version</span> ( <span class="methodparam">void</span> )',
  'maxdb_get_host_info' => '<span class="type">string</span> <span class="methodname">maxdb_get_host_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_get_metadata' => '',
  'maxdb_get_proto_info' => '<span class="type">int</span> <span class="methodname">maxdb_get_proto_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_get_server_info' => '<span class="type">string</span> <span class="methodname">maxdb_get_server_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_get_server_version' => '<span class="type">int</span> <span class="methodname">maxdb_get_server_version</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_info' => '<span class="type">string</span> <span class="methodname">maxdb_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_init' => '<span class="type">resource</span> <span class="methodname">maxdb_init</span> ( <span class="methodparam">void</span> )',
  'maxdb_insert_id' => '<span class="type">mixed</span> <span class="methodname">maxdb_insert_id</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_kill' => '<span class="type">bool</span> <span class="methodname">maxdb_kill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$processid</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::kill</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$processid</code></span> )',
  'maxdb_master_query' => '<span class="type">bool</span> <span class="methodname">maxdb_master_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_more_results' => '<span class="type">bool</span> <span class="methodname">maxdb_more_results</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_multi_query' => '<span class="type">bool</span> <span class="methodname">maxdb_multi_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::multi_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_next_result' => '<span class="type">bool</span> <span class="methodname">maxdb_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_num_fields' => '<span class="type">int</span> <span class="methodname">maxdb_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'maxdb_num_rows' => '<span class="type">int</span> <span class="methodname">maxdb_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'maxdb_options' => '<span class="type">bool</span> <span class="methodname">maxdb_options</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::options</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'maxdb_param_count' => '',
  'maxdb_ping' => '<span class="type">bool</span> <span class="methodname">maxdb_ping</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::ping</span> ( <span class="methodparam">void</span> )',
  'maxdb_prepare' => '<span class="type">resource</span> <span class="methodname">maxdb_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">maxdb_stmt</span> <span class="methodname">maxdb::prepare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_query' => '<span class="type">mixed</span> <span class="methodname">maxdb_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$resultmode</code></span> ] ) <span class="type">mixed</span> <span class="methodname">maxdb::query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_real_connect' => '<span class="type">bool</span> <span class="methodname">maxdb_real_connect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$socket</code></span> ]]]]]] ) <span class="type">bool</span> <span class="methodname">maxdb::real_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$socket</code></span> ]]]]]] )',
  'maxdb_real_escape_string' => '<span class="type">string</span> <span class="methodname">maxdb_real_escape_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$escapestr</code></span> ) <span class="type">string</span> <span class="methodname">maxdb::real_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$escapestr</code></span> )',
  'maxdb_real_query' => '<span class="type">bool</span> <span class="methodname">maxdb_real_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::real_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_report' => '<span class="type">bool</span> <span class="methodname">maxdb_report</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> )',
  'maxdb_rollback' => '<span class="type">bool</span> <span class="methodname">maxdb_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::rollback</span> ( <span class="methodparam">void</span> )',
  'maxdb_rpl_parse_enabled' => '<span class="type">int</span> <span class="methodname">maxdb_rpl_parse_enabled</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_rpl_probe' => '<span class="type">bool</span> <span class="methodname">maxdb_rpl_probe</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_rpl_query_type' => '<span class="type">int</span> <span class="methodname">maxdb_rpl_query_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">int</span> <span class="methodname">maxdb::rpl_query_type</span> ( <span class="methodparam">void</span> )',
  'maxdb_select_db' => '<span class="type">bool</span> <span class="methodname">maxdb_select_db</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> )',
  'maxdb_send_long_data' => '',
  'maxdb_send_query' => '<span class="type">bool</span> <span class="methodname">maxdb_send_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::send_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_server_end' => '<span class="type">void</span> <span class="methodname">maxdb_server_end</span> ( <span class="methodparam">void</span> )',
  'maxdb_server_init' => '<span class="type">bool</span> <span class="methodname">maxdb_server_init</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$server</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$groups</code></span> ]] )',
  'maxdb_set_opt' => '',
  'maxdb_sqlstate' => '<span class="type">string</span> <span class="methodname">maxdb_sqlstate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_ssl_set' => '<span class="type">bool</span> <span class="methodname">maxdb_ssl_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cert</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ca</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$capath</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb::ssl_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cert</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ca</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$capath</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> )',
  'maxdb_stat' => '<span class="type">string</span> <span class="methodname">maxdb_stat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">string</span> <span class="methodname">maxdb::stat</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_affected_rows' => '<span class="type">int</span> <span class="methodname">maxdb_stmt_affected_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_bind_param' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_bind_param</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::bind_param</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] ) <span class="type">bool</span> <span class="methodname">maxdb_stmt_bind_param</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$var</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::bind_param</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$var</code></span> )',
  'maxdb_stmt_bind_result' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_bind_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::bind_result</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var1</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] )',
  'maxdb_stmt_close' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::close</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_close_long_data' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_close_long_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_nr</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::close_long_data</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_data_seek' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::data_seek</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'maxdb_stmt_errno' => '<span class="type">int</span> <span class="methodname">maxdb_stmt_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_error' => '<span class="type">string</span> <span class="methodname">maxdb_stmt_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_execute' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::execute</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_fetch' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_fetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::fetch</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_free_result' => '<span class="type">void</span> <span class="methodname">maxdb_stmt_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">void</span> <span class="methodname">maxdb_stmt::free_result</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_init' => '<span class="type">resource</span> <span class="methodname">maxdb_stmt_init</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">object</span> <span class="methodname">maxdb::stmt_init</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_num_rows' => '<span class="type">int</span> <span class="methodname">maxdb_stmt_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_param_count' => '<span class="type">int</span> <span class="methodname">maxdb_stmt_param_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_prepare' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> ) <span class="type">mixed</span> <span class="methodname">maxdb_stmt::prepare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'maxdb_stmt_reset' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_reset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::reset</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_result_metadata' => '<span class="type">resource</span> <span class="methodname">maxdb_stmt_result_metadata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">resource</span> <span class="methodname">maxdb_stmt::result_metadata</span> ( <span class="methodparam">void</span> )',
  'maxdb_stmt_send_long_data' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_send_long_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_nr</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> ) <span class="type">bool</span> <span class="methodname">maxdb_stmt::stmt_send_long_data</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$param_nr</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'maxdb_stmt_sqlstate' => '<span class="type">string</span> <span class="methodname">maxdb_stmt_sqlstate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'maxdb_stmt_store_result' => '<span class="type">bool</span> <span class="methodname">maxdb_stmt_store_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> ) <span class="type">object</span> <span class="methodname">maxdb_stmt::store_result</span> ( <span class="methodparam">void</span> )',
  'maxdb_store_result' => '<span class="type">resource</span> <span class="methodname">maxdb_store_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">object</span> <span class="methodname">maxdb::store_result</span> ( <span class="methodparam">void</span> )',
  'maxdb_thread_id' => '<span class="type">int</span> <span class="methodname">maxdb_thread_id</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'maxdb_thread_safe' => '<span class="type">bool</span> <span class="methodname">maxdb_thread_safe</span> ( <span class="methodparam">void</span> )',
  'maxdb_use_result' => '<span class="type">resource</span> <span class="methodname">maxdb_use_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> ) <span class="type">resource</span> <span class="methodname">maxdb::use_result</span> ( <span class="methodparam">void</span> )',
  'maxdb_warning_count' => '<span class="type">int</span> <span class="methodname">maxdb_warning_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link</code></span> )',
  'max' => '<span class="type">mixed</span> <span class="methodname">max</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> ) <span class="type">mixed</span> <span class="methodname">max</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value1</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value2</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'mb_check_encoding' => '<span class="type">bool</span> <span class="methodname">mb_check_encoding</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$var</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_convert_case' => '<span class="type">string</span> <span class="methodname">mb_convert_case</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_convert_encoding' => '<span class="type">string</span> <span class="methodname">mb_convert_encoding</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_encoding</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$from_encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_convert_kana' => '<span class="type">string</span> <span class="methodname">mb_convert_kana</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;KV&quot;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_convert_variables' => '<span class="type">string</span> <span class="methodname">mb_convert_variables</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_encoding</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$from_encoding</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$vars</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] )',
  'mb_decode_mimeheader' => '<span class="type">string</span> <span class="methodname">mb_decode_mimeheader</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'mb_decode_numericentity' => '<span class="type">string</span> <span class="methodname">mb_decode_numericentity</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$convmap</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_detect_encoding' => '<span class="type">string</span> <span class="methodname">mb_detect_encoding</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$encoding_list</code><span class="initializer">= mb_detect_order()</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strict</code><span class="initializer">= false</span></span> ]] )',
  'mb_detect_order' => '<span class="type">mixed</span> <span class="methodname">mb_detect_order</span> ([ <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$encoding_list</code><span class="initializer">= mb_detect_order()</span></span> ] )',
  'mb_encode_mimeheader' => '<span class="type">string</span> <span class="methodname">mb_encode_mimeheader</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code><span class="initializer">= mb_internal_encoding()</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$transfer_encoding</code><span class="initializer">= &quot;B&quot;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$linefeed</code><span class="initializer">= &quot;\r\n&quot;</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$indent</code><span class="initializer">= 0</span></span> ]]]] )',
  'mb_encode_numericentity' => '<span class="type">string</span> <span class="methodname">mb_encode_numericentity</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$convmap</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_hex</code><span class="initializer">= FALSE</span></span> ]] )',
  'mb_encoding_aliases' => '<span class="type">array</span> <span class="methodname">mb_encoding_aliases</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'mb_ereg' => '<span class="type">int</span> <span class="methodname">mb_ereg</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$regs</code></span> ] )',
  'mb_eregi' => '<span class="type">int</span> <span class="methodname">mb_eregi</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$regs</code></span> ] )',
  'mb_eregi_replace' => '<span class="type">string</span> <span class="methodname">mb_eregi_replace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replace</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;msri&quot;</span></span> ] )',
  'mb_ereg_match' => '<span class="type">bool</span> <span class="methodname">mb_ereg_match</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;msr&quot;</span></span> ] )',
  'mb_ereg_replace_callback' => '<span class="type">string</span> <span class="methodname">mb_ereg_replace_callback</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;msr&quot;</span></span> ] )',
  'mb_ereg_replace' => '<span class="type">string</span> <span class="methodname">mb_ereg_replace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;msr&quot;</span></span> ] )',
  'mb_ereg_search_getpos' => '<span class="type">int</span> <span class="methodname">mb_ereg_search_getpos</span> ( <span class="methodparam">void</span> )',
  'mb_ereg_search_getregs' => '<span class="type">array</span> <span class="methodname">mb_ereg_search_getregs</span> ( <span class="methodparam">void</span> )',
  'mb_ereg_search' => '<span class="type">bool</span> <span class="methodname">mb_ereg_search</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;ms&quot;</span></span> ]] )',
  'mb_ereg_search_init' => '<span class="type">bool</span> <span class="methodname">mb_ereg_search_init</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;msr&quot;</span></span> ]] )',
  'mb_ereg_search_pos' => '<span class="type">array</span> <span class="methodname">mb_ereg_search_pos</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;ms&quot;</span></span> ]] )',
  'mb_ereg_search_regs' => '<span class="type">array</span> <span class="methodname">mb_ereg_search_regs</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code><span class="initializer">= &quot;ms&quot;</span></span> ]] )',
  'mb_ereg_search_setpos' => '<span class="type">bool</span> <span class="methodname">mb_ereg_search_setpos</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$position</code></span> )',
  'mb_get_info' => '<span class="type">mixed</span> <span class="methodname">mb_get_info</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer">= &quot;all&quot;</span></span> ] )',
  'mb_http_input' => '<span class="type">mixed</span> <span class="methodname">mb_http_input</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code><span class="initializer">= &quot;&quot;</span></span> ] )',
  'mb_http_output' => '<span class="type">mixed</span> <span class="methodname">mb_http_output</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_http_output()</span></span> ] )',
  'mb_internal_encoding' => '<span class="type">mixed</span> <span class="methodname">mb_internal_encoding</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_language' => '<span class="type">mixed</span> <span class="methodname">mb_language</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code><span class="initializer">= mb_language()</span></span> ] )',
  'mb_list_encodings' => '<span class="type">array</span> <span class="methodname">mb_list_encodings</span> ( <span class="methodparam">void</span> )',
  'mb_output_handler' => '<span class="type">string</span> <span class="methodname">mb_output_handler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'mb_parse_str' => '<span class="type">bool</span> <span class="methodname">mb_parse_str</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoded_string</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> ] )',
  'mb_preferred_mime_name' => '<span class="type">string</span> <span class="methodname">mb_preferred_mime_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'mb_regex_encoding' => '<span class="type">mixed</span> <span class="methodname">mb_regex_encoding</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_regex_encoding()</span></span> ] )',
  'mb_regex_set_options' => '<span class="type">string</span> <span class="methodname">mb_regex_set_options</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code><span class="initializer">= mb_regex_set_options()</span></span> ] )',
  'mb_send_mail' => '<span class="type">bool</span> <span class="methodname">mb_send_mail</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_headers</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$additional_parameter</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ]] )',
  'mb_split' => '<span class="type">array</span> <span class="methodname">mb_split</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> ] )',
  'mb_strcut' => '<span class="type">string</span> <span class="methodname">mb_strcut</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strimwidth' => '<span class="type">string</span> <span class="methodname">mb_strimwidth</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$trimmarker</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_stripos' => '<span class="type">int</span> <span class="methodname">mb_stripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_stristr' => '<span class="type">string</span> <span class="methodname">mb_stristr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strlen' => '<span class="type">int</span> <span class="methodname">mb_strlen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_strpos' => '<span class="type">int</span> <span class="methodname">mb_strpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strrchr' => '<span class="type">string</span> <span class="methodname">mb_strrchr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$part</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strrichr' => '<span class="type">string</span> <span class="methodname">mb_strrichr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$part</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strripos' => '<span class="type">int</span> <span class="methodname">mb_strripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strrpos' => '<span class="type">int</span> <span class="methodname">mb_strrpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strstr' => '<span class="type">string</span> <span class="methodname">mb_strstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'mb_strtolower' => '<span class="type">string</span> <span class="methodname">mb_strtolower</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_strtoupper' => '<span class="type">string</span> <span class="methodname">mb_strtoupper</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_strwidth' => '<span class="type">int</span> <span class="methodname">mb_strwidth</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_substitute_character' => '<span class="type">mixed</span> <span class="methodname">mb_substitute_character</span> ([ <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$substrchar</code><span class="initializer">= mb_substitute_character()</span></span> ] )',
  'mb_substr_count' => '<span class="type">int</span> <span class="methodname">mb_substr_count</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ] )',
  'mb_substr' => '<span class="type">string</span> <span class="methodname">mb_substr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= NULL</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= mb_internal_encoding()</span></span> ]] )',
  'm_checkstatus' => '<span class="type">int</span> <span class="methodname">m_checkstatus</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'm_completeauthorizations' => '<span class="type">int</span> <span class="methodname">m_completeauthorizations</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$array</code></span> )',
  'm_connect' => '<span class="type">int</span> <span class="methodname">m_connect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_connectionerror' => '<span class="type">string</span> <span class="methodname">m_connectionerror</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'mcrypt_cbc' => '<span class="type">string</span> <span class="methodname">mcrypt_cbc</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] ) <span class="type">string</span> <span class="methodname">mcrypt_cbc</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'mcrypt_cfb' => '<span class="type">string</span> <span class="methodname">mcrypt_cfb</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ) <span class="type">string</span> <span class="methodname">mcrypt_cfb</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'mcrypt_create_iv' => '<span class="type">string</span> <span class="methodname">mcrypt_create_iv</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$source</code><span class="initializer">= MCRYPT_DEV_RANDOM</span></span> ] )',
  'mcrypt_decrypt' => '<span class="type">string</span> <span class="methodname">mcrypt_decrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'mcrypt_ecb' => '<span class="type">string</span> <span class="methodname">mcrypt_ecb</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> ) <span class="type">string</span> <span class="methodname">mcrypt_ecb</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'mcrypt_enc_get_algorithms_name' => '<span class="type">string</span> <span class="methodname">mcrypt_enc_get_algorithms_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_get_block_size' => '<span class="type">int</span> <span class="methodname">mcrypt_enc_get_block_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_get_iv_size' => '<span class="type">int</span> <span class="methodname">mcrypt_enc_get_iv_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_get_key_size' => '<span class="type">int</span> <span class="methodname">mcrypt_enc_get_key_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_get_modes_name' => '<span class="type">string</span> <span class="methodname">mcrypt_enc_get_modes_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_get_supported_key_sizes' => '<span class="type">array</span> <span class="methodname">mcrypt_enc_get_supported_key_sizes</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_is_block_algorithm' => '<span class="type">bool</span> <span class="methodname">mcrypt_enc_is_block_algorithm</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_is_block_algorithm_mode' => '<span class="type">bool</span> <span class="methodname">mcrypt_enc_is_block_algorithm_mode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_enc_is_block_mode' => '<span class="type">bool</span> <span class="methodname">mcrypt_enc_is_block_mode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_encrypt' => '<span class="type">string</span> <span class="methodname">mcrypt_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'mcrypt_enc_self_test' => '<span class="type">int</span> <span class="methodname">mcrypt_enc_self_test</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_generic_deinit' => '<span class="type">bool</span> <span class="methodname">mcrypt_generic_deinit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_generic_end' => '<span class="type">bool</span> <span class="methodname">mcrypt_generic_end</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_generic' => '<span class="type">string</span> <span class="methodname">mcrypt_generic</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'mcrypt_generic_init' => '<span class="type">int</span> <span class="methodname">mcrypt_generic_init</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> )',
  'mcrypt_get_block_size' => '<span class="type">int</span> <span class="methodname">mcrypt_get_block_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> ) <span class="type">int</span> <span class="methodname">mcrypt_get_block_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'mcrypt_get_cipher_name' => '<span class="type">string</span> <span class="methodname">mcrypt_get_cipher_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> ) <span class="type">string</span> <span class="methodname">mcrypt_get_cipher_name</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> )',
  'mcrypt_get_iv_size' => '<span class="type">int</span> <span class="methodname">mcrypt_get_iv_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'mcrypt_get_key_size' => '<span class="type">int</span> <span class="methodname">mcrypt_get_key_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> ) <span class="type">int</span> <span class="methodname">mcrypt_get_key_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'mcrypt_list_algorithms' => '<span class="type">array</span> <span class="methodname">mcrypt_list_algorithms</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code><span class="initializer">= ini_get(&quot;mcrypt.algorithms_dir&quot;)</span></span> ] )',
  'mcrypt_list_modes' => '<span class="type">array</span> <span class="methodname">mcrypt_list_modes</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code><span class="initializer">= ini_get(&quot;mcrypt.modes_dir&quot;)</span></span> ] )',
  'mcrypt_module_close' => '<span class="type">bool</span> <span class="methodname">mcrypt_module_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> )',
  'mcrypt_module_get_algo_block_size' => '<span class="type">int</span> <span class="methodname">mcrypt_module_get_algo_block_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_get_algo_key_size' => '<span class="type">int</span> <span class="methodname">mcrypt_module_get_algo_key_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_get_supported_key_sizes' => '<span class="type">array</span> <span class="methodname">mcrypt_module_get_supported_key_sizes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_is_block_algorithm' => '<span class="type">bool</span> <span class="methodname">mcrypt_module_is_block_algorithm</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_is_block_algorithm_mode' => '<span class="type">bool</span> <span class="methodname">mcrypt_module_is_block_algorithm_mode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_is_block_mode' => '<span class="type">bool</span> <span class="methodname">mcrypt_module_is_block_mode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_module_open' => '<span class="type">resource</span> <span class="methodname">mcrypt_module_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm_directory</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode_directory</code></span> )',
  'mcrypt_module_self_test' => '<span class="type">bool</span> <span class="methodname">mcrypt_module_self_test</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$algorithm</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$lib_dir</code></span> ] )',
  'mcrypt_ofb' => '<span class="type">string</span> <span class="methodname">mcrypt_ofb</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ) <span class="type">string</span> <span class="methodname">mcrypt_ofb</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cipher</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code></span> ] )',
  'md5_file' => '<span class="type">string</span> <span class="methodname">md5_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'md5' => '<span class="type">string</span> <span class="methodname">md5</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'mdecrypt_generic' => '<span class="type">string</span> <span class="methodname">mdecrypt_generic</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$td</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'm_deletetrans' => '<span class="type">bool</span> <span class="methodname">m_deletetrans</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'm_destroyconn' => '<span class="type">bool</span> <span class="methodname">m_destroyconn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_destroyengine' => '<span class="type">void</span> <span class="methodname">m_destroyengine</span> ( <span class="methodparam">void</span> )',
  'memcache_debug' => '<span class="type">bool</span> <span class="methodname">memcache_debug</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$on_off</code></span> )',
  'memory_get_peak_usage' => '<span class="type">int</span> <span class="methodname">memory_get_peak_usage</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$real_usage</code><span class="initializer">= false</span></span> ] )',
  'memory_get_usage' => '<span class="type">int</span> <span class="methodname">memory_get_usage</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$real_usage</code><span class="initializer">= false</span></span> ] )',
  'metaphone' => '<span class="type">string</span> <span class="methodname">metaphone</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$phonemes</code><span class="initializer">= 0</span></span> ] )',
  'method_exists' => '<span class="type">bool</span> <span class="methodname">method_exists</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$method_name</code></span> )',
  'm_getcellbynum' => '<span class="type">string</span> <span class="methodname">m_getcellbynum</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$column</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> )',
  'm_getcell' => '<span class="type">string</span> <span class="methodname">m_getcell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$column</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> )',
  'm_getcommadelimited' => '<span class="type">string</span> <span class="methodname">m_getcommadelimited</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'm_getheader' => '<span class="type">string</span> <span class="methodname">m_getheader</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$column_num</code></span> )',
  'mhash_count' => '<span class="type">int</span> <span class="methodname">mhash_count</span> ( <span class="methodparam">void</span> )',
  'mhash_get_block_size' => '<span class="type">int</span> <span class="methodname">mhash_get_block_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hash</code></span> )',
  'mhash_get_hash_name' => '<span class="type">string</span> <span class="methodname">mhash_get_hash_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hash</code></span> )',
  'mhash' => '<span class="type">string</span> <span class="methodname">mhash</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hash</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> ] )',
  'mhash_keygen_s2k' => '<span class="type">string</span> <span class="methodname">mhash_keygen_s2k</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$hash</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$salt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bytes</code></span> )',
  'microtime' => '<span class="type">mixed</span> <span class="methodname">microtime</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$get_as_float</code><span class="initializer">= false</span></span> ] )',
  'mime_content_type' => '<span class="type">string</span> <span class="methodname">mime_content_type</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ming_keypress' => '<span class="type">int</span> <span class="methodname">ming_keypress</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$char</code></span> )',
  'ming_setcubicthreshold' => '<span class="type">void</span> <span class="methodname">ming_setcubicthreshold</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$threshold</code></span> )',
  'ming_setscale' => '<span class="type">void</span> <span class="methodname">ming_setscale</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$scale</code></span> )',
  'ming_setswfcompression' => '<span class="type">void</span> <span class="methodname">ming_setswfcompression</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> )',
  'ming_useconstants' => '<span class="type">void</span> <span class="methodname">ming_useconstants</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$use</code></span> )',
  'ming_useswfversion' => '<span class="type">void</span> <span class="methodname">ming_useswfversion</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$version</code></span> )',
  'min' => '<span class="type">mixed</span> <span class="methodname">min</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> ) <span class="type">mixed</span> <span class="methodname">min</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value1</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value2</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'm_initconn' => '<span class="type">resource</span> <span class="methodname">m_initconn</span> ( <span class="methodparam">void</span> )',
  'm_initengine' => '<span class="type">int</span> <span class="methodname">m_initengine</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$location</code></span> )',
  'm_iscommadelimited' => '<span class="type">int</span> <span class="methodname">m_iscommadelimited</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'mkdir' => '<span class="type">bool</span> <span class="methodname">mkdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0777</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]]] )',
  'mktime' => '<span class="type">int</span> <span class="methodname">mktime</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$hour</code><span class="initializer">= date(&quot;H&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$minute</code><span class="initializer">= date(&quot;i&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$second</code><span class="initializer">= date(&quot;s&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$month</code><span class="initializer">= date(&quot;n&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$day</code><span class="initializer">= date(&quot;j&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$year</code><span class="initializer">= date(&quot;Y&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$is_dst</code><span class="initializer">= -1</span></span> ]]]]]]] )',
  'm_maxconntimeout' => '<span class="type">bool</span> <span class="methodname">m_maxconntimeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$secs</code></span> )',
  'm_monitor' => '<span class="type">int</span> <span class="methodname">m_monitor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_numcolumns' => '<span class="type">int</span> <span class="methodname">m_numcolumns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'm_numrows' => '<span class="type">int</span> <span class="methodname">m_numrows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'money_format' => '<span class="type">string</span> <span class="methodname">money_format</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> )',
  'move_uploaded_file' => '<span class="type">bool</span> <span class="methodname">move_uploaded_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$destination</code></span> )',
  'm_parsecommadelimited' => '<span class="type">int</span> <span class="methodname">m_parsecommadelimited</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'mqseries_back' => '<span class="type">void</span> <span class="methodname">mqseries_back</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_begin' => '<span class="type">void</span> <span class="methodname">mqseries_begin</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$beginOptions</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_close' => '<span class="type">void</span> <span class="methodname">mqseries_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hobj</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_cmit' => '<span class="type">void</span> <span class="methodname">mqseries_cmit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_conn' => '<span class="type">void</span> <span class="methodname">mqseries_conn</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$qManagerName</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_connx' => '<span class="type">void</span> <span class="methodname">mqseries_connx</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$qManagerName</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$connOptions</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_disc' => '<span class="type">void</span> <span class="methodname">mqseries_disc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_get' => '<span class="type">void</span> <span class="methodname">mqseries_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hConn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hObj</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$md</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$gmo</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$bufferLength</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$msg</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$data_length</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_inq' => '<span class="type">void</span> <span class="methodname">mqseries_inq</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hobj</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$selectorCount</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$selectors</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$intAttrCount</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$intAttr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$charAttrLength</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$charAttr</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_open' => '<span class="type">void</span> <span class="methodname">mqseries_open</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$objDesc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$hobj</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_put1' => '<span class="type">void</span> <span class="methodname">mqseries_put1</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$objDesc</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$msgDesc</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$pmo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buffer</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_put' => '<span class="type">void</span> <span class="methodname">mqseries_put</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hConn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hObj</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$md</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$pmo</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_set' => '<span class="type">void</span> <span class="methodname">mqseries_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hconn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$hobj</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$selectorcount</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$selectors</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$intattrcount</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$intattrs</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$charattrlength</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$charattrs</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$compCode</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$reason</code></span> )',
  'mqseries_strerror' => '<span class="type">string</span> <span class="methodname">mqseries_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$reason</code></span> )',
  'm_responsekeys' => '<span class="type">array</span> <span class="methodname">m_responsekeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'm_responseparam' => '<span class="type">string</span> <span class="methodname">m_responseparam</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'm_returnstatus' => '<span class="type">int</span> <span class="methodname">m_returnstatus</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'msession_connect' => '<span class="type">bool</span> <span class="methodname">msession_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$port</code></span> )',
  'msession_count' => '<span class="type">int</span> <span class="methodname">msession_count</span> ( <span class="methodparam">void</span> )',
  'msession_create' => '<span class="type">bool</span> <span class="methodname">msession_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> ]] )',
  'msession_destroy' => '<span class="type">bool</span> <span class="methodname">msession_destroy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'msession_disconnect' => '<span class="type">void</span> <span class="methodname">msession_disconnect</span> ( <span class="methodparam">void</span> )',
  'msession_find' => '<span class="type">array</span> <span class="methodname">msession_find</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'msession_get_array' => '<span class="type">array</span> <span class="methodname">msession_get_array</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> )',
  'msession_get_data' => '<span class="type">string</span> <span class="methodname">msession_get_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> )',
  'msession_get' => '<span class="type">string</span> <span class="methodname">msession_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'msession_inc' => '<span class="type">string</span> <span class="methodname">msession_inc</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'msession_list' => '<span class="type">array</span> <span class="methodname">msession_list</span> ( <span class="methodparam">void</span> )',
  'msession_listvar' => '<span class="type">array</span> <span class="methodname">msession_listvar</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'msession_lock' => '<span class="type">int</span> <span class="methodname">msession_lock</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'msession_plugin' => '<span class="type">string</span> <span class="methodname">msession_plugin</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$param</code></span> ] )',
  'msession_randstr' => '<span class="type">string</span> <span class="methodname">msession_randstr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$param</code></span> )',
  'msession_set_array' => '<span class="type">void</span> <span class="methodname">msession_set_array</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$tuples</code></span> )',
  'msession_set_data' => '<span class="type">bool</span> <span class="methodname">msession_set_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'msession_set' => '<span class="type">bool</span> <span class="methodname">msession_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'msession_timeout' => '<span class="type">int</span> <span class="methodname">msession_timeout</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$param</code></span> ] )',
  'msession_uniq' => '<span class="type">string</span> <span class="methodname">msession_uniq</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$param</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> ]] )',
  'msession_unlock' => '<span class="type">int</span> <span class="methodname">msession_unlock</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> )',
  'm_setblocking' => '<span class="type">int</span> <span class="methodname">m_setblocking</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tf</code></span> )',
  'm_setdropfile' => '<span class="type">int</span> <span class="methodname">m_setdropfile</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'm_setip' => '<span class="type">int</span> <span class="methodname">m_setip</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> )',
  'm_setssl_cafile' => '<span class="type">int</span> <span class="methodname">m_setssl_cafile</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$cafile</code></span> )',
  'm_setssl_files' => '<span class="type">int</span> <span class="methodname">m_setssl_files</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sslkeyfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sslcertfile</code></span> )',
  'm_setssl' => '<span class="type">int</span> <span class="methodname">m_setssl</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> )',
  'm_settimeout' => '<span class="type">int</span> <span class="methodname">m_settimeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> )',
  'msg_get_queue' => '<span class="type">resource</span> <span class="methodname">msg_get_queue</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$perms</code><span class="initializer">= 0666</span></span> ] )',
  'msg_queue_exists' => '<span class="type">bool</span> <span class="methodname">msg_queue_exists</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> )',
  'msg_receive' => '<span class="type">bool</span> <span class="methodname">msg_receive</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$queue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$desiredmsgtype</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$msgtype</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxsize</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$message</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$unserialize</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errorcode</code></span> ]]] )',
  'msg_remove_queue' => '<span class="type">bool</span> <span class="methodname">msg_remove_queue</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$queue</code></span> )',
  'msg_send' => '<span class="type">bool</span> <span class="methodname">msg_send</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$queue</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msgtype</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$serialize</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$blocking</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errorcode</code></span> ]]] )',
  'msg_set_queue' => '<span class="type">bool</span> <span class="methodname">msg_set_queue</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$queue</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> )',
  'msg_stat_queue' => '<span class="type">array</span> <span class="methodname">msg_stat_queue</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$queue</code></span> )',
  'msql_affected_rows' => '<span class="type">int</span> <span class="methodname">msql_affected_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'msql_close' => '<span class="type">bool</span> <span class="methodname">msql_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_connect' => '<span class="type">resource</span> <span class="methodname">msql_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> ] )',
  'msql_createdb' => '',
  'msql_create_db' => '<span class="type">bool</span> <span class="methodname">msql_create_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_data_seek' => '<span class="type">bool</span> <span class="methodname">msql_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'msql_dbname' => '',
  'msql_db_query' => '<span class="type">resource</span> <span class="methodname">msql_db_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_drop_db' => '<span class="type">bool</span> <span class="methodname">msql_drop_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_error' => '<span class="type">string</span> <span class="methodname">msql_error</span> ( <span class="methodparam">void</span> )',
  'msql_fetch_array' => '<span class="type">array</span> <span class="methodname">msql_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code></span> ] )',
  'msql_fetch_field' => '<span class="type">object</span> <span class="methodname">msql_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= 0</span></span> ] )',
  'msql_fetch_object' => '<span class="type">object</span> <span class="methodname">msql_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'msql_fetch_row' => '<span class="type">array</span> <span class="methodname">msql_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'msql_fieldflags' => '',
  'msql_field_flags' => '<span class="type">string</span> <span class="methodname">msql_field_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_fieldlen' => '',
  'msql_field_len' => '<span class="type">int</span> <span class="methodname">msql_field_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_fieldname' => '',
  'msql_field_name' => '<span class="type">string</span> <span class="methodname">msql_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_field_seek' => '<span class="type">bool</span> <span class="methodname">msql_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_fieldtable' => '',
  'msql_field_table' => '<span class="type">int</span> <span class="methodname">msql_field_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_fieldtype' => '',
  'msql_field_type' => '<span class="type">string</span> <span class="methodname">msql_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'msql_free_result' => '<span class="type">bool</span> <span class="methodname">msql_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'msql' => '',
  'msql_list_dbs' => '<span class="type">resource</span> <span class="methodname">msql_list_dbs</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_list_fields' => '<span class="type">resource</span> <span class="methodname">msql_list_fields</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tablename</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_list_tables' => '<span class="type">resource</span> <span class="methodname">msql_list_tables</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_numfields' => '',
  'msql_num_fields' => '<span class="type">int</span> <span class="methodname">msql_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'msql_numrows' => '',
  'msql_num_rows' => '<span class="type">int</span> <span class="methodname">msql_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$query_identifier</code></span> )',
  'msql_pconnect' => '<span class="type">resource</span> <span class="methodname">msql_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> ] )',
  'msql_query' => '<span class="type">resource</span> <span class="methodname">msql_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_regcase' => '',
  'msql_result' => '<span class="type">string</span> <span class="methodname">msql_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> ] )',
  'msql_select_db' => '<span class="type">bool</span> <span class="methodname">msql_select_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'msql_tablename' => '',
  'm_sslcert_gen_hash' => '<span class="type">string</span> <span class="methodname">m_sslcert_gen_hash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'mssql_bind' => '<span class="type">bool</span> <span class="methodname">mssql_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$param_name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_output</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_null</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxlen</code><span class="initializer">= -1</span></span> ]]] )',
  'mssql_close' => '<span class="type">bool</span> <span class="methodname">mssql_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'mssql_connect' => '<span class="type">resource</span> <span class="methodname">mssql_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$servername</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_link</code><span class="initializer">= false</span></span> ]]]] )',
  'mssql_data_seek' => '<span class="type">bool</span> <span class="methodname">mssql_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'mssql_execute' => '<span class="type">mixed</span> <span class="methodname">mssql_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$skip_results</code><span class="initializer">= false</span></span> ] )',
  'mssql_fetch_array' => '<span class="type">array</span> <span class="methodname">mssql_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= MSSQL_BOTH</span></span> ] )',
  'mssql_fetch_assoc' => '<span class="type">array</span> <span class="methodname">mssql_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'mssql_fetch_batch' => '<span class="type">int</span> <span class="methodname">mssql_fetch_batch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_fetch_field' => '<span class="type">object</span> <span class="methodname">mssql_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= -1</span></span> ] )',
  'mssql_fetch_object' => '<span class="type">object</span> <span class="methodname">mssql_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_fetch_row' => '<span class="type">array</span> <span class="methodname">mssql_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_field_length' => '<span class="type">int</span> <span class="methodname">mssql_field_length</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= -1</span></span> ] )',
  'mssql_field_name' => '<span class="type">string</span> <span class="methodname">mssql_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= -1</span></span> ] )',
  'mssql_field_seek' => '<span class="type">bool</span> <span class="methodname">mssql_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mssql_field_type' => '<span class="type">string</span> <span class="methodname">mssql_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= -1</span></span> ] )',
  'mssql_free_result' => '<span class="type">bool</span> <span class="methodname">mssql_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_free_statement' => '<span class="type">bool</span> <span class="methodname">mssql_free_statement</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'mssql_get_last_message' => '<span class="type">string</span> <span class="methodname">mssql_get_last_message</span> ( <span class="methodparam">void</span> )',
  'mssql_guid_string' => '<span class="type">string</span> <span class="methodname">mssql_guid_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$binary</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$short_format</code><span class="initializer">= false</span></span> ] )',
  'mssql_init' => '<span class="type">resource</span> <span class="methodname">mssql_init</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$sp_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'mssql_min_error_severity' => '<span class="type">void</span> <span class="methodname">mssql_min_error_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'mssql_min_message_severity' => '<span class="type">void</span> <span class="methodname">mssql_min_message_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'mssql_next_result' => '<span class="type">bool</span> <span class="methodname">mssql_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'mssql_num_fields' => '<span class="type">int</span> <span class="methodname">mssql_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_num_rows' => '<span class="type">int</span> <span class="methodname">mssql_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mssql_pconnect' => '<span class="type">resource</span> <span class="methodname">mssql_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$servername</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_link</code><span class="initializer">= false</span></span> ]]]] )',
  'mssql_query' => '<span class="type">mixed</span> <span class="methodname">mssql_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$batch_size</code><span class="initializer">= 0</span></span> ]] )',
  'mssql_result' => '<span class="type">string</span> <span class="methodname">mssql_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'mssql_rows_affected' => '<span class="type">int</span> <span class="methodname">mssql_rows_affected</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> )',
  'mssql_select_db' => '<span class="type">bool</span> <span class="methodname">mssql_select_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'mt_getrandmax' => '<span class="type">int</span> <span class="methodname">mt_getrandmax</span> ( <span class="methodparam">void</span> )',
  'mt_rand' => '<span class="type">int</span> <span class="methodname">mt_rand</span> ( <span class="methodparam">void</span> ) <span class="type">int</span> <span class="methodname">mt_rand</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$min</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max</code></span> )',
  'm_transactionssent' => '<span class="type">int</span> <span class="methodname">m_transactionssent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_transinqueue' => '<span class="type">int</span> <span class="methodname">m_transinqueue</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_transkeyval' => '<span class="type">int</span> <span class="methodname">m_transkeyval</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'm_transnew' => '<span class="type">int</span> <span class="methodname">m_transnew</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'm_transsend' => '<span class="type">int</span> <span class="methodname">m_transsend</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$identifier</code></span> )',
  'mt_srand' => '<span class="type">void</span> <span class="methodname">mt_srand</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$seed</code></span> ] )',
  'm_uwait' => '<span class="type">int</span> <span class="methodname">m_uwait</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$microsecs</code></span> )',
  'm_validateidentifier' => '<span class="type">int</span> <span class="methodname">m_validateidentifier</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tf</code></span> )',
  'm_verifyconnection' => '<span class="type">bool</span> <span class="methodname">m_verifyconnection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tf</code></span> )',
  'm_verifysslcert' => '<span class="type">bool</span> <span class="methodname">m_verifysslcert</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tf</code></span> )',
  'mysql_affected_rows' => '<span class="type">int</span> <span class="methodname">mysql_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_client_encoding' => '<span class="type">string</span> <span class="methodname">mysql_client_encoding</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_close' => '<span class="type">bool</span> <span class="methodname">mysql_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_connect' => '<span class="type">resource</span> <span class="methodname">mysql_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code><span class="initializer">= ini_get(&quot;mysql.default_host&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code><span class="initializer">= ini_get(&quot;mysql.default_user&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code><span class="initializer">= ini_get(&quot;mysql.default_password&quot;)</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_link</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$client_flags</code><span class="initializer">= 0</span></span> ]]]]] )',
  'mysql_create_db' => '<span class="type">bool</span> <span class="methodname">mysql_create_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_data_seek' => '<span class="type">bool</span> <span class="methodname">mysql_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'mysql_db_name' => '<span class="type">string</span> <span class="methodname">mysql_db_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_db_query' => '<span class="type">resource</span> <span class="methodname">mysql_db_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_drop_db' => '<span class="type">bool</span> <span class="methodname">mysql_drop_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_errno' => '<span class="type">int</span> <span class="methodname">mysql_errno</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_error' => '<span class="type">string</span> <span class="methodname">mysql_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_escape_string' => '<span class="type">string</span> <span class="methodname">mysql_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$unescaped_string</code></span> )',
  'mysql_fetch_array' => '<span class="type">array</span> <span class="methodname">mysql_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= MYSQL_BOTH</span></span> ] )',
  'mysql_fetch_assoc' => '<span class="type">array</span> <span class="methodname">mysql_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_fetch_field' => '<span class="type">object</span> <span class="methodname">mysql_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= 0</span></span> ] )',
  'mysql_fetch_lengths' => '<span class="type">array</span> <span class="methodname">mysql_fetch_lengths</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_fetch_object' => '<span class="type">object</span> <span class="methodname">mysql_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> ]] )',
  'mysql_fetch_row' => '<span class="type">array</span> <span class="methodname">mysql_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_field_flags' => '<span class="type">string</span> <span class="methodname">mysql_field_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_field_len' => '<span class="type">int</span> <span class="methodname">mysql_field_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_field_name' => '<span class="type">string</span> <span class="methodname">mysql_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_field_seek' => '<span class="type">bool</span> <span class="methodname">mysql_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_field_table' => '<span class="type">string</span> <span class="methodname">mysql_field_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_field_type' => '<span class="type">string</span> <span class="methodname">mysql_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'mysql_free_result' => '<span class="type">bool</span> <span class="methodname">mysql_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_get_client_info' => '<span class="type">string</span> <span class="methodname">mysql_get_client_info</span> ( <span class="methodparam">void</span> )',
  'mysql_get_host_info' => '<span class="type">string</span> <span class="methodname">mysql_get_host_info</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_get_proto_info' => '<span class="type">int</span> <span class="methodname">mysql_get_proto_info</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_get_server_info' => '<span class="type">string</span> <span class="methodname">mysql_get_server_info</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysqli_bind_param' => '',
  'mysqli_bind_result' => '',
  'mysqli_client_encoding' => '',
  'mysqli_connect' => '',
  'mysqli_disable_reads_from_master' => '<span class="type">void</span> <span class="methodname">mysqli::disable_reads_from_master</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">mysqli_disable_reads_from_master</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_disable_rpl_parse' => '<span class="type">bool</span> <span class="methodname">mysqli_disable_rpl_parse</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_enable_reads_from_master' => '<span class="type">bool</span> <span class="methodname">mysqli_enable_reads_from_master</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_enable_rpl_parse' => '<span class="type">bool</span> <span class="methodname">mysqli_enable_rpl_parse</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_escape_string' => '',
  'mysqli_execute' => '',
  'mysqli_fetch' => '',
  'mysqli_get_cache_stats' => '<span class="type">array</span> <span class="methodname">mysqli_get_cache_stats</span> ( <span class="methodparam">void</span> )',
  'mysqli_get_metadata' => '',
  'mysqli_master_query' => '<span class="type">bool</span> <span class="methodname">mysqli_master_query</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'mysql_info' => '<span class="type">string</span> <span class="methodname">mysql_info</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_insert_id' => '<span class="type">int</span> <span class="methodname">mysql_insert_id</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysqli_param_count' => '',
  'mysqli_report' => '',
  'mysqli_rpl_parse_enabled' => '<span class="type">int</span> <span class="methodname">mysqli_rpl_parse_enabled</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_rpl_probe' => '<span class="type">bool</span> <span class="methodname">mysqli_rpl_probe</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> )',
  'mysqli_send_long_data' => '',
  'mysqli_set_opt' => '',
  'mysqli_slave_query' => '<span class="type">bool</span> <span class="methodname">mysqli_slave_query</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'mysql_list_dbs' => '<span class="type">resource</span> <span class="methodname">mysql_list_dbs</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_list_fields' => '<span class="type">resource</span> <span class="methodname">mysql_list_fields</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_list_processes' => '<span class="type">resource</span> <span class="methodname">mysql_list_processes</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_list_tables' => '<span class="type">resource</span> <span class="methodname">mysql_list_tables</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysqlnd_memcache_get_config' => '<span class="type">array</span> <span class="methodname">mysqlnd_memcache_get_config</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$connection</code></span> )',
  'mysqlnd_memcache_set' => '<span class="type">bool</span> <span class="methodname">mysqlnd_memcache_set</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$mysql_connection</code></span> [, <span class="methodparam"><span class="type">Memcached</span> <code class="parameter">$memcache_connection</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> [, <span class="methodparam"><span class="type">callback</span> <code class="parameter">$callback</code></span> ]]] )',
  'mysqlnd_ms_get_last_gtid' => '<span class="type">string</span> <span class="methodname">mysqlnd_ms_get_last_gtid</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$connection</code></span> )',
  'mysqlnd_ms_get_last_used_connection' => '<span class="type">array</span> <span class="methodname">mysqlnd_ms_get_last_used_connection</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$connection</code></span> )',
  'mysqlnd_ms_get_stats' => '<span class="type">array</span> <span class="methodname">mysqlnd_ms_get_stats</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_ms_match_wild' => '<span class="type">bool</span> <span class="methodname">mysqlnd_ms_match_wild</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$wildcard</code></span> )',
  'mysqlnd_ms_query_is_select' => '<span class="type">int</span> <span class="methodname">mysqlnd_ms_query_is_select</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'mysqlnd_ms_set_qos' => '<span class="type">bool</span> <span class="methodname">mysqlnd_ms_set_qos</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$service_level</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$service_level_option</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$option_value</code></span> ]] )',
  'mysqlnd_ms_set_user_pick_server' => '<span class="type">bool</span> <span class="methodname">mysqlnd_ms_set_user_pick_server</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function</code></span> )',
  'mysqlnd_qc_clear_cache' => '<span class="type">bool</span> <span class="methodname">mysqlnd_qc_clear_cache</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_get_available_handlers' => '<span class="type">array</span> <span class="methodname">mysqlnd_qc_get_available_handlers</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_get_cache_info' => '<span class="type">array</span> <span class="methodname">mysqlnd_qc_get_cache_info</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_get_core_stats' => '<span class="type">array</span> <span class="methodname">mysqlnd_qc_get_core_stats</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_get_normalized_query_trace_log' => '<span class="type">array</span> <span class="methodname">mysqlnd_qc_get_normalized_query_trace_log</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_get_query_trace_log' => '<span class="type">array</span> <span class="methodname">mysqlnd_qc_get_query_trace_log</span> ( <span class="methodparam">void</span> )',
  'mysqlnd_qc_set_cache_condition' => '<span class="type">bool</span> <span class="methodname">mysqlnd_qc_set_cache_condition</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$condition_type</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$condition</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$condition_option</code></span> )',
  'mysqlnd_qc_set_is_select' => '<span class="type">mixed</span> <span class="methodname">mysqlnd_qc_set_is_select</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$callback</code></span> )',
  'mysqlnd_qc_set_storage_handler' => '<span class="type">bool</span> <span class="methodname">mysqlnd_qc_set_storage_handler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$handler</code></span> )',
  'mysqlnd_qc_set_user_handlers' => '<span class="type">bool</span> <span class="methodname">mysqlnd_qc_set_user_handlers</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$get_hash</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$find_query_in_cache</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$return_to_cache</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$add_query_to_cache_if_not_exists</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query_is_select</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$update_query_run_time_stats</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$get_stats</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$clear_cache</code></span> )',
  'mysqlnd_uh_convert_to_mysqlnd' => '<span class="type">resource</span> <span class="methodname">mysqlnd_uh_convert_to_mysqlnd</span> ( <span class="methodparam"><span class="type">mysqli</span> <code class="parameter reference">&$mysql_connection</code></span> )',
  'mysqlnd_uh_set_connection_proxy' => '<span class="type">bool</span> <span class="methodname">mysqlnd_uh_set_connection_proxy</span> ( <span class="methodparam"><span class="type">MysqlndUhConnection</span> <code class="parameter reference">&$connection_proxy</code></span> [, <span class="methodparam"><span class="type">mysqli</span> <code class="parameter reference">&$mysqli_connection</code></span> ] )',
  'mysqlnd_uh_set_statement_proxy' => '<span class="type">bool</span> <span class="methodname">mysqlnd_uh_set_statement_proxy</span> ( <span class="methodparam"><span class="type">MysqlndUhStatement</span> <code class="parameter reference">&$statement_proxy</code></span> )',
  'mysql_num_fields' => '<span class="type">int</span> <span class="methodname">mysql_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_num_rows' => '<span class="type">int</span> <span class="methodname">mysql_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'mysql_pconnect' => '<span class="type">resource</span> <span class="methodname">mysql_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code><span class="initializer">= ini_get(&quot;mysql.default_host&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code><span class="initializer">= ini_get(&quot;mysql.default_user&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code><span class="initializer">= ini_get(&quot;mysql.default_password&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$client_flags</code><span class="initializer">= 0</span></span> ]]]] )',
  'mysql_ping' => '<span class="type">bool</span> <span class="methodname">mysql_ping</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_query' => '<span class="type">resource</span> <span class="methodname">mysql_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_real_escape_string' => '<span class="type">string</span> <span class="methodname">mysql_real_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$unescaped_string</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_result' => '<span class="type">string</span> <span class="methodname">mysql_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code><span class="initializer">= 0</span></span> ] )',
  'mysql_select_db' => '<span class="type">bool</span> <span class="methodname">mysql_select_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_set_charset' => '<span class="type">bool</span> <span class="methodname">mysql_set_charset</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_stat' => '<span class="type">string</span> <span class="methodname">mysql_stat</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_tablename' => '<span class="type">string</span> <span class="methodname">mysql_tablename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$i</code></span> )',
  'mysql_thread_id' => '<span class="type">int</span> <span class="methodname">mysql_thread_id</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'mysql_unbuffered_query' => '<span class="type">resource</span> <span class="methodname">mysql_unbuffered_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code><span class="initializer">= NULL</span></span> ] )',
  'natcasesort' => '<span class="type">bool</span> <span class="methodname">natcasesort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'natsort' => '<span class="type">bool</span> <span class="methodname">natsort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'ncurses_addch' => '<span class="type">int</span> <span class="methodname">ncurses_addch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ch</code></span> )',
  'ncurses_addchnstr' => '<span class="type">int</span> <span class="methodname">ncurses_addchnstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_addchstr' => '<span class="type">int</span> <span class="methodname">ncurses_addchstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> )',
  'ncurses_addnstr' => '<span class="type">int</span> <span class="methodname">ncurses_addnstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_addstr' => '<span class="type">int</span> <span class="methodname">ncurses_addstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ncurses_assume_default_colors' => '<span class="type">int</span> <span class="methodname">ncurses_assume_default_colors</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fg</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bg</code></span> )',
  'ncurses_attroff' => '<span class="type">int</span> <span class="methodname">ncurses_attroff</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$attributes</code></span> )',
  'ncurses_attron' => '<span class="type">int</span> <span class="methodname">ncurses_attron</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$attributes</code></span> )',
  'ncurses_attrset' => '<span class="type">int</span> <span class="methodname">ncurses_attrset</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$attributes</code></span> )',
  'ncurses_baudrate' => '<span class="type">int</span> <span class="methodname">ncurses_baudrate</span> ( <span class="methodparam">void</span> )',
  'ncurses_beep' => '<span class="type">int</span> <span class="methodname">ncurses_beep</span> ( <span class="methodparam">void</span> )',
  'ncurses_bkgd' => '<span class="type">int</span> <span class="methodname">ncurses_bkgd</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrchar</code></span> )',
  'ncurses_bkgdset' => '<span class="type">void</span> <span class="methodname">ncurses_bkgdset</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrchar</code></span> )',
  'ncurses_border' => '<span class="type">int</span> <span class="methodname">ncurses_border</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$right</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bottom</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tl_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tr_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bl_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$br_corner</code></span> )',
  'ncurses_bottom_panel' => '<span class="type">int</span> <span class="methodname">ncurses_bottom_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_can_change_color' => '<span class="type">bool</span> <span class="methodname">ncurses_can_change_color</span> ( <span class="methodparam">void</span> )',
  'ncurses_cbreak' => '<span class="type">bool</span> <span class="methodname">ncurses_cbreak</span> ( <span class="methodparam">void</span> )',
  'ncurses_clear' => '<span class="type">bool</span> <span class="methodname">ncurses_clear</span> ( <span class="methodparam">void</span> )',
  'ncurses_clrtobot' => '<span class="type">bool</span> <span class="methodname">ncurses_clrtobot</span> ( <span class="methodparam">void</span> )',
  'ncurses_clrtoeol' => '<span class="type">bool</span> <span class="methodname">ncurses_clrtoeol</span> ( <span class="methodparam">void</span> )',
  'ncurses_color_content' => '<span class="type">int</span> <span class="methodname">ncurses_color_content</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$r</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$g</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$b</code></span> )',
  'ncurses_color_set' => '<span class="type">int</span> <span class="methodname">ncurses_color_set</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pair</code></span> )',
  'ncurses_curs_set' => '<span class="type">int</span> <span class="methodname">ncurses_curs_set</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$visibility</code></span> )',
  'ncurses_define_key' => '<span class="type">int</span> <span class="methodname">ncurses_define_key</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$definition</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$keycode</code></span> )',
  'ncurses_def_prog_mode' => '<span class="type">bool</span> <span class="methodname">ncurses_def_prog_mode</span> ( <span class="methodparam">void</span> )',
  'ncurses_def_shell_mode' => '<span class="type">bool</span> <span class="methodname">ncurses_def_shell_mode</span> ( <span class="methodparam">void</span> )',
  'ncurses_delay_output' => '<span class="type">int</span> <span class="methodname">ncurses_delay_output</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> )',
  'ncurses_delch' => '<span class="type">bool</span> <span class="methodname">ncurses_delch</span> ( <span class="methodparam">void</span> )',
  'ncurses_deleteln' => '<span class="type">bool</span> <span class="methodname">ncurses_deleteln</span> ( <span class="methodparam">void</span> )',
  'ncurses_del_panel' => '<span class="type">bool</span> <span class="methodname">ncurses_del_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_delwin' => '<span class="type">bool</span> <span class="methodname">ncurses_delwin</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_doupdate' => '<span class="type">bool</span> <span class="methodname">ncurses_doupdate</span> ( <span class="methodparam">void</span> )',
  'ncurses_echochar' => '<span class="type">int</span> <span class="methodname">ncurses_echochar</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$character</code></span> )',
  'ncurses_echo' => '<span class="type">bool</span> <span class="methodname">ncurses_echo</span> ( <span class="methodparam">void</span> )',
  'ncurses_end' => '<span class="type">int</span> <span class="methodname">ncurses_end</span> ( <span class="methodparam">void</span> )',
  'ncurses_erasechar' => '<span class="type">string</span> <span class="methodname">ncurses_erasechar</span> ( <span class="methodparam">void</span> )',
  'ncurses_erase' => '<span class="type">bool</span> <span class="methodname">ncurses_erase</span> ( <span class="methodparam">void</span> )',
  'ncurses_filter' => '<span class="type">void</span> <span class="methodname">ncurses_filter</span> ( <span class="methodparam">void</span> )',
  'ncurses_flash' => '<span class="type">bool</span> <span class="methodname">ncurses_flash</span> ( <span class="methodparam">void</span> )',
  'ncurses_flushinp' => '<span class="type">bool</span> <span class="methodname">ncurses_flushinp</span> ( <span class="methodparam">void</span> )',
  'ncurses_getch' => '<span class="type">int</span> <span class="methodname">ncurses_getch</span> ( <span class="methodparam">void</span> )',
  'ncurses_getmaxyx' => '<span class="type">void</span> <span class="methodname">ncurses_getmaxyx</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$x</code></span> )',
  'ncurses_getmouse' => '<span class="type">bool</span> <span class="methodname">ncurses_getmouse</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$mevent</code></span> )',
  'ncurses_getyx' => '<span class="type">void</span> <span class="methodname">ncurses_getyx</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$x</code></span> )',
  'ncurses_halfdelay' => '<span class="type">int</span> <span class="methodname">ncurses_halfdelay</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$tenth</code></span> )',
  'ncurses_has_colors' => '<span class="type">bool</span> <span class="methodname">ncurses_has_colors</span> ( <span class="methodparam">void</span> )',
  'ncurses_has_ic' => '<span class="type">bool</span> <span class="methodname">ncurses_has_ic</span> ( <span class="methodparam">void</span> )',
  'ncurses_has_il' => '<span class="type">bool</span> <span class="methodname">ncurses_has_il</span> ( <span class="methodparam">void</span> )',
  'ncurses_has_key' => '<span class="type">int</span> <span class="methodname">ncurses_has_key</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$keycode</code></span> )',
  'ncurses_hide_panel' => '<span class="type">int</span> <span class="methodname">ncurses_hide_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_hline' => '<span class="type">int</span> <span class="methodname">ncurses_hline</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$charattr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_inch' => '<span class="type">string</span> <span class="methodname">ncurses_inch</span> ( <span class="methodparam">void</span> )',
  'ncurses_init_color' => '<span class="type">int</span> <span class="methodname">ncurses_init_color</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$color</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$b</code></span> )',
  'ncurses_init' => '<span class="type">void</span> <span class="methodname">ncurses_init</span> ( <span class="methodparam">void</span> )',
  'ncurses_init_pair' => '<span class="type">int</span> <span class="methodname">ncurses_init_pair</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pair</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fg</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bg</code></span> )',
  'ncurses_insch' => '<span class="type">int</span> <span class="methodname">ncurses_insch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$character</code></span> )',
  'ncurses_insdelln' => '<span class="type">int</span> <span class="methodname">ncurses_insdelln</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$count</code></span> )',
  'ncurses_insertln' => '<span class="type">int</span> <span class="methodname">ncurses_insertln</span> ( <span class="methodparam">void</span> )',
  'ncurses_insstr' => '<span class="type">int</span> <span class="methodname">ncurses_insstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ncurses_instr' => '<span class="type">int</span> <span class="methodname">ncurses_instr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$buffer</code></span> )',
  'ncurses_isendwin' => '<span class="type">bool</span> <span class="methodname">ncurses_isendwin</span> ( <span class="methodparam">void</span> )',
  'ncurses_keyok' => '<span class="type">int</span> <span class="methodname">ncurses_keyok</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$keycode</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$enable</code></span> )',
  'ncurses_keypad' => '<span class="type">int</span> <span class="methodname">ncurses_keypad</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$bf</code></span> )',
  'ncurses_killchar' => '<span class="type">string</span> <span class="methodname">ncurses_killchar</span> ( <span class="methodparam">void</span> )',
  'ncurses_longname' => '<span class="type">string</span> <span class="methodname">ncurses_longname</span> ( <span class="methodparam">void</span> )',
  'ncurses_meta' => '<span class="type">int</span> <span class="methodname">ncurses_meta</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$8bit</code></span> )',
  'ncurses_mouseinterval' => '<span class="type">int</span> <span class="methodname">ncurses_mouseinterval</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> )',
  'ncurses_mousemask' => '<span class="type">int</span> <span class="methodname">ncurses_mousemask</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$newmask</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$oldmask</code></span> )',
  'ncurses_mouse_trafo' => '<span class="type">bool</span> <span class="methodname">ncurses_mouse_trafo</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$x</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$toscreen</code></span> )',
  'ncurses_move' => '<span class="type">int</span> <span class="methodname">ncurses_move</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_move_panel' => '<span class="type">int</span> <span class="methodname">ncurses_move_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$startx</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$starty</code></span> )',
  'ncurses_mvaddch' => '<span class="type">int</span> <span class="methodname">ncurses_mvaddch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$c</code></span> )',
  'ncurses_mvaddchnstr' => '<span class="type">int</span> <span class="methodname">ncurses_mvaddchnstr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_mvaddchstr' => '<span class="type">int</span> <span class="methodname">ncurses_mvaddchstr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> )',
  'ncurses_mvaddnstr' => '<span class="type">int</span> <span class="methodname">ncurses_mvaddnstr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_mvaddstr' => '<span class="type">int</span> <span class="methodname">ncurses_mvaddstr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$s</code></span> )',
  'ncurses_mvcur' => '<span class="type">int</span> <span class="methodname">ncurses_mvcur</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$old_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$old_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_x</code></span> )',
  'ncurses_mvdelch' => '<span class="type">int</span> <span class="methodname">ncurses_mvdelch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_mvgetch' => '<span class="type">int</span> <span class="methodname">ncurses_mvgetch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_mvhline' => '<span class="type">int</span> <span class="methodname">ncurses_mvhline</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrchar</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_mvinch' => '<span class="type">int</span> <span class="methodname">ncurses_mvinch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_mvvline' => '<span class="type">int</span> <span class="methodname">ncurses_mvvline</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrchar</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_mvwaddstr' => '<span class="type">int</span> <span class="methodname">ncurses_mvwaddstr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ncurses_napms' => '<span class="type">int</span> <span class="methodname">ncurses_napms</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> )',
  'ncurses_newpad' => '<span class="type">resource</span> <span class="methodname">ncurses_newpad</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$rows</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cols</code></span> )',
  'ncurses_new_panel' => '<span class="type">resource</span> <span class="methodname">ncurses_new_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_newwin' => '<span class="type">resource</span> <span class="methodname">ncurses_newwin</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$rows</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$cols</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_nl' => '<span class="type">bool</span> <span class="methodname">ncurses_nl</span> ( <span class="methodparam">void</span> )',
  'ncurses_nocbreak' => '<span class="type">bool</span> <span class="methodname">ncurses_nocbreak</span> ( <span class="methodparam">void</span> )',
  'ncurses_noecho' => '<span class="type">bool</span> <span class="methodname">ncurses_noecho</span> ( <span class="methodparam">void</span> )',
  'ncurses_nonl' => '<span class="type">bool</span> <span class="methodname">ncurses_nonl</span> ( <span class="methodparam">void</span> )',
  'ncurses_noqiflush' => '<span class="type">void</span> <span class="methodname">ncurses_noqiflush</span> ( <span class="methodparam">void</span> )',
  'ncurses_noraw' => '<span class="type">bool</span> <span class="methodname">ncurses_noraw</span> ( <span class="methodparam">void</span> )',
  'ncurses_pair_content' => '<span class="type">int</span> <span class="methodname">ncurses_pair_content</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pair</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$f</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$b</code></span> )',
  'ncurses_panel_above' => '<span class="type">resource</span> <span class="methodname">ncurses_panel_above</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_panel_below' => '<span class="type">resource</span> <span class="methodname">ncurses_panel_below</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_panel_window' => '<span class="type">resource</span> <span class="methodname">ncurses_panel_window</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_pnoutrefresh' => '<span class="type">int</span> <span class="methodname">ncurses_pnoutrefresh</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pad</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pminrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pmincol</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sminrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smincol</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smaxrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smaxcol</code></span> )',
  'ncurses_prefresh' => '<span class="type">int</span> <span class="methodname">ncurses_prefresh</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pad</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pminrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pmincol</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sminrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smincol</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smaxrow</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$smaxcol</code></span> )',
  'ncurses_putp' => '<span class="type">int</span> <span class="methodname">ncurses_putp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ncurses_qiflush' => '<span class="type">void</span> <span class="methodname">ncurses_qiflush</span> ( <span class="methodparam">void</span> )',
  'ncurses_raw' => '<span class="type">bool</span> <span class="methodname">ncurses_raw</span> ( <span class="methodparam">void</span> )',
  'ncurses_refresh' => '<span class="type">int</span> <span class="methodname">ncurses_refresh</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$ch</code></span> )',
  'ncurses_replace_panel' => '<span class="type">int</span> <span class="methodname">ncurses_replace_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_reset_prog_mode' => '<span class="type">int</span> <span class="methodname">ncurses_reset_prog_mode</span> ( <span class="methodparam">void</span> )',
  'ncurses_reset_shell_mode' => '<span class="type">int</span> <span class="methodname">ncurses_reset_shell_mode</span> ( <span class="methodparam">void</span> )',
  'ncurses_resetty' => '<span class="type">bool</span> <span class="methodname">ncurses_resetty</span> ( <span class="methodparam">void</span> )',
  'ncurses_savetty' => '<span class="type">bool</span> <span class="methodname">ncurses_savetty</span> ( <span class="methodparam">void</span> )',
  'ncurses_scr_dump' => '<span class="type">int</span> <span class="methodname">ncurses_scr_dump</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ncurses_scr_init' => '<span class="type">int</span> <span class="methodname">ncurses_scr_init</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ncurses_scrl' => '<span class="type">int</span> <span class="methodname">ncurses_scrl</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$count</code></span> )',
  'ncurses_scr_restore' => '<span class="type">int</span> <span class="methodname">ncurses_scr_restore</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ncurses_scr_set' => '<span class="type">int</span> <span class="methodname">ncurses_scr_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ncurses_show_panel' => '<span class="type">int</span> <span class="methodname">ncurses_show_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_slk_attr' => '<span class="type">int</span> <span class="methodname">ncurses_slk_attr</span> ( <span class="methodparam">void</span> )',
  'ncurses_slk_attroff' => '<span class="type">int</span> <span class="methodname">ncurses_slk_attroff</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$intarg</code></span> )',
  'ncurses_slk_attron' => '<span class="type">int</span> <span class="methodname">ncurses_slk_attron</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$intarg</code></span> )',
  'ncurses_slk_attrset' => '<span class="type">int</span> <span class="methodname">ncurses_slk_attrset</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$intarg</code></span> )',
  'ncurses_slk_clear' => '<span class="type">bool</span> <span class="methodname">ncurses_slk_clear</span> ( <span class="methodparam">void</span> )',
  'ncurses_slk_color' => '<span class="type">int</span> <span class="methodname">ncurses_slk_color</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$intarg</code></span> )',
  'ncurses_slk_init' => '<span class="type">bool</span> <span class="methodname">ncurses_slk_init</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> )',
  'ncurses_slk_noutrefresh' => '<span class="type">bool</span> <span class="methodname">ncurses_slk_noutrefresh</span> ( <span class="methodparam">void</span> )',
  'ncurses_slk_refresh' => '<span class="type">int</span> <span class="methodname">ncurses_slk_refresh</span> ( <span class="methodparam">void</span> )',
  'ncurses_slk_restore' => '<span class="type">int</span> <span class="methodname">ncurses_slk_restore</span> ( <span class="methodparam">void</span> )',
  'ncurses_slk_set' => '<span class="type">bool</span> <span class="methodname">ncurses_slk_set</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$labelnr</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$label</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> )',
  'ncurses_slk_touch' => '<span class="type">int</span> <span class="methodname">ncurses_slk_touch</span> ( <span class="methodparam">void</span> )',
  'ncurses_standend' => '<span class="type">int</span> <span class="methodname">ncurses_standend</span> ( <span class="methodparam">void</span> )',
  'ncurses_standout' => '<span class="type">int</span> <span class="methodname">ncurses_standout</span> ( <span class="methodparam">void</span> )',
  'ncurses_start_color' => '<span class="type">int</span> <span class="methodname">ncurses_start_color</span> ( <span class="methodparam">void</span> )',
  'ncurses_termattrs' => '<span class="type">bool</span> <span class="methodname">ncurses_termattrs</span> ( <span class="methodparam">void</span> )',
  'ncurses_termname' => '<span class="type">string</span> <span class="methodname">ncurses_termname</span> ( <span class="methodparam">void</span> )',
  'ncurses_timeout' => '<span class="type">void</span> <span class="methodname">ncurses_timeout</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$millisec</code></span> )',
  'ncurses_top_panel' => '<span class="type">int</span> <span class="methodname">ncurses_top_panel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$panel</code></span> )',
  'ncurses_typeahead' => '<span class="type">int</span> <span class="methodname">ncurses_typeahead</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fd</code></span> )',
  'ncurses_ungetch' => '<span class="type">int</span> <span class="methodname">ncurses_ungetch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$keycode</code></span> )',
  'ncurses_ungetmouse' => '<span class="type">bool</span> <span class="methodname">ncurses_ungetmouse</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$mevent</code></span> )',
  'ncurses_update_panels' => '<span class="type">void</span> <span class="methodname">ncurses_update_panels</span> ( <span class="methodparam">void</span> )',
  'ncurses_use_default_colors' => '<span class="type">bool</span> <span class="methodname">ncurses_use_default_colors</span> ( <span class="methodparam">void</span> )',
  'ncurses_use_env' => '<span class="type">void</span> <span class="methodname">ncurses_use_env</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span> )',
  'ncurses_use_extended_names' => '<span class="type">int</span> <span class="methodname">ncurses_use_extended_names</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span> )',
  'ncurses_vidattr' => '<span class="type">int</span> <span class="methodname">ncurses_vidattr</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$intarg</code></span> )',
  'ncurses_vline' => '<span class="type">int</span> <span class="methodname">ncurses_vline</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$charattr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_waddch' => '<span class="type">int</span> <span class="methodname">ncurses_waddch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ch</code></span> )',
  'ncurses_waddstr' => '<span class="type">int</span> <span class="methodname">ncurses_waddstr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> ] )',
  'ncurses_wattroff' => '<span class="type">int</span> <span class="methodname">ncurses_wattroff</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrs</code></span> )',
  'ncurses_wattron' => '<span class="type">int</span> <span class="methodname">ncurses_wattron</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrs</code></span> )',
  'ncurses_wattrset' => '<span class="type">int</span> <span class="methodname">ncurses_wattrset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$attrs</code></span> )',
  'ncurses_wborder' => '<span class="type">int</span> <span class="methodname">ncurses_wborder</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$right</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bottom</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tl_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tr_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bl_corner</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$br_corner</code></span> )',
  'ncurses_wclear' => '<span class="type">int</span> <span class="methodname">ncurses_wclear</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wcolor_set' => '<span class="type">int</span> <span class="methodname">ncurses_wcolor_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$color_pair</code></span> )',
  'ncurses_werase' => '<span class="type">int</span> <span class="methodname">ncurses_werase</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wgetch' => '<span class="type">int</span> <span class="methodname">ncurses_wgetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_whline' => '<span class="type">int</span> <span class="methodname">ncurses_whline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$charattr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'ncurses_wmouse_trafo' => '<span class="type">bool</span> <span class="methodname">ncurses_wmouse_trafo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$x</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$toscreen</code></span> )',
  'ncurses_wmove' => '<span class="type">int</span> <span class="methodname">ncurses_wmove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> )',
  'ncurses_wnoutrefresh' => '<span class="type">int</span> <span class="methodname">ncurses_wnoutrefresh</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wrefresh' => '<span class="type">int</span> <span class="methodname">ncurses_wrefresh</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wstandend' => '<span class="type">int</span> <span class="methodname">ncurses_wstandend</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wstandout' => '<span class="type">int</span> <span class="methodname">ncurses_wstandout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> )',
  'ncurses_wvline' => '<span class="type">int</span> <span class="methodname">ncurses_wvline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$window</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$charattr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'newt_bell' => '<span class="type">void</span> <span class="methodname">newt_bell</span> ( <span class="methodparam">void</span> )',
  'newt_button_bar' => '<span class="type">resource</span> <span class="methodname">newt_button_bar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$buttons</code></span> )',
  'newt_button' => '<span class="type">resource</span> <span class="methodname">newt_button</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_centered_window' => '<span class="type">int</span> <span class="methodname">newt_centered_window</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> ] )',
  'newt_checkbox_get_value' => '<span class="type">string</span> <span class="methodname">newt_checkbox_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkbox</code></span> )',
  'newt_checkbox' => '<span class="type">resource</span> <span class="methodname">newt_checkbox</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$def_value</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$seq</code></span> ] )',
  'newt_checkbox_set_flags' => '<span class="type">void</span> <span class="methodname">newt_checkbox_set_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sense</code></span> )',
  'newt_checkbox_set_value' => '<span class="type">void</span> <span class="methodname">newt_checkbox_set_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'newt_checkbox_tree_add_item' => '<span class="type">void</span> <span class="methodname">newt_checkbox_tree_add_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$index</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> ] )',
  'newt_checkbox_tree_find_item' => '<span class="type">array</span> <span class="methodname">newt_checkbox_tree_find_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_checkbox_tree_get_current' => '<span class="type">mixed</span> <span class="methodname">newt_checkbox_tree_get_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> )',
  'newt_checkbox_tree_get_entry_value' => '<span class="type">string</span> <span class="methodname">newt_checkbox_tree_get_entry_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_checkbox_tree_get_multi_selection' => '<span class="type">array</span> <span class="methodname">newt_checkbox_tree_get_multi_selection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$seqnum</code></span> )',
  'newt_checkbox_tree_get_selection' => '<span class="type">array</span> <span class="methodname">newt_checkbox_tree_get_selection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> )',
  'newt_checkbox_tree' => '<span class="type">resource</span> <span class="methodname">newt_checkbox_tree</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_checkbox_tree_multi' => '<span class="type">resource</span> <span class="methodname">newt_checkbox_tree_multi</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$seq</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_checkbox_tree_set_current' => '<span class="type">void</span> <span class="methodname">newt_checkbox_tree_set_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_checkbox_tree_set_entry' => '<span class="type">void</span> <span class="methodname">newt_checkbox_tree_set_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_checkbox_tree_set_entry_value' => '<span class="type">void</span> <span class="methodname">newt_checkbox_tree_set_entry_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkboxtree</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'newt_checkbox_tree_set_width' => '<span class="type">void</span> <span class="methodname">newt_checkbox_tree_set_width</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$checkbox_tree</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> )',
  'newt_clear_key_buffer' => '<span class="type">void</span> <span class="methodname">newt_clear_key_buffer</span> ( <span class="methodparam">void</span> )',
  'newt_cls' => '<span class="type">void</span> <span class="methodname">newt_cls</span> ( <span class="methodparam">void</span> )',
  'newt_compact_button' => '<span class="type">resource</span> <span class="methodname">newt_compact_button</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_component_add_callback' => '<span class="type">void</span> <span class="methodname">newt_component_add_callback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$component</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$func_name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_component_takes_focus' => '<span class="type">void</span> <span class="methodname">newt_component_takes_focus</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$component</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$takes_focus</code></span> )',
  'newt_create_grid' => '<span class="type">resource</span> <span class="methodname">newt_create_grid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$cols</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rows</code></span> )',
  'newt_cursor_off' => '<span class="type">void</span> <span class="methodname">newt_cursor_off</span> ( <span class="methodparam">void</span> )',
  'newt_cursor_on' => '<span class="type">void</span> <span class="methodname">newt_cursor_on</span> ( <span class="methodparam">void</span> )',
  'newt_delay' => '<span class="type">void</span> <span class="methodname">newt_delay</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$microseconds</code></span> )',
  'newt_draw_form' => '<span class="type">void</span> <span class="methodname">newt_draw_form</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> )',
  'newt_draw_root_text' => '<span class="type">void</span> <span class="methodname">newt_draw_root_text</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_entry_get_value' => '<span class="type">string</span> <span class="methodname">newt_entry_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> )',
  'newt_entry' => '<span class="type">resource</span> <span class="methodname">newt_entry</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$init_value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ]] )',
  'newt_entry_set_filter' => '<span class="type">void</span> <span class="methodname">newt_entry_set_filter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$filter</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_entry_set_flags' => '<span class="type">void</span> <span class="methodname">newt_entry_set_flags</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sense</code></span> )',
  'newt_entry_set' => '<span class="type">void</span> <span class="methodname">newt_entry_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$entry</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$cursor_at_end</code></span> ] )',
  'newt_finished' => '<span class="type">int</span> <span class="methodname">newt_finished</span> ( <span class="methodparam">void</span> )',
  'newt_form_add_component' => '<span class="type">void</span> <span class="methodname">newt_form_add_component</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$component</code></span> )',
  'newt_form_add_components' => '<span class="type">void</span> <span class="methodname">newt_form_add_components</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$components</code></span> )',
  'newt_form_add_hot_key' => '<span class="type">void</span> <span class="methodname">newt_form_add_hot_key</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> )',
  'newt_form_destroy' => '<span class="type">void</span> <span class="methodname">newt_form_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> )',
  'newt_form_get_current' => '<span class="type">resource</span> <span class="methodname">newt_form_get_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> )',
  'newt_form' => '<span class="type">resource</span> <span class="methodname">newt_form</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$vert_bar</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$help</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ]]] )',
  'newt_form_run' => '<span class="type">void</span> <span class="methodname">newt_form_run</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$exit_struct</code></span> )',
  'newt_form_set_background' => '<span class="type">void</span> <span class="methodname">newt_form_set_background</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$from</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$background</code></span> )',
  'newt_form_set_height' => '<span class="type">void</span> <span class="methodname">newt_form_set_height</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'newt_form_set_size' => '<span class="type">void</span> <span class="methodname">newt_form_set_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> )',
  'newt_form_set_timer' => '<span class="type">void</span> <span class="methodname">newt_form_set_timer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> )',
  'newt_form_set_width' => '<span class="type">void</span> <span class="methodname">newt_form_set_width</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> )',
  'newt_form_watch_fd' => '<span class="type">void</span> <span class="methodname">newt_form_watch_fd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_get_screen_size' => '<span class="type">void</span> <span class="methodname">newt_get_screen_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$cols</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$rows</code></span> )',
  'newt_grid_add_components_to_form' => '<span class="type">void</span> <span class="methodname">newt_grid_add_components_to_form</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recurse</code></span> )',
  'newt_grid_basic_window' => '<span class="type">resource</span> <span class="methodname">newt_grid_basic_window</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$middle</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buttons</code></span> )',
  'newt_grid_free' => '<span class="type">void</span> <span class="methodname">newt_grid_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recurse</code></span> )',
  'newt_grid_get_size' => '<span class="type">void</span> <span class="methodname">newt_grid_get_size</span> ( <span class="methodparam"><span class="type">resouce</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$height</code></span> )',
  'newt_grid_h_close_stacked' => '<span class="type">resource</span> <span class="methodname">newt_grid_h_close_stacked</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$element1_type</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$element1</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$...</code></span> ]] )',
  'newt_grid_h_stacked' => '<span class="type">resource</span> <span class="methodname">newt_grid_h_stacked</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$element1_type</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$element1</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$...</code></span> ]] )',
  'newt_grid_place' => '<span class="type">void</span> <span class="methodname">newt_grid_place</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> )',
  'newt_grid_set_field' => '<span class="type">void</span> <span class="methodname">newt_grid_set_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$col</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$val</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_right</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_bottom</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$anchor</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_grid_simple_window' => '<span class="type">resource</span> <span class="methodname">newt_grid_simple_window</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$middle</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buttons</code></span> )',
  'newt_grid_v_close_stacked' => '<span class="type">resource</span> <span class="methodname">newt_grid_v_close_stacked</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$element1_type</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$element1</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$...</code></span> ]] )',
  'newt_grid_v_stacked' => '<span class="type">resource</span> <span class="methodname">newt_grid_v_stacked</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$element1_type</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$element1</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$...</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$...</code></span> ]] )',
  'newt_grid_wrapped_window_at' => '<span class="type">void</span> <span class="methodname">newt_grid_wrapped_window_at</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> )',
  'newt_grid_wrapped_window' => '<span class="type">void</span> <span class="methodname">newt_grid_wrapped_window</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$grid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> )',
  'newt_init' => '<span class="type">int</span> <span class="methodname">newt_init</span> ( <span class="methodparam">void</span> )',
  'newt_label' => '<span class="type">resource</span> <span class="methodname">newt_label</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_label_set_text' => '<span class="type">void</span> <span class="methodname">newt_label_set_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$label</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_listbox_append_entry' => '<span class="type">void</span> <span class="methodname">newt_listbox_append_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_listbox_clear' => '<span class="type">void</span> <span class="methodname">newt_listbox_clear</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listobx</code></span> )',
  'newt_listbox_clear_selection' => '<span class="type">void</span> <span class="methodname">newt_listbox_clear_selection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> )',
  'newt_listbox_delete_entry' => '<span class="type">void</span> <span class="methodname">newt_listbox_delete_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'newt_listbox_get_current' => '<span class="type">string</span> <span class="methodname">newt_listbox_get_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> )',
  'newt_listbox_get_selection' => '<span class="type">array</span> <span class="methodname">newt_listbox_get_selection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> )',
  'newt_listbox' => '<span class="type">resource</span> <span class="methodname">newt_listbox</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_listbox_insert_entry' => '<span class="type">void</span> <span class="methodname">newt_listbox_insert_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'newt_listbox_item_count' => '<span class="type">int</span> <span class="methodname">newt_listbox_item_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> )',
  'newt_listbox_select_item' => '<span class="type">void</span> <span class="methodname">newt_listbox_select_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sense</code></span> )',
  'newt_listbox_set_current_by_key' => '<span class="type">void</span> <span class="methodname">newt_listbox_set_current_by_key</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'newt_listbox_set_current' => '<span class="type">void</span> <span class="methodname">newt_listbox_set_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> )',
  'newt_listbox_set_data' => '<span class="type">void</span> <span class="methodname">newt_listbox_set_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_listbox_set_entry' => '<span class="type">void</span> <span class="methodname">newt_listbox_set_entry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_listbox_set_width' => '<span class="type">void</span> <span class="methodname">newt_listbox_set_width</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$listbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> )',
  'newt_listitem_get_data' => '<span class="type">mixed</span> <span class="methodname">newt_listitem_get_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$item</code></span> )',
  'newt_listitem' => '<span class="type">resource</span> <span class="methodname">newt_listitem</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_default</code></span> , <span class="methodparam"><span class="type">resouce</span> <code class="parameter">$prev_item</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_listitem_set' => '<span class="type">void</span> <span class="methodname">newt_listitem_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$item</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_open_window' => '<span class="type">int</span> <span class="methodname">newt_open_window</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> ] )',
  'newt_pop_help_line' => '<span class="type">void</span> <span class="methodname">newt_pop_help_line</span> ( <span class="methodparam">void</span> )',
  'newt_pop_window' => '<span class="type">void</span> <span class="methodname">newt_pop_window</span> ( <span class="methodparam">void</span> )',
  'newt_push_help_line' => '<span class="type">void</span> <span class="methodname">newt_push_help_line</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> ] )',
  'newt_radiobutton' => '<span class="type">resource</span> <span class="methodname">newt_radiobutton</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_default</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$prev_button</code></span> ] )',
  'newt_radio_get_current' => '<span class="type">resource</span> <span class="methodname">newt_radio_get_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$set_member</code></span> )',
  'newt_redraw_help_line' => '<span class="type">void</span> <span class="methodname">newt_redraw_help_line</span> ( <span class="methodparam">void</span> )',
  'newt_reflow_text' => '<span class="type">string</span> <span class="methodname">newt_reflow_text</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_down</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_up</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$actual_width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$actual_height</code></span> )',
  'newt_refresh' => '<span class="type">void</span> <span class="methodname">newt_refresh</span> ( <span class="methodparam">void</span> )',
  'newt_resize_screen' => '<span class="type">void</span> <span class="methodname">newt_resize_screen</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$redraw</code></span> ] )',
  'newt_resume' => '<span class="type">void</span> <span class="methodname">newt_resume</span> ( <span class="methodparam">void</span> )',
  'newt_run_form' => '<span class="type">resource</span> <span class="methodname">newt_run_form</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$form</code></span> )',
  'newt_scale' => '<span class="type">resource</span> <span class="methodname">newt_scale</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$full_value</code></span> )',
  'newt_scale_set' => '<span class="type">void</span> <span class="methodname">newt_scale_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$scale</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$amount</code></span> )',
  'newt_scrollbar_set' => '<span class="type">void</span> <span class="methodname">newt_scrollbar_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$scrollbar</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$where</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$total</code></span> )',
  'newt_set_help_callback' => '<span class="type">void</span> <span class="methodname">newt_set_help_callback</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$function</code></span> )',
  'newt_set_suspend_callback' => '<span class="type">void</span> <span class="methodname">newt_set_suspend_callback</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> )',
  'newt_suspend' => '<span class="type">void</span> <span class="methodname">newt_suspend</span> ( <span class="methodparam">void</span> )',
  'newt_textbox_get_num_lines' => '<span class="type">int</span> <span class="methodname">newt_textbox_get_num_lines</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$textbox</code></span> )',
  'newt_textbox' => '<span class="type">resource</span> <span class="methodname">newt_textbox</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_textbox_reflowed' => '<span class="type">resource</span> <span class="methodname">newt_textbox_reflowed</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">char</span> <code class="parameter">$*text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_down</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_up</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'newt_textbox_set_height' => '<span class="type">void</span> <span class="methodname">newt_textbox_set_height</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$textbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'newt_textbox_set_text' => '<span class="type">void</span> <span class="methodname">newt_textbox_set_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$textbox</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'newt_vertical_scrollbar' => '<span class="type">resource</span> <span class="methodname">newt_vertical_scrollbar</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$normal_colorset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$thumb_colorset</code></span> ]] )',
  'newt_wait_for_key' => '<span class="type">void</span> <span class="methodname">newt_wait_for_key</span> ( <span class="methodparam">void</span> )',
  'newt_win_choice' => '<span class="type">int</span> <span class="methodname">newt_win_choice</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button1_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button2_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'newt_win_entries' => '<span class="type">int</span> <span class="methodname">newt_win_entries</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$suggested_width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_down</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flex_up</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$data_width</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$items</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ] )',
  'newt_win_menu' => '<span class="type">int</span> <span class="methodname">newt_win_menu</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$suggestedWidth</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flexDown</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flexUp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxListHeight</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$items</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$listItem</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$button1</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] )',
  'newt_win_message' => '<span class="type">void</span> <span class="methodname">newt_win_message</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'newt_win_messagev' => '<span class="type">void</span> <span class="methodname">newt_win_messagev</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'newt_win_ternary' => '<span class="type">int</span> <span class="methodname">newt_win_ternary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button1_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button2_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$button3_text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'next' => '<span class="type">mixed</span> <span class="methodname">next</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'ngettext' => '<span class="type">string</span> <span class="methodname">ngettext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$msgid2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'nl2br' => '<span class="type">string</span> <span class="methodname">nl2br</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_xhtml</code><span class="initializer">= true</span></span> ] )',
  'nl_langinfo' => '<span class="type">string</span> <span class="methodname">nl_langinfo</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$item</code></span> )',
  'notes_body' => '<span class="type">array</span> <span class="methodname">notes_body</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> )',
  'notes_copy_db' => '<span class="type">bool</span> <span class="methodname">notes_copy_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$from_database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_database_name</code></span> )',
  'notes_create_db' => '<span class="type">bool</span> <span class="methodname">notes_create_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> )',
  'notes_create_note' => '<span class="type">bool</span> <span class="methodname">notes_create_note</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$form_name</code></span> )',
  'notes_drop_db' => '<span class="type">bool</span> <span class="methodname">notes_drop_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> )',
  'notes_find_note' => '<span class="type">int</span> <span class="methodname">notes_find_note</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> ] )',
  'notes_header_info' => '<span class="type">object</span> <span class="methodname">notes_header_info</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mailbox</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$msg_number</code></span> )',
  'notes_list_msgs' => '<span class="type">bool</span> <span class="methodname">notes_list_msgs</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$db</code></span> )',
  'notes_mark_read' => '<span class="type">bool</span> <span class="methodname">notes_mark_read</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$note_id</code></span> )',
  'notes_mark_unread' => '<span class="type">bool</span> <span class="methodname">notes_mark_unread</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$note_id</code></span> )',
  'notes_nav_create' => '<span class="type">bool</span> <span class="methodname">notes_nav_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'notes_search' => '<span class="type">array</span> <span class="methodname">notes_search</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keywords</code></span> )',
  'notes_unread' => '<span class="type">array</span> <span class="methodname">notes_unread</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user_name</code></span> )',
  'notes_version' => '<span class="type">float</span> <span class="methodname">notes_version</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> )',
  'nsapi_request_headers' => '<span class="type">array</span> <span class="methodname">nsapi_request_headers</span> ( <span class="methodparam">void</span> )',
  'nsapi_response_headers' => '<span class="type">array</span> <span class="methodname">nsapi_response_headers</span> ( <span class="methodparam">void</span> )',
  'nsapi_virtual' => '<span class="type">bool</span> <span class="methodname">nsapi_virtual</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'nthmac' => '<span class="type">string</span> <span class="methodname">nthmac</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'number_format' => '<span class="type">string</span> <span class="methodname">number_format</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$decimals</code><span class="initializer">= 0</span></span> ] ) <span class="type">string</span> <span class="methodname">number_format</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$decimals</code><span class="initializer">= 0</span></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dec_point</code><span class="initializer">= &#039;.&#039;</span></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$thousands_sep</code><span class="initializer">= &#039;,&#039;</span></span> )',
  'oauth_get_sbs' => '<span class="type">string</span> <span class="methodname">oauth_get_sbs</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$http_method</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$request_parameters</code></span> ] )',
  'oauth_urlencode' => '<span class="type">string</span> <span class="methodname">oauth_urlencode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'ob_clean' => '<span class="type">void</span> <span class="methodname">ob_clean</span> ( <span class="methodparam">void</span> )',
  'ob_deflatehandler' => '<span class="type">string</span> <span class="methodname">ob_deflatehandler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ob_end_clean' => '<span class="type">bool</span> <span class="methodname">ob_end_clean</span> ( <span class="methodparam">void</span> )',
  'ob_end_flush' => '<span class="type">bool</span> <span class="methodname">ob_end_flush</span> ( <span class="methodparam">void</span> )',
  'ob_etaghandler' => '<span class="type">string</span> <span class="methodname">ob_etaghandler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ob_flush' => '<span class="type">void</span> <span class="methodname">ob_flush</span> ( <span class="methodparam">void</span> )',
  'ob_get_clean' => '<span class="type">string</span> <span class="methodname">ob_get_clean</span> ( <span class="methodparam">void</span> )',
  'ob_get_contents' => '<span class="type">string</span> <span class="methodname">ob_get_contents</span> ( <span class="methodparam">void</span> )',
  'ob_get_flush' => '<span class="type">string</span> <span class="methodname">ob_get_flush</span> ( <span class="methodparam">void</span> )',
  'ob_get_length' => '<span class="type">int</span> <span class="methodname">ob_get_length</span> ( <span class="methodparam">void</span> )',
  'ob_get_level' => '<span class="type">int</span> <span class="methodname">ob_get_level</span> ( <span class="methodparam">void</span> )',
  'ob_get_status' => '<span class="type">array</span> <span class="methodname">ob_get_status</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$full_status</code> <span class="initializer">= FALSE</span></span> ] )',
  'ob_gzhandler' => '<span class="type">string</span> <span class="methodname">ob_gzhandler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$buffer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ob_iconv_handler' => '<span class="type">string</span> <span class="methodname">ob_iconv_handler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'ob_implicit_flush' => '<span class="type">void</span> <span class="methodname">ob_implicit_flush</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code><span class="initializer">= true</span></span> ] )',
  'ob_inflatehandler' => '<span class="type">string</span> <span class="methodname">ob_inflatehandler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ob_list_handlers' => '<span class="type">array</span> <span class="methodname">ob_list_handlers</span> ( <span class="methodparam">void</span> )',
  'ob_start' => '<span class="type">bool</span> <span class="methodname">ob_start</span> ([ <span class="methodparam"><span class="type">callable</span> <code class="parameter">$output_callback</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$chunk_size</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$erase</code><span class="initializer">= true</span></span> ]]] ) <span class="type">bool</span> <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$buffer</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$phase</code></span> ] )',
  'ob_tidyhandler' => '<span class="type">string</span> <span class="methodname">ob_tidyhandler</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> ] )',
  'oci_bind_array_by_name' => '<span class="type">bool</span> <span class="methodname">oci_bind_array_by_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$var_array</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_table_length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_item_length</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= SQLT_AFC</span></span> ]] )',
  'ocibindbyname' => '',
  'oci_bind_by_name' => '<span class="type">bool</span> <span class="methodname">oci_bind_by_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$bv_name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$variable</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxlength</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= SQLT_CHR</span></span> ]] )',
  'ocicancel' => '',
  'oci_cancel' => '<span class="type">bool</span> <span class="methodname">oci_cancel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'oci_client_version' => '<span class="type">string</span> <span class="methodname">oci_client_version</span> ( <span class="methodparam">void</span> )',
  'oci_close' => '<span class="type">bool</span> <span class="methodname">oci_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'ocicloselob' => '',
  'ocicollappend' => '',
  'ocicollassignelem' => '',
  'ocicollassign' => '',
  'ocicollgetelem' => '',
  'ocicollmax' => '',
  'ocicollsize' => '',
  'ocicolltrim' => '',
  'ocicolumnisnull' => '',
  'ocicolumnname' => '',
  'ocicolumnprecision' => '',
  'ocicolumnscale' => '',
  'ocicolumnsize' => '',
  'ocicolumntype' => '',
  'ocicolumntyperaw' => '',
  'ocicommit' => '',
  'oci_commit' => '<span class="type">bool</span> <span class="methodname">oci_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'oci_connect' => '<span class="type">resource</span> <span class="methodname">oci_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$connection_string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$character_set</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$session_mode</code></span> ]]] )',
  'ocidefinebyname' => '',
  'oci_define_by_name' => '<span class="type">bool</span> <span class="methodname">oci_define_by_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$column_name</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$variable</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= SQLT_CHR</span></span> ] )',
  'ocierror' => '',
  'oci_error' => '<span class="type">array</span> <span class="methodname">oci_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$resource</code></span> ] )',
  'ociexecute' => '',
  'oci_execute' => '<span class="type">bool</span> <span class="methodname">oci_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= OCI_COMMIT_ON_SUCCESS</span></span> ] )',
  'oci_fetch_all' => '<span class="type">int</span> <span class="methodname">oci_fetch_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$output</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$skip</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxrows</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= <strong><code>OCI_FETCHSTATEMENT_BY_COLUMN</code></strong> + <strong><code>OCI_ASSOC</code></strong></span></span> ]]] )',
  'oci_fetch_array' => '<span class="type">array</span> <span class="methodname">oci_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> ] )',
  'oci_fetch_assoc' => '<span class="type">array</span> <span class="methodname">oci_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ocifetch' => '',
  'oci_fetch' => '<span class="type">bool</span> <span class="methodname">oci_fetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ocifetchinto' => '<span class="type">int</span> <span class="methodname">ocifetchinto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= <strong><code>OCI_ASSOC</code></strong> + <strong><code>OCI_NUM</code></strong></span></span> ] )',
  'oci_fetch_object' => '<span class="type">object</span> <span class="methodname">oci_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'oci_fetch_row' => '<span class="type">array</span> <span class="methodname">oci_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ocifetchstatement' => '',
  'oci_field_is_null' => '<span class="type">bool</span> <span class="methodname">oci_field_is_null</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'oci_field_name' => '<span class="type">string</span> <span class="methodname">oci_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'oci_field_precision' => '<span class="type">int</span> <span class="methodname">oci_field_precision</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'oci_field_scale' => '<span class="type">int</span> <span class="methodname">oci_field_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'oci_field_size' => '<span class="type">int</span> <span class="methodname">oci_field_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'oci_field_type' => '<span class="type">mixed</span> <span class="methodname">oci_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'oci_field_type_raw' => '<span class="type">int</span> <span class="methodname">oci_field_type_raw</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'ocifreecollection' => '',
  'ocifreecursor' => '',
  'ocifreedesc' => '',
  'oci_free_descriptor' => '<span class="type">bool</span> <span class="methodname">oci_free_descriptor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$descriptor</code></span> )',
  'ocifreestatement' => '',
  'oci_free_statement' => '<span class="type">bool</span> <span class="methodname">oci_free_statement</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ociinternaldebug' => '',
  'oci_internal_debug' => '<span class="type">void</span> <span class="methodname">oci_internal_debug</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$onoff</code></span> )',
  'ociloadlob' => '',
  'oci_lob_copy' => '<span class="type">bool</span> <span class="methodname">oci_lob_copy</span> ( <span class="methodparam"><span class="type">OCI-Lob</span> <code class="parameter">$lob_to</code></span> , <span class="methodparam"><span class="type">OCI-Lob</span> <code class="parameter">$lob_from</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> ] )',
  'oci_lob_is_equal' => '<span class="type">bool</span> <span class="methodname">oci_lob_is_equal</span> ( <span class="methodparam"><span class="type">OCI-Lob</span> <code class="parameter">$lob1</code></span> , <span class="methodparam"><span class="type">OCI-Lob</span> <code class="parameter">$lob2</code></span> )',
  'ocilogoff' => '',
  'ocilogon' => '',
  'ocinewcollection' => '',
  'oci_new_collection' => '<span class="type">OCI-Collection</span> <span class="methodname">oci_new_collection</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tdo</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'oci_new_connect' => '<span class="type">resource</span> <span class="methodname">oci_new_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$connection_string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$character_set</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$session_mode</code></span> ]]] )',
  'ocinewcursor' => '',
  'oci_new_cursor' => '<span class="type">resource</span> <span class="methodname">oci_new_cursor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'ocinewdescriptor' => '',
  'oci_new_descriptor' => '<span class="type">OCI-Lob</span> <span class="methodname">oci_new_descriptor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= OCI_DTYPE_LOB</span></span> ] )',
  'ocinlogon' => '',
  'ocinumcols' => '',
  'oci_num_fields' => '<span class="type">int</span> <span class="methodname">oci_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'oci_num_rows' => '<span class="type">int</span> <span class="methodname">oci_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ociparse' => '',
  'oci_parse' => '<span class="type">resource</span> <span class="methodname">oci_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql_text</code></span> )',
  'oci_password_change' => '<span class="type">bool</span> <span class="methodname">oci_password_change</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_password</code></span> ) <span class="type">resource</span> <span class="methodname">oci_password_change</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_password</code></span> )',
  'oci_pconnect' => '<span class="type">resource</span> <span class="methodname">oci_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$connection_string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$character_set</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$session_mode</code></span> ]]] )',
  'ociplogon' => '',
  'ociresult' => '',
  'oci_result' => '<span class="type">mixed</span> <span class="methodname">oci_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'ocirollback' => '',
  'oci_rollback' => '<span class="type">bool</span> <span class="methodname">oci_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'ocirowcount' => '',
  'ocisavelobfile' => '',
  'ocisavelob' => '',
  'ociserverversion' => '',
  'oci_server_version' => '<span class="type">string</span> <span class="methodname">oci_server_version</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'oci_set_action' => '<span class="type">bool</span> <span class="methodname">oci_set_action</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$action_name</code></span> )',
  'oci_set_client_identifier' => '<span class="type">bool</span> <span class="methodname">oci_set_client_identifier</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$client_identifier</code></span> )',
  'oci_set_client_info' => '<span class="type">bool</span> <span class="methodname">oci_set_client_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$client_info</code></span> )',
  'oci_set_edition' => '<span class="type">bool</span> <span class="methodname">oci_set_edition</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$edition</code></span> )',
  'oci_set_module_name' => '<span class="type">bool</span> <span class="methodname">oci_set_module_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$module_name</code></span> )',
  'ocisetprefetch' => '',
  'oci_set_prefetch' => '<span class="type">bool</span> <span class="methodname">oci_set_prefetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rows</code></span> )',
  'ocistatementtype' => '',
  'oci_statement_type' => '<span class="type">string</span> <span class="methodname">oci_statement_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$statement</code></span> )',
  'ociwritelobtofile' => '',
  'ociwritetemporarylob' => '',
  'octdec' => '<span class="type">number</span> <span class="methodname">octdec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$octal_string</code></span> )',
  'odbc_autocommit' => '<span class="type">mixed</span> <span class="methodname">odbc_autocommit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$OnOff</code><span class="initializer">= false</span></span> ] )',
  'odbc_binmode' => '<span class="type">bool</span> <span class="methodname">odbc_binmode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'odbc_close_all' => '<span class="type">void</span> <span class="methodname">odbc_close_all</span> ( <span class="methodparam">void</span> )',
  'odbc_close' => '<span class="type">void</span> <span class="methodname">odbc_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> )',
  'odbc_columnprivileges' => '<span class="type">resource</span> <span class="methodname">odbc_columnprivileges</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$column_name</code></span> )',
  'odbc_columns' => '<span class="type">resource</span> <span class="methodname">odbc_columns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$column_name</code></span> ]]]] )',
  'odbc_commit' => '<span class="type">bool</span> <span class="methodname">odbc_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> )',
  'odbc_connect' => '<span class="type">resource</span> <span class="methodname">odbc_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dsn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$cursor_type</code></span> ] )',
  'odbc_cursor' => '<span class="type">string</span> <span class="methodname">odbc_cursor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'odbc_data_source' => '<span class="type">array</span> <span class="methodname">odbc_data_source</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fetch_type</code></span> )',
  'odbc_do' => '',
  'odbc_error' => '<span class="type">string</span> <span class="methodname">odbc_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> ] )',
  'odbc_errormsg' => '<span class="type">string</span> <span class="methodname">odbc_errormsg</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> ] )',
  'odbc_exec' => '<span class="type">resource</span> <span class="methodname">odbc_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query_string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'odbc_execute' => '<span class="type">bool</span> <span class="methodname">odbc_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters_array</code></span> ] )',
  'odbc_fetch_array' => '<span class="type">array</span> <span class="methodname">odbc_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownumber</code></span> ] )',
  'odbc_fetch_into' => '<span class="type">int</span> <span class="methodname">odbc_fetch_into</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result_array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownumber</code></span> ] )',
  'odbc_fetch_object' => '<span class="type">object</span> <span class="methodname">odbc_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownumber</code></span> ] )',
  'odbc_fetch_row' => '<span class="type">bool</span> <span class="methodname">odbc_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> ] )',
  'odbc_field_len' => '<span class="type">int</span> <span class="methodname">odbc_field_len</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'odbc_field_name' => '<span class="type">string</span> <span class="methodname">odbc_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'odbc_field_num' => '<span class="type">int</span> <span class="methodname">odbc_field_num</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_name</code></span> )',
  'odbc_field_precision' => '',
  'odbc_field_scale' => '<span class="type">int</span> <span class="methodname">odbc_field_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'odbc_field_type' => '<span class="type">string</span> <span class="methodname">odbc_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'odbc_foreignkeys' => '<span class="type">resource</span> <span class="methodname">odbc_foreignkeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pk_qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pk_owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pk_table</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fk_qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fk_owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fk_table</code></span> )',
  'odbc_free_result' => '<span class="type">bool</span> <span class="methodname">odbc_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'odbc_gettypeinfo' => '<span class="type">resource</span> <span class="methodname">odbc_gettypeinfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$data_type</code></span> ] )',
  'odbc_longreadlen' => '<span class="type">bool</span> <span class="methodname">odbc_longreadlen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'odbc_next_result' => '<span class="type">bool</span> <span class="methodname">odbc_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'odbc_num_fields' => '<span class="type">int</span> <span class="methodname">odbc_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'odbc_num_rows' => '<span class="type">int</span> <span class="methodname">odbc_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> )',
  'odbc_pconnect' => '<span class="type">resource</span> <span class="methodname">odbc_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dsn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$cursor_type</code></span> ] )',
  'odbc_prepare' => '<span class="type">resource</span> <span class="methodname">odbc_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query_string</code></span> )',
  'odbc_primarykeys' => '<span class="type">resource</span> <span class="methodname">odbc_primarykeys</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table</code></span> )',
  'odbc_procedurecolumns' => '<span class="type">resource</span> <span class="methodname">odbc_procedurecolumns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> ) <span class="type">resource</span> <span class="methodname">odbc_procedurecolumns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$proc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$column</code></span> )',
  'odbc_procedures' => '<span class="type">resource</span> <span class="methodname">odbc_procedures</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> ) <span class="type">resource</span> <span class="methodname">odbc_procedures</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'odbc_result_all' => '<span class="type">int</span> <span class="methodname">odbc_result_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> ] )',
  'odbc_result' => '<span class="type">mixed</span> <span class="methodname">odbc_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'odbc_rollback' => '<span class="type">bool</span> <span class="methodname">odbc_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> )',
  'odbc_setoption' => '<span class="type">bool</span> <span class="methodname">odbc_setoption</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$function</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param</code></span> )',
  'odbc_specialcolumns' => '<span class="type">resource</span> <span class="methodname">odbc_specialcolumns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$scope</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$nullable</code></span> )',
  'odbc_statistics' => '<span class="type">resource</span> <span class="methodname">odbc_statistics</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$unique</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$accuracy</code></span> )',
  'odbc_tableprivileges' => '<span class="type">resource</span> <span class="methodname">odbc_tableprivileges</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'odbc_tables' => '<span class="type">resource</span> <span class="methodname">odbc_tables</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifier</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$owner</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$types</code></span> ]]]] )',
  'opcache_compile_file' => '<span class="type">boolean</span> <span class="methodname">opcache_compile_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'opcache_invalidate' => '<span class="type">boolean</span> <span class="methodname">opcache_invalidate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$script</code></span> [, <span class="methodparam"><span class="type">boolean</span> <code class="parameter">$force</code><span class="initializer">= <strong><code>FALSE</code></strong></span></span> ] )',
  'opcache_reset' => '<span class="type">boolean</span> <span class="methodname">opcache_reset</span> ( <span class="methodparam">void</span> )',
  'openal_buffer_create' => '<span class="type">resource</span> <span class="methodname">openal_buffer_create</span> ( <span class="methodparam">void</span> )',
  'openal_buffer_data' => '<span class="type">bool</span> <span class="methodname">openal_buffer_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buffer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$freq</code></span> )',
  'openal_buffer_destroy' => '<span class="type">bool</span> <span class="methodname">openal_buffer_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buffer</code></span> )',
  'openal_buffer_get' => '<span class="type">int</span> <span class="methodname">openal_buffer_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buffer</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span> )',
  'openal_buffer_loadwav' => '<span class="type">bool</span> <span class="methodname">openal_buffer_loadwav</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$buffer</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$wavfile</code></span> )',
  'openal_context_create' => '<span class="type">resource</span> <span class="methodname">openal_context_create</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$device</code></span> )',
  'openal_context_current' => '<span class="type">bool</span> <span class="methodname">openal_context_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'openal_context_destroy' => '<span class="type">bool</span> <span class="methodname">openal_context_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'openal_context_process' => '<span class="type">bool</span> <span class="methodname">openal_context_process</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'openal_context_suspend' => '<span class="type">bool</span> <span class="methodname">openal_context_suspend</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> )',
  'openal_device_close' => '<span class="type">bool</span> <span class="methodname">openal_device_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$device</code></span> )',
  'openal_device_open' => '<span class="type">resource</span> <span class="methodname">openal_device_open</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$device_desc</code></span> ] )',
  'openal_listener_get' => '<span class="type">mixed</span> <span class="methodname">openal_listener_get</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span> )',
  'openal_listener_set' => '<span class="type">bool</span> <span class="methodname">openal_listener_set</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$setting</code></span> )',
  'openal_source_create' => '<span class="type">resource</span> <span class="methodname">openal_source_create</span> ( <span class="methodparam">void</span> )',
  'openal_source_destroy' => '<span class="type">bool</span> <span class="methodname">openal_source_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'openal_source_get' => '<span class="type">mixed</span> <span class="methodname">openal_source_get</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span> )',
  'openal_source_pause' => '<span class="type">bool</span> <span class="methodname">openal_source_pause</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'openal_source_play' => '<span class="type">bool</span> <span class="methodname">openal_source_play</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'openal_source_rewind' => '<span class="type">bool</span> <span class="methodname">openal_source_rewind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'openal_source_set' => '<span class="type">bool</span> <span class="methodname">openal_source_set</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$property</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$setting</code></span> )',
  'openal_source_stop' => '<span class="type">bool</span> <span class="methodname">openal_source_stop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> )',
  'openal_stream' => '<span class="type">resource</span> <span class="methodname">openal_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rate</code></span> )',
  'opendir' => '<span class="type">resource</span> <span class="methodname">opendir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'openlog' => '<span class="type">bool</span> <span class="methodname">openlog</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ident</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$facility</code></span> )',
  'openssl_cipher_iv_length' => '<span class="type">int</span> <span class="methodname">openssl_cipher_iv_length</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> )',
  'openssl_csr_export' => '<span class="type">bool</span> <span class="methodname">openssl_csr_export</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$csr</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$out</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$notext</code><span class="initializer">= true</span></span> ] )',
  'openssl_csr_export_to_file' => '<span class="type">bool</span> <span class="methodname">openssl_csr_export_to_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$csr</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$notext</code><span class="initializer">= true</span></span> ] )',
  'openssl_csr_get_public_key' => '<span class="type">resource</span> <span class="methodname">openssl_csr_get_public_key</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$csr</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_shortnames</code><span class="initializer">= true</span></span> ] )',
  'openssl_csr_get_subject' => '<span class="type">array</span> <span class="methodname">openssl_csr_get_subject</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$csr</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_shortnames</code><span class="initializer">= true</span></span> ] )',
  'openssl_csr_new' => '<span class="type">mixed</span> <span class="methodname">openssl_csr_new</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$dn</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter reference">&$privkey</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$configargs</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$extraattribs</code></span> ]] )',
  'openssl_csr_sign' => '<span class="type">resource</span> <span class="methodname">openssl_csr_sign</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$csr</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$cacert</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$priv_key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$days</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$configargs</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$serial</code><span class="initializer">= 0</span></span> ]] )',
  'openssl_decrypt' => '<span class="type">string</span> <span class="methodname">openssl_decrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code><span class="initializer">= &quot;&quot;</span></span> ]] )',
  'openssl_dh_compute_key' => '<span class="type">string</span> <span class="methodname">openssl_dh_compute_key</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pub_key</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dh_key</code></span> )',
  'openssl_digest' => '<span class="type">string</span> <span class="methodname">openssl_digest</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'openssl_encrypt' => '<span class="type">string</span> <span class="methodname">openssl_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$iv</code><span class="initializer">= &quot;&quot;</span></span> ]] )',
  'openssl_error_string' => '<span class="type">string</span> <span class="methodname">openssl_error_string</span> ( <span class="methodparam">void</span> )',
  'openssl_free_key' => '<span class="type">void</span> <span class="methodname">openssl_free_key</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$key_identifier</code></span> )',
  'openssl_get_cipher_methods' => '<span class="type">array</span> <span class="methodname">openssl_get_cipher_methods</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$aliases</code><span class="initializer">= false</span></span> ] )',
  'openssl_get_md_methods' => '<span class="type">array</span> <span class="methodname">openssl_get_md_methods</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$aliases</code><span class="initializer">= false</span></span> ] )',
  'openssl_get_privatekey' => '',
  'openssl_get_publickey' => '',
  'openssl_open' => '<span class="type">bool</span> <span class="methodname">openssl_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$sealed_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$open_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$env_key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$priv_key_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> ] )',
  'openssl_pbkdf2' => '<span class="type">string</span> <span class="methodname">openssl_pbkdf2</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$salt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$key_length</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$iterations</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$digest_algorithm</code></span> ] )',
  'openssl_pkcs12_export' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs12_export</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$out</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$priv_key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pass</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> ] )',
  'openssl_pkcs12_export_to_file' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs12_export_to_file</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$priv_key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pass</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> ] )',
  'openssl_pkcs12_read' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs12_read</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pkcs12</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$certs</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pass</code></span> )',
  'openssl_pkcs7_decrypt' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs7_decrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$infilename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$recipcert</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$recipkey</code></span> ] )',
  'openssl_pkcs7_encrypt' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs7_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$infile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfile</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$recipcerts</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$headers</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$cipherid</code><span class="initializer">= OPENSSL_CIPHER_RC2_40</span></span> ]] )',
  'openssl_pkcs7_sign' => '<span class="type">bool</span> <span class="methodname">openssl_pkcs7_sign</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$infilename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$signcert</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$privkey</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$headers</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= PKCS7_DETACHED</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$extracerts</code></span> ]] )',
  'openssl_pkcs7_verify' => '<span class="type">mixed</span> <span class="methodname">openssl_pkcs7_verify</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$cainfo</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$extracerts</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ]]]] )',
  'openssl_pkey_export' => '<span class="type">bool</span> <span class="methodname">openssl_pkey_export</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$out</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$configargs</code></span> ]] )',
  'openssl_pkey_export_to_file' => '<span class="type">bool</span> <span class="methodname">openssl_pkey_export_to_file</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$configargs</code></span> ]] )',
  'openssl_pkey_free' => '<span class="type">void</span> <span class="methodname">openssl_pkey_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$key</code></span> )',
  'openssl_pkey_get_details' => '<span class="type">array</span> <span class="methodname">openssl_pkey_get_details</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$key</code></span> )',
  'openssl_pkey_get_private' => '<span class="type">resource</span> <span class="methodname">openssl_pkey_get_private</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code><span class="initializer">= &quot;&quot;</span></span> ] )',
  'openssl_pkey_get_public' => '<span class="type">resource</span> <span class="methodname">openssl_pkey_get_public</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$certificate</code></span> )',
  'openssl_pkey_new' => '<span class="type">resource</span> <span class="methodname">openssl_pkey_new</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$configargs</code></span> ] )',
  'openssl_private_decrypt' => '<span class="type">bool</span> <span class="methodname">openssl_private_decrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$decrypted</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$padding</code><span class="initializer">= OPENSSL_PKCS1_PADDING</span></span> ] )',
  'openssl_private_encrypt' => '<span class="type">bool</span> <span class="methodname">openssl_private_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$crypted</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$padding</code><span class="initializer">= OPENSSL_PKCS1_PADDING</span></span> ] )',
  'openssl_public_decrypt' => '<span class="type">bool</span> <span class="methodname">openssl_public_decrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$decrypted</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$padding</code><span class="initializer">= OPENSSL_PKCS1_PADDING</span></span> ] )',
  'openssl_public_encrypt' => '<span class="type">bool</span> <span class="methodname">openssl_public_encrypt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$crypted</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$padding</code><span class="initializer">= OPENSSL_PKCS1_PADDING</span></span> ] )',
  'openssl_random_pseudo_bytes' => '<span class="type">string</span> <span class="methodname">openssl_random_pseudo_bytes</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$crypto_strong</code></span> ] )',
  'openssl_seal' => '<span class="type">int</span> <span class="methodname">openssl_seal</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$sealed_data</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$env_keys</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$pub_key_ids</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> ] )',
  'openssl_sign' => '<span class="type">bool</span> <span class="methodname">openssl_sign</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$signature</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$priv_key_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$signature_alg</code><span class="initializer">= OPENSSL_ALGO_SHA1</span></span> ] )',
  'openssl_verify' => '<span class="type">int</span> <span class="methodname">openssl_verify</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$signature</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$pub_key_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$signature_alg</code><span class="initializer">= OPENSSL_ALGO_SHA1</span></span> ] )',
  'openssl_x509_check_private_key' => '<span class="type">bool</span> <span class="methodname">openssl_x509_check_private_key</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$cert</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'openssl_x509_checkpurpose' => '<span class="type">int</span> <span class="methodname">openssl_x509_checkpurpose</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509cert</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$purpose</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$cainfo</code><span class="initializer">= array()</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$untrustedfile</code></span> ]] )',
  'openssl_x509_export' => '<span class="type">bool</span> <span class="methodname">openssl_x509_export</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$output</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$notext</code><span class="initializer">= <strong><code>TRUE</code></strong></span></span> ] )',
  'openssl_x509_export_to_file' => '<span class="type">bool</span> <span class="methodname">openssl_x509_export_to_file</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$outfilename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$notext</code><span class="initializer">= <strong><code>TRUE</code></strong></span></span> ] )',
  'openssl_x509_free' => '<span class="type">void</span> <span class="methodname">openssl_x509_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$x509cert</code></span> )',
  'openssl_x509_parse' => '<span class="type">array</span> <span class="methodname">openssl_x509_parse</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509cert</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$shortnames</code><span class="initializer">= true</span></span> ] )',
  'openssl_x509_read' => '<span class="type">resource</span> <span class="methodname">openssl_x509_read</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$x509certdata</code></span> )',
  'ord' => '<span class="type">int</span> <span class="methodname">ord</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'output_add_rewrite_var' => '<span class="type">bool</span> <span class="methodname">output_add_rewrite_var</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'output_reset_rewrite_vars' => '<span class="type">bool</span> <span class="methodname">output_reset_rewrite_vars</span> ( <span class="methodparam">void</span> )',
  'override_function' => '<span class="type">bool</span> <span class="methodname">override_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_code</code></span> )',
  'ovrimos_close' => '<span class="type">void</span> <span class="methodname">ovrimos_close</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection</code></span> )',
  'ovrimos_commit' => '<span class="type">bool</span> <span class="methodname">ovrimos_commit</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection_id</code></span> )',
  'ovrimos_connect' => '<span class="type">int</span> <span class="methodname">ovrimos_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dborport</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'ovrimos_cursor' => '<span class="type">string</span> <span class="methodname">ovrimos_cursor</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> )',
  'ovrimos_exec' => '<span class="type">int</span> <span class="methodname">ovrimos_exec</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'ovrimos_execute' => '<span class="type">bool</span> <span class="methodname">ovrimos_execute</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters_array</code></span> ] )',
  'ovrimos_fetch_into' => '<span class="type">bool</span> <span class="methodname">ovrimos_fetch_into</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result_array</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$how</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownumber</code></span> ]] )',
  'ovrimos_fetch_row' => '<span class="type">bool</span> <span class="methodname">ovrimos_fetch_row</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$how</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> ]] )',
  'ovrimos_field_len' => '<span class="type">int</span> <span class="methodname">ovrimos_field_len</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'ovrimos_field_name' => '<span class="type">string</span> <span class="methodname">ovrimos_field_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'ovrimos_field_num' => '<span class="type">int</span> <span class="methodname">ovrimos_field_num</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_name</code></span> )',
  'ovrimos_field_type' => '<span class="type">int</span> <span class="methodname">ovrimos_field_type</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'ovrimos_free_result' => '<span class="type">bool</span> <span class="methodname">ovrimos_free_result</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> )',
  'ovrimos_longreadlen' => '<span class="type">bool</span> <span class="methodname">ovrimos_longreadlen</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> )',
  'ovrimos_num_fields' => '<span class="type">int</span> <span class="methodname">ovrimos_num_fields</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> )',
  'ovrimos_num_rows' => '<span class="type">int</span> <span class="methodname">ovrimos_num_rows</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> )',
  'ovrimos_prepare' => '<span class="type">int</span> <span class="methodname">ovrimos_prepare</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'ovrimos_result_all' => '<span class="type">int</span> <span class="methodname">ovrimos_result_all</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> ] )',
  'ovrimos_result' => '<span class="type">string</span> <span class="methodname">ovrimos_result</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_id</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'ovrimos_rollback' => '<span class="type">bool</span> <span class="methodname">ovrimos_rollback</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$connection_id</code></span> )',
  'pack' => '<span class="type">string</span> <span class="methodname">pack</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'parse_ini_file' => '<span class="type">array</span> <span class="methodname">parse_ini_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$process_sections</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scanner_mode</code><span class="initializer">= INI_SCANNER_NORMAL</span></span> ]] )',
  'parse_ini_string' => '<span class="type">array</span> <span class="methodname">parse_ini_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$ini</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$process_sections</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$scanner_mode</code><span class="initializer">= INI_SCANNER_NORMAL</span></span> ]] )',
  'parsekit_compile_file' => '<span class="type">array</span> <span class="methodname">parsekit_compile_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$errors</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PARSEKIT_QUIET</span></span> ]] )',
  'parsekit_compile_string' => '<span class="type">array</span> <span class="methodname">parsekit_compile_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$phpcode</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$errors</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PARSEKIT_QUIET</span></span> ]] )',
  'parsekit_func_arginfo' => '<span class="type">array</span> <span class="methodname">parsekit_func_arginfo</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$function</code></span> )',
  'parse_str' => '<span class="type">void</span> <span class="methodname">parse_str</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$arr</code></span> ] )',
  'parse_url' => '<span class="type">mixed</span> <span class="methodname">parse_url</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$component</code><span class="initializer">= -1</span></span> ] )',
  'passthru' => '<span class="type">void</span> <span class="methodname">passthru</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$return_var</code></span> ] )',
  'password_get_info' => '<span class="type">array</span> <span class="methodname">password_get_info</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hash</code></span> )',
  'password_hash' => '<span class="type">string</span> <span class="methodname">password_hash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">integer</span> <code class="parameter">$algo</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'password_needs_rehash' => '<span class="type">boolean</span> <span class="methodname">password_needs_rehash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hash</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$algo</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$options</code></span> ] )',
  'password_verify' => '<span class="type">boolean</span> <span class="methodname">password_verify</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$hash</code></span> )',
  'pathinfo' => '<span class="type">mixed</span> <span class="methodname">pathinfo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME</span></span> ] )',
  'pclose' => '<span class="type">int</span> <span class="methodname">pclose</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'pcntl_alarm' => '<span class="type">int</span> <span class="methodname">pcntl_alarm</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> )',
  'pcntl_errno' => '',
  'pcntl_exec' => '<span class="type">void</span> <span class="methodname">pcntl_exec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$envs</code></span> ]] )',
  'pcntl_fork' => '<span class="type">int</span> <span class="methodname">pcntl_fork</span> ( <span class="methodparam">void</span> )',
  'pcntl_get_last_error' => '<span class="type">int</span> <span class="methodname">pcntl_get_last_error</span> ( <span class="methodparam">void</span> )',
  'pcntl_getpriority' => '<span class="type">int</span> <span class="methodname">pcntl_getpriority</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code><span class="initializer">= getmypid()</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$process_identifier</code><span class="initializer">= PRIO_PROCESS</span></span> ]] )',
  'pcntl_setpriority' => '<span class="type">bool</span> <span class="methodname">pcntl_setpriority</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$priority</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code><span class="initializer">= getmypid()</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$process_identifier</code><span class="initializer">= PRIO_PROCESS</span></span> ]] )',
  'pcntl_signal_dispatch' => '<span class="type">bool</span> <span class="methodname">pcntl_signal_dispatch</span> ( <span class="methodparam">void</span> )',
  'pcntl_signal' => '<span class="type">bool</span> <span class="methodname">pcntl_signal</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$signo</code></span> , <span class="methodparam"><span class="type">callable|int</span> <code class="parameter">$handler</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$restart_syscalls</code><span class="initializer">= true</span></span> ] ) <span class="type">void</span> <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$signo</code></span> )',
  'pcntl_sigprocmask' => '<span class="type">bool</span> <span class="methodname">pcntl_sigprocmask</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$how</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$set</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$oldset</code></span> ] )',
  'pcntl_sigtimedwait' => '<span class="type">int</span> <span class="methodname">pcntl_sigtimedwait</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$set</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$siginfo</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$nanoseconds</code><span class="initializer">= 0</span></span> ]]] )',
  'pcntl_sigwaitinfo' => '<span class="type">int</span> <span class="methodname">pcntl_sigwaitinfo</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$set</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$siginfo</code></span> ] )',
  'pcntl_strerror' => '<span class="type">string</span> <span class="methodname">pcntl_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> )',
  'pcntl_wait' => '<span class="type">int</span> <span class="methodname">pcntl_wait</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$status</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'pcntl_waitpid' => '<span class="type">int</span> <span class="methodname">pcntl_waitpid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$status</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'pcntl_wexitstatus' => '<span class="type">int</span> <span class="methodname">pcntl_wexitstatus</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pcntl_wifexited' => '<span class="type">bool</span> <span class="methodname">pcntl_wifexited</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pcntl_wifsignaled' => '<span class="type">bool</span> <span class="methodname">pcntl_wifsignaled</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pcntl_wifstopped' => '<span class="type">bool</span> <span class="methodname">pcntl_wifstopped</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pcntl_wstopsig' => '<span class="type">int</span> <span class="methodname">pcntl_wstopsig</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pcntl_wtermsig' => '<span class="type">int</span> <span class="methodname">pcntl_wtermsig</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> )',
  'pdf_activate_item' => '<span class="type">bool</span> <span class="methodname">PDF_activate_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$id</code></span> )',
  'pdf_add_annotation' => '',
  'pdf_add_bookmark' => '',
  'pdf_add_launchlink' => '<span class="type">bool</span> <span class="methodname">PDF_add_launchlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'pdf_add_locallink' => '<span class="type">bool</span> <span class="methodname">PDF_add_locallink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lowerleftx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lowerlefty</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$upperrightx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$upperrighty</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'pdf_add_nameddest' => '<span class="type">bool</span> <span class="methodname">PDF_add_nameddest</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_add_note' => '<span class="type">bool</span> <span class="methodname">PDF_add_note</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$icon</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$open</code></span> )',
  'pdf_add_outline' => '',
  'pdf_add_pdflink' => '<span class="type">bool</span> <span class="methodname">PDF_add_pdflink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$bottom_left_x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$bottom_left_y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$up_right_x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$up_right_y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'pdf_add_table_cell' => '<span class="type">int</span> <span class="methodname">PDF_add_table_cell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$column</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_add_textflow' => '<span class="type">int</span> <span class="methodname">PDF_add_textflow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$textflow</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_add_thumbnail' => '<span class="type">bool</span> <span class="methodname">PDF_add_thumbnail</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$image</code></span> )',
  'pdf_add_weblink' => '<span class="type">bool</span> <span class="methodname">PDF_add_weblink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lowerleftx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lowerlefty</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$upperrightx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$upperrighty</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> )',
  'pdf_arc' => '<span class="type">bool</span> <span class="methodname">PDF_arc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$beta</code></span> )',
  'pdf_arcn' => '<span class="type">bool</span> <span class="methodname">PDF_arcn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$beta</code></span> )',
  'pdf_attach_file' => '<span class="type">bool</span> <span class="methodname">PDF_attach_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$description</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$author</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mimetype</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$icon</code></span> )',
  'pdf_begin_document' => '<span class="type">int</span> <span class="methodname">PDF_begin_document</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_begin_font' => '<span class="type">bool</span> <span class="methodname">PDF_begin_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$d</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$e</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$f</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_begin_glyph' => '<span class="type">bool</span> <span class="methodname">PDF_begin_glyph</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$glyphname</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$wx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> )',
  'pdf_begin_item' => '<span class="type">int</span> <span class="methodname">PDF_begin_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$tag</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_begin_layer' => '<span class="type">bool</span> <span class="methodname">PDF_begin_layer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$layer</code></span> )',
  'pdf_begin_page_ext' => '<span class="type">bool</span> <span class="methodname">PDF_begin_page_ext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_begin_page' => '<span class="type">bool</span> <span class="methodname">PDF_begin_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'pdf_begin_pattern' => '<span class="type">int</span> <span class="methodname">PDF_begin_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xstep</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ystep</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$painttype</code></span> )',
  'pdf_begin_template_ext' => '<span class="type">int</span> <span class="methodname">PDF_begin_template_ext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_begin_template' => '<span class="type">int</span> <span class="methodname">PDF_begin_template</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'pdf_circle' => '<span class="type">bool</span> <span class="methodname">PDF_circle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> )',
  'pdf_clip' => '<span class="type">bool</span> <span class="methodname">PDF_clip</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_close' => '<span class="type">bool</span> <span class="methodname">PDF_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_close_image' => '<span class="type">bool</span> <span class="methodname">PDF_close_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$image</code></span> )',
  'pdf_closepath_fill_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_closepath_fill_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_closepath' => '<span class="type">bool</span> <span class="methodname">PDF_closepath</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_closepath_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_closepath_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_close_pdi' => '<span class="type">bool</span> <span class="methodname">PDF_close_pdi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> )',
  'pdf_close_pdi_page' => '<span class="type">bool</span> <span class="methodname">PDF_close_pdi_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> )',
  'pdf_concat' => '<span class="type">bool</span> <span class="methodname">PDF_concat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$d</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$e</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$f</code></span> )',
  'pdf_continue_text' => '<span class="type">bool</span> <span class="methodname">PDF_continue_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'pdf_create_3dview' => '<span class="type">int</span> <span class="methodname">PDF_create_3dview</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_action' => '<span class="type">int</span> <span class="methodname">PDF_create_action</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_annotation' => '<span class="type">bool</span> <span class="methodname">PDF_create_annotation</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_bookmark' => '<span class="type">int</span> <span class="methodname">PDF_create_bookmark</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_fieldgroup' => '<span class="type">bool</span> <span class="methodname">PDF_create_fieldgroup</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_field' => '<span class="type">bool</span> <span class="methodname">PDF_create_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_gstate' => '<span class="type">int</span> <span class="methodname">PDF_create_gstate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_pvf' => '<span class="type">bool</span> <span class="methodname">PDF_create_pvf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_create_textflow' => '<span class="type">int</span> <span class="methodname">PDF_create_textflow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_curveto' => '<span class="type">bool</span> <span class="methodname">PDF_curveto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y3</code></span> )',
  'pdf_define_layer' => '<span class="type">int</span> <span class="methodname">PDF_define_layer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_delete' => '<span class="type">bool</span> <span class="methodname">PDF_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_delete_pvf' => '<span class="type">int</span> <span class="methodname">PDF_delete_pvf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'pdf_delete_table' => '<span class="type">bool</span> <span class="methodname">PDF_delete_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_delete_textflow' => '<span class="type">bool</span> <span class="methodname">PDF_delete_textflow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$textflow</code></span> )',
  'pdf_encoding_set_char' => '<span class="type">bool</span> <span class="methodname">PDF_encoding_set_char</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$slot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$glyphname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uv</code></span> )',
  'pdf_end_document' => '<span class="type">bool</span> <span class="methodname">PDF_end_document</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_end_font' => '<span class="type">bool</span> <span class="methodname">PDF_end_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_end_glyph' => '<span class="type">bool</span> <span class="methodname">PDF_end_glyph</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_end_item' => '<span class="type">bool</span> <span class="methodname">PDF_end_item</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$id</code></span> )',
  'pdf_end_layer' => '<span class="type">bool</span> <span class="methodname">PDF_end_layer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_end_page_ext' => '<span class="type">bool</span> <span class="methodname">PDF_end_page_ext</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_end_page' => '<span class="type">bool</span> <span class="methodname">PDF_end_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_endpath' => '<span class="type">bool</span> <span class="methodname">PDF_endpath</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_end_pattern' => '<span class="type">bool</span> <span class="methodname">PDF_end_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_end_template' => '<span class="type">bool</span> <span class="methodname">PDF_end_template</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_fill' => '<span class="type">bool</span> <span class="methodname">PDF_fill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_fill_imageblock' => '<span class="type">int</span> <span class="methodname">PDF_fill_imageblock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blockname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fill_pdfblock' => '<span class="type">int</span> <span class="methodname">PDF_fill_pdfblock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blockname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$contents</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fill_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_fill_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_fill_textblock' => '<span class="type">int</span> <span class="methodname">PDF_fill_textblock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blockname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_findfont' => '<span class="type">int</span> <span class="methodname">PDF_findfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$embed</code></span> )',
  'pdf_fit_image' => '<span class="type">bool</span> <span class="methodname">PDF_fit_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fit_pdi_page' => '<span class="type">bool</span> <span class="methodname">PDF_fit_pdi_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fit_table' => '<span class="type">string</span> <span class="methodname">PDF_fit_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fit_textflow' => '<span class="type">string</span> <span class="methodname">PDF_fit_textflow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$textflow</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_fit_textline' => '<span class="type">bool</span> <span class="methodname">PDF_fit_textline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_get_apiname' => '<span class="type">string</span> <span class="methodname">PDF_get_apiname</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_get_buffer' => '<span class="type">string</span> <span class="methodname">PDF_get_buffer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_get_errmsg' => '<span class="type">string</span> <span class="methodname">PDF_get_errmsg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_get_errnum' => '<span class="type">int</span> <span class="methodname">PDF_get_errnum</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> )',
  'pdf_get_font' => '',
  'pdf_get_fontname' => '',
  'pdf_get_fontsize' => '',
  'pdf_get_image_height' => '',
  'pdf_get_image_width' => '',
  'pdf_get_majorversion' => '<span class="type">int</span> <span class="methodname">PDF_get_majorversion</span> ( <span class="methodparam">void</span> )',
  'pdf_get_minorversion' => '<span class="type">int</span> <span class="methodname">PDF_get_minorversion</span> ( <span class="methodparam">void</span> )',
  'pdf_get_parameter' => '<span class="type">string</span> <span class="methodname">PDF_get_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$modifier</code></span> )',
  'pdf_get_pdi_parameter' => '<span class="type">string</span> <span class="methodname">PDF_get_pdi_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$reserved</code></span> )',
  'pdf_get_pdi_value' => '<span class="type">float</span> <span class="methodname">PDF_get_pdi_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$reserved</code></span> )',
  'pdf_get_value' => '<span class="type">float</span> <span class="methodname">PDF_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$modifier</code></span> )',
  'pdf_info_font' => '<span class="type">float</span> <span class="methodname">PDF_info_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keyword</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_info_matchbox' => '<span class="type">float</span> <span class="methodname">PDF_info_matchbox</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$boxname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keyword</code></span> )',
  'pdf_info_table' => '<span class="type">float</span> <span class="methodname">PDF_info_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$table</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keyword</code></span> )',
  'pdf_info_textflow' => '<span class="type">float</span> <span class="methodname">PDF_info_textflow</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$textflow</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keyword</code></span> )',
  'pdf_info_textline' => '<span class="type">float</span> <span class="methodname">PDF_info_textline</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$keyword</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_initgraphics' => '<span class="type">bool</span> <span class="methodname">PDF_initgraphics</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_lineto' => '<span class="type">bool</span> <span class="methodname">PDF_lineto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'pdf_load_3ddata' => '<span class="type">int</span> <span class="methodname">PDF_load_3ddata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_load_font' => '<span class="type">int</span> <span class="methodname">PDF_load_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_load_iccprofile' => '<span class="type">int</span> <span class="methodname">PDF_load_iccprofile</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$profilename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_load_image' => '<span class="type">int</span> <span class="methodname">PDF_load_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$imagetype</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_makespotcolor' => '<span class="type">int</span> <span class="methodname">PDF_makespotcolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$spotname</code></span> )',
  'pdf_moveto' => '<span class="type">bool</span> <span class="methodname">PDF_moveto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'pdf_new' => '<span class="type">resource</span> <span class="methodname">PDF_new</span> ( <span class="methodparam">void</span> )',
  'pdf_open_ccitt' => '<span class="type">int</span> <span class="methodname">PDF_open_ccitt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$BitReverse</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$k</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$Blackls1</code></span> )',
  'pdf_open_file' => '<span class="type">bool</span> <span class="methodname">PDF_open_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'pdf_open_gif' => '',
  'pdf_open_image_file' => '<span class="type">int</span> <span class="methodname">PDF_open_image_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$imagetype</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$stringparam</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$intparam</code></span> )',
  'pdf_open_image' => '<span class="type">int</span> <span class="methodname">PDF_open_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$imagetype</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$components</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bpc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$params</code></span> )',
  'pdf_open_jpeg' => '',
  'pdf_open_memory_image' => '<span class="type">int</span> <span class="methodname">PDF_open_memory_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$image</code></span> )',
  'pdf_open_pdi_document' => '<span class="type">int</span> <span class="methodname">PDF_open_pdi_document</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_open_pdi' => '<span class="type">int</span> <span class="methodname">PDF_open_pdi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'pdf_open_pdi_page' => '<span class="type">int</span> <span class="methodname">PDF_open_pdi_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pagenumber</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_open_tiff' => '',
  'pdf_pcos_get_number' => '<span class="type">float</span> <span class="methodname">PDF_pcos_get_number</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'pdf_pcos_get_stream' => '<span class="type">string</span> <span class="methodname">PDF_pcos_get_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'pdf_pcos_get_string' => '<span class="type">string</span> <span class="methodname">PDF_pcos_get_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'pdf_place_image' => '<span class="type">bool</span> <span class="methodname">PDF_place_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$image</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$scale</code></span> )',
  'pdf_place_pdi_page' => '<span class="type">bool</span> <span class="methodname">PDF_place_pdi_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sy</code></span> )',
  'pdf_process_pdi' => '<span class="type">int</span> <span class="methodname">PDF_process_pdi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$doc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_rect' => '<span class="type">bool</span> <span class="methodname">PDF_rect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'pdf_restore' => '<span class="type">bool</span> <span class="methodname">PDF_restore</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_resume_page' => '<span class="type">bool</span> <span class="methodname">PDF_resume_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_rotate' => '<span class="type">bool</span> <span class="methodname">PDF_rotate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$phi</code></span> )',
  'pdf_save' => '<span class="type">bool</span> <span class="methodname">PDF_save</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_scale' => '<span class="type">bool</span> <span class="methodname">PDF_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sy</code></span> )',
  'pdf_set_border_color' => '<span class="type">bool</span> <span class="methodname">PDF_set_border_color</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'pdf_set_border_dash' => '<span class="type">bool</span> <span class="methodname">PDF_set_border_dash</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$black</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$white</code></span> )',
  'pdf_set_border_style' => '<span class="type">bool</span> <span class="methodname">PDF_set_border_style</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$style</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'pdf_set_char_spacing' => '',
  'pdf_setcolor' => '<span class="type">bool</span> <span class="methodname">PDF_setcolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fstype</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$colorspace</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c4</code></span> )',
  'pdf_setdash' => '<span class="type">bool</span> <span class="methodname">PDF_setdash</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$w</code></span> )',
  'pdf_setdashpattern' => '<span class="type">bool</span> <span class="methodname">PDF_setdashpattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_set_duration' => '',
  'pdf_setflat' => '<span class="type">bool</span> <span class="methodname">PDF_setflat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$flatness</code></span> )',
  'pdf_setfont' => '<span class="type">bool</span> <span class="methodname">PDF_setfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$fontsize</code></span> )',
  'pdf_setgray_fill' => '<span class="type">bool</span> <span class="methodname">PDF_setgray_fill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> )',
  'pdf_setgray' => '<span class="type">bool</span> <span class="methodname">PDF_setgray</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> )',
  'pdf_setgray_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_setgray_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> )',
  'pdf_set_gstate' => '<span class="type">bool</span> <span class="methodname">PDF_set_gstate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$gstate</code></span> )',
  'pdf_set_horiz_scaling' => '',
  'pdf_set_info_author' => '',
  'pdf_set_info_creator' => '',
  'pdf_set_info' => '<span class="type">bool</span> <span class="methodname">PDF_set_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'pdf_set_info_keywords' => '',
  'pdf_set_info_subject' => '',
  'pdf_set_info_title' => '',
  'pdf_set_layer_dependency' => '<span class="type">bool</span> <span class="methodname">PDF_set_layer_dependency</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_set_leading' => '',
  'pdf_setlinecap' => '<span class="type">bool</span> <span class="methodname">PDF_setlinecap</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$linecap</code></span> )',
  'pdf_setlinejoin' => '<span class="type">bool</span> <span class="methodname">PDF_setlinejoin</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span> )',
  'pdf_setlinewidth' => '<span class="type">bool</span> <span class="methodname">PDF_setlinewidth</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'pdf_setmatrix' => '<span class="type">bool</span> <span class="methodname">PDF_setmatrix</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$d</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$e</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$f</code></span> )',
  'pdf_setmiterlimit' => '<span class="type">bool</span> <span class="methodname">PDF_setmiterlimit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$miter</code></span> )',
  'pdf_set_parameter' => '<span class="type">bool</span> <span class="methodname">PDF_set_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'pdf_setpolydash' => '',
  'pdf_setrgbcolor_fill' => '<span class="type">bool</span> <span class="methodname">PDF_setrgbcolor_fill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'pdf_setrgbcolor' => '<span class="type">bool</span> <span class="methodname">PDF_setrgbcolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'pdf_setrgbcolor_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_setrgbcolor_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'pdf_set_text_matrix' => '',
  'pdf_set_text_pos' => '<span class="type">bool</span> <span class="methodname">PDF_set_text_pos</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'pdf_set_text_rendering' => '',
  'pdf_set_text_rise' => '',
  'pdf_set_value' => '<span class="type">bool</span> <span class="methodname">PDF_set_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'pdf_set_word_spacing' => '',
  'pdf_shading' => '<span class="type">int</span> <span class="methodname">PDF_shading</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$shtype</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c4</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_shading_pattern' => '<span class="type">int</span> <span class="methodname">PDF_shading_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$shading</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_shfill' => '<span class="type">bool</span> <span class="methodname">PDF_shfill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$shading</code></span> )',
  'pdf_show_boxed' => '<span class="type">int</span> <span class="methodname">PDF_show_boxed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$top</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$feature</code></span> )',
  'pdf_show' => '<span class="type">bool</span> <span class="methodname">PDF_show</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'pdf_show_xy' => '<span class="type">bool</span> <span class="methodname">PDF_show_xy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'pdf_skew' => '<span class="type">bool</span> <span class="methodname">PDF_skew</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$beta</code></span> )',
  'pdf_stringwidth' => '<span class="type">float</span> <span class="methodname">PDF_stringwidth</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$fontsize</code></span> )',
  'pdf_stroke' => '<span class="type">bool</span> <span class="methodname">PDF_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> )',
  'pdf_suspend_page' => '<span class="type">bool</span> <span class="methodname">PDF_suspend_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'pdf_translate' => '<span class="type">bool</span> <span class="methodname">PDF_translate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$tx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ty</code></span> )',
  'pdf_utf16_to_utf8' => '<span class="type">string</span> <span class="methodname">PDF_utf16_to_utf8</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$utf16string</code></span> )',
  'pdf_utf32_to_utf16' => '<span class="type">string</span> <span class="methodname">PDF_utf32_to_utf16</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$utf32string</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ordering</code></span> )',
  'pdf_utf8_to_utf16' => '<span class="type">string</span> <span class="methodname">PDF_utf8_to_utf16</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pdfdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$utf8string</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ordering</code></span> )',
  'pfsockopen' => '<span class="type">resource</span> <span class="methodname">pfsockopen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errno</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$errstr</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer">= ini_get(&quot;default_socket_timeout&quot;)</span></span> ]]]] )',
  'pg_affected_rows' => '<span class="type">int</span> <span class="methodname">pg_affected_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_cancel_query' => '<span class="type">bool</span> <span class="methodname">pg_cancel_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_client_encoding' => '<span class="type">string</span> <span class="methodname">pg_client_encoding</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_close' => '<span class="type">bool</span> <span class="methodname">pg_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_connect' => '<span class="type">resource</span> <span class="methodname">pg_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$connection_string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$connect_type</code></span> ] )',
  'pg_connection_busy' => '<span class="type">bool</span> <span class="methodname">pg_connection_busy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_connection_reset' => '<span class="type">bool</span> <span class="methodname">pg_connection_reset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_connection_status' => '<span class="type">int</span> <span class="methodname">pg_connection_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_convert' => '<span class="type">array</span> <span class="methodname">pg_convert</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$assoc_array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> ] )',
  'pg_copy_from' => '<span class="type">bool</span> <span class="methodname">pg_copy_from</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$rows</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$null_as</code></span> ]] )',
  'pg_copy_to' => '<span class="type">array</span> <span class="methodname">pg_copy_to</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$null_as</code></span> ]] )',
  'pg_dbname' => '<span class="type">string</span> <span class="methodname">pg_dbname</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_delete' => '<span class="type">mixed</span> <span class="methodname">pg_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$assoc_array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PGSQL_DML_EXEC</span></span> ] )',
  'pg_end_copy' => '<span class="type">bool</span> <span class="methodname">pg_end_copy</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_escape_bytea' => '<span class="type">string</span> <span class="methodname">pg_escape_bytea</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_escape_identifier' => '<span class="type">string</span> <span class="methodname">pg_escape_identifier</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_escape_literal' => '<span class="type">string</span> <span class="methodname">pg_escape_literal</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_escape_string' => '<span class="type">string</span> <span class="methodname">pg_escape_string</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_execute' => '<span class="type">resource</span> <span class="methodname">pg_execute</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$stmtname</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'pg_fetch_all_columns' => '<span class="type">array</span> <span class="methodname">pg_fetch_all_columns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$column</code><span class="initializer">= 0</span></span> ] )',
  'pg_fetch_all' => '<span class="type">array</span> <span class="methodname">pg_fetch_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_fetch_array' => '<span class="type">array</span> <span class="methodname">pg_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= PGSQL_BOTH</span></span> ]] )',
  'pg_fetch_assoc' => '<span class="type">array</span> <span class="methodname">pg_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> ] )',
  'pg_fetch_object' => '<span class="type">object</span> <span class="methodname">pg_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= PGSQL_ASSOC</span></span> ]] ) <span class="type">object</span> <span class="methodname">pg_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> ]]] )',
  'pg_fetch_result' => '<span class="type">string</span> <span class="methodname">pg_fetch_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> ) <span class="type">string</span> <span class="methodname">pg_fetch_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'pg_fetch_row' => '<span class="type">array</span> <span class="methodname">pg_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> ] )',
  'pg_field_is_null' => '<span class="type">int</span> <span class="methodname">pg_field_is_null</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> ) <span class="type">int</span> <span class="methodname">pg_field_is_null</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'pg_field_name' => '<span class="type">string</span> <span class="methodname">pg_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'pg_field_num' => '<span class="type">int</span> <span class="methodname">pg_field_num</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$field_name</code></span> )',
  'pg_field_prtlen' => '<span class="type">int</span> <span class="methodname">pg_field_prtlen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field_name_or_number</code></span> ) <span class="type">int</span> <span class="methodname">pg_field_prtlen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field_name_or_number</code></span> )',
  'pg_field_size' => '<span class="type">int</span> <span class="methodname">pg_field_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'pg_field_table' => '<span class="type">mixed</span> <span class="methodname">pg_field_table</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$oid_only</code><span class="initializer">= false</span></span> ] )',
  'pg_field_type' => '<span class="type">string</span> <span class="methodname">pg_field_type</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'pg_field_type_oid' => '<span class="type">int</span> <span class="methodname">pg_field_type_oid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_number</code></span> )',
  'pg_free_result' => '<span class="type">bool</span> <span class="methodname">pg_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_get_notify' => '<span class="type">array</span> <span class="methodname">pg_get_notify</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code></span> ] )',
  'pg_get_pid' => '<span class="type">int</span> <span class="methodname">pg_get_pid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_get_result' => '<span class="type">resource</span> <span class="methodname">pg_get_result</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_host' => '<span class="type">string</span> <span class="methodname">pg_host</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_insert' => '<span class="type">mixed</span> <span class="methodname">pg_insert</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$assoc_array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PGSQL_DML_EXEC</span></span> ] )',
  'pg_last_error' => '<span class="type">string</span> <span class="methodname">pg_last_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_last_notice' => '<span class="type">string</span> <span class="methodname">pg_last_notice</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_last_oid' => '<span class="type">string</span> <span class="methodname">pg_last_oid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_lo_close' => '<span class="type">bool</span> <span class="methodname">pg_lo_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> )',
  'pg_lo_create' => '<span class="type">int</span> <span class="methodname">pg_lo_create</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object_id</code></span> ]] ) <span class="type">int</span> <span class="methodname">pg_lo_create</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object_id</code></span> )',
  'pg_lo_export' => '<span class="type">bool</span> <span class="methodname">pg_lo_export</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">int</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> )',
  'pg_lo_import' => '<span class="type">int</span> <span class="methodname">pg_lo_import</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object_id</code></span> ] ) <span class="type">int</span> <span class="methodname">pg_lo_import</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_lo_open' => '<span class="type">resource</span> <span class="methodname">pg_lo_open</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$oid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'pg_lo_read_all' => '<span class="type">int</span> <span class="methodname">pg_lo_read_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> )',
  'pg_lo_read' => '<span class="type">string</span> <span class="methodname">pg_lo_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code><span class="initializer">= 8192</span></span> ] )',
  'pg_lo_seek' => '<span class="type">bool</span> <span class="methodname">pg_lo_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$whence</code><span class="initializer">= PGSQL_SEEK_CUR</span></span> ] )',
  'pg_lo_tell' => '<span class="type">int</span> <span class="methodname">pg_lo_tell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> )',
  'pg_lo_unlink' => '<span class="type">bool</span> <span class="methodname">pg_lo_unlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$oid</code></span> )',
  'pg_lo_write' => '<span class="type">int</span> <span class="methodname">pg_lo_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$large_object</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> ] )',
  'pg_meta_data' => '<span class="type">array</span> <span class="methodname">pg_meta_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> )',
  'pg_num_fields' => '<span class="type">int</span> <span class="methodname">pg_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_num_rows' => '<span class="type">int</span> <span class="methodname">pg_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_options' => '<span class="type">string</span> <span class="methodname">pg_options</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_parameter_status' => '<span class="type">string</span> <span class="methodname">pg_parameter_status</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$param_name</code></span> )',
  'pg_pconnect' => '<span class="type">resource</span> <span class="methodname">pg_pconnect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$connection_string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$connect_type</code></span> ] )',
  'pg_ping' => '<span class="type">bool</span> <span class="methodname">pg_ping</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_port' => '<span class="type">int</span> <span class="methodname">pg_port</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_prepare' => '<span class="type">resource</span> <span class="methodname">pg_prepare</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$stmtname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'pg_put_line' => '<span class="type">bool</span> <span class="methodname">pg_put_line</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_query' => '<span class="type">resource</span> <span class="methodname">pg_query</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'pg_query_params' => '<span class="type">resource</span> <span class="methodname">pg_query_params</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'pg_result_error_field' => '<span class="type">string</span> <span class="methodname">pg_result_error_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldcode</code></span> )',
  'pg_result_error' => '<span class="type">string</span> <span class="methodname">pg_result_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'pg_result_seek' => '<span class="type">bool</span> <span class="methodname">pg_result_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'pg_result_status' => '<span class="type">mixed</span> <span class="methodname">pg_result_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= PGSQL_STATUS_LONG</span></span> ] )',
  'pg_select' => '<span class="type">mixed</span> <span class="methodname">pg_select</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$assoc_array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PGSQL_DML_EXEC</span></span> ] )',
  'pg_send_execute' => '<span class="type">bool</span> <span class="methodname">pg_send_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$stmtname</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'pg_send_prepare' => '<span class="type">bool</span> <span class="methodname">pg_send_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$stmtname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'pg_send_query' => '<span class="type">bool</span> <span class="methodname">pg_send_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'pg_send_query_params' => '<span class="type">bool</span> <span class="methodname">pg_send_query_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'pg_set_client_encoding' => '<span class="type">int</span> <span class="methodname">pg_set_client_encoding</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'pg_set_error_verbosity' => '<span class="type">int</span> <span class="methodname">pg_set_error_verbosity</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ], <span class="methodparam"><span class="type">int</span> <code class="parameter">$verbosity</code></span> )',
  'pg_trace' => '<span class="type">bool</span> <span class="methodname">pg_trace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code><span class="initializer">= &quot;w&quot;</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ]] )',
  'pg_transaction_status' => '<span class="type">int</span> <span class="methodname">pg_transaction_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> )',
  'pg_tty' => '<span class="type">string</span> <span class="methodname">pg_tty</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_unescape_bytea' => '<span class="type">string</span> <span class="methodname">pg_unescape_bytea</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'pg_untrace' => '<span class="type">bool</span> <span class="methodname">pg_untrace</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'pg_update' => '<span class="type">mixed</span> <span class="methodname">pg_update</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$condition</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= PGSQL_DML_EXEC</span></span> ] )',
  'pg_version' => '<span class="type">array</span> <span class="methodname">pg_version</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$connection</code></span> ] )',
  'php_check_syntax' => '<span class="type">bool</span> <span class="methodname">php_check_syntax</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span> ] )',
  'phpcredits' => '<span class="type">bool</span> <span class="methodname">phpcredits</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code><span class="initializer">= CREDITS_ALL</span></span> ] )',
  'phpinfo' => '<span class="type">bool</span> <span class="methodname">phpinfo</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$what</code><span class="initializer">= INFO_ALL</span></span> ] )',
  'php_ini_loaded_file' => '<span class="type">string</span> <span class="methodname">php_ini_loaded_file</span> ( <span class="methodparam">void</span> )',
  'php_ini_scanned_files' => '<span class="type">string</span> <span class="methodname">php_ini_scanned_files</span> ( <span class="methodparam">void</span> )',
  'php_logo_guid' => '<span class="type">string</span> <span class="methodname">php_logo_guid</span> ( <span class="methodparam">void</span> )',
  'php_sapi_name' => '<span class="type">string</span> <span class="methodname">php_sapi_name</span> ( <span class="methodparam">void</span> )',
  'php_strip_whitespace' => '<span class="type">string</span> <span class="methodname">php_strip_whitespace</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'php_uname' => '<span class="type">string</span> <span class="methodname">php_uname</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code><span class="initializer">= &quot;a&quot;</span></span> ] )',
  'phpversion' => '<span class="type">string</span> <span class="methodname">phpversion</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$extension</code></span> ] )',
  'pi' => '<span class="type">float</span> <span class="methodname">pi</span> ( <span class="methodparam">void</span> )',
  'png2wbmp' => '<span class="type">bool</span> <span class="methodname">png2wbmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pngname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$wbmpname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dest_height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$dest_width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$threshold</code></span> )',
  'popen' => '<span class="type">resource</span> <span class="methodname">popen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> )',
  'pos' => '',
  'posix_access' => '<span class="type">bool</span> <span class="methodname">posix_access</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= POSIX_F_OK</span></span> ] )',
  'posix_ctermid' => '<span class="type">string</span> <span class="methodname">posix_ctermid</span> ( <span class="methodparam">void</span> )',
  'posix_errno' => '',
  'posix_getcwd' => '<span class="type">string</span> <span class="methodname">posix_getcwd</span> ( <span class="methodparam">void</span> )',
  'posix_getegid' => '<span class="type">int</span> <span class="methodname">posix_getegid</span> ( <span class="methodparam">void</span> )',
  'posix_geteuid' => '<span class="type">int</span> <span class="methodname">posix_geteuid</span> ( <span class="methodparam">void</span> )',
  'posix_getgid' => '<span class="type">int</span> <span class="methodname">posix_getgid</span> ( <span class="methodparam">void</span> )',
  'posix_getgrgid' => '<span class="type">array</span> <span class="methodname">posix_getgrgid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code></span> )',
  'posix_getgrnam' => '<span class="type">array</span> <span class="methodname">posix_getgrnam</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'posix_getgroups' => '<span class="type">array</span> <span class="methodname">posix_getgroups</span> ( <span class="methodparam">void</span> )',
  'posix_get_last_error' => '<span class="type">int</span> <span class="methodname">posix_get_last_error</span> ( <span class="methodparam">void</span> )',
  'posix_getlogin' => '<span class="type">string</span> <span class="methodname">posix_getlogin</span> ( <span class="methodparam">void</span> )',
  'posix_getpgid' => '<span class="type">int</span> <span class="methodname">posix_getpgid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code></span> )',
  'posix_getpgrp' => '<span class="type">int</span> <span class="methodname">posix_getpgrp</span> ( <span class="methodparam">void</span> )',
  'posix_getpid' => '<span class="type">int</span> <span class="methodname">posix_getpid</span> ( <span class="methodparam">void</span> )',
  'posix_getppid' => '<span class="type">int</span> <span class="methodname">posix_getppid</span> ( <span class="methodparam">void</span> )',
  'posix_getpwnam' => '<span class="type">array</span> <span class="methodname">posix_getpwnam</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> )',
  'posix_getpwuid' => '<span class="type">array</span> <span class="methodname">posix_getpwuid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> )',
  'posix_getrlimit' => '<span class="type">array</span> <span class="methodname">posix_getrlimit</span> ( <span class="methodparam">void</span> )',
  'posix_getsid' => '<span class="type">int</span> <span class="methodname">posix_getsid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code></span> )',
  'posix_getuid' => '<span class="type">int</span> <span class="methodname">posix_getuid</span> ( <span class="methodparam">void</span> )',
  'posix_initgroups' => '<span class="type">bool</span> <span class="methodname">posix_initgroups</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$base_group_id</code></span> )',
  'posix_isatty' => '<span class="type">bool</span> <span class="methodname">posix_isatty</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fd</code></span> )',
  'posix_kill' => '<span class="type">bool</span> <span class="methodname">posix_kill</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$sig</code></span> )',
  'posix_mkfifo' => '<span class="type">bool</span> <span class="methodname">posix_mkfifo</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'posix_mknod' => '<span class="type">bool</span> <span class="methodname">posix_mknod</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pathname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$major</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$minor</code><span class="initializer">= 0</span></span> ]] )',
  'posix_setegid' => '<span class="type">bool</span> <span class="methodname">posix_setegid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code></span> )',
  'posix_seteuid' => '<span class="type">bool</span> <span class="methodname">posix_seteuid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> )',
  'posix_setgid' => '<span class="type">bool</span> <span class="methodname">posix_setgid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code></span> )',
  'posix_setpgid' => '<span class="type">bool</span> <span class="methodname">posix_setpgid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pgid</code></span> )',
  'posix_setsid' => '<span class="type">int</span> <span class="methodname">posix_setsid</span> ( <span class="methodparam">void</span> )',
  'posix_setuid' => '<span class="type">bool</span> <span class="methodname">posix_setuid</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> )',
  'posix_strerror' => '<span class="type">string</span> <span class="methodname">posix_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> )',
  'posix_times' => '<span class="type">array</span> <span class="methodname">posix_times</span> ( <span class="methodparam">void</span> )',
  'posix_ttyname' => '<span class="type">string</span> <span class="methodname">posix_ttyname</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fd</code></span> )',
  'posix_uname' => '<span class="type">array</span> <span class="methodname">posix_uname</span> ( <span class="methodparam">void</span> )',
  'pow' => '<span class="type">number</span> <span class="methodname">pow</span> ( <span class="methodparam"><span class="type">number</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">number</span> <code class="parameter">$exp</code></span> )',
  'preg_filter' => '<span class="type">mixed</span> <span class="methodname">preg_filter</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$count</code></span> ]] )',
  'preg_grep' => '<span class="type">array</span> <span class="methodname">preg_grep</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$input</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'preg_last_error' => '<span class="type">int</span> <span class="methodname">preg_last_error</span> ( <span class="methodparam">void</span> )',
  'preg_match_all' => '<span class="type">int</span> <span class="methodname">preg_match_all</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$matches</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= <strong><code>PREG_PATTERN_ORDER</code></strong></span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ]]] )',
  'preg_match' => '<span class="type">int</span> <span class="methodname">preg_match</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$matches</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ]]] )',
  'preg_quote' => '<span class="type">string</span> <span class="methodname">preg_quote</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> ] )',
  'preg_replace_callback' => '<span class="type">mixed</span> <span class="methodname">preg_replace_callback</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$count</code></span> ]] ) <span class="type">string</span> <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$matches</code></span> )',
  'preg_replace' => '<span class="type">mixed</span> <span class="methodname">preg_replace</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$count</code></span> ]] )',
  'preg_split' => '<span class="type">array</span> <span class="methodname">preg_split</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ]] )',
  'prev' => '<span class="type">mixed</span> <span class="methodname">prev</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'printer_abort' => '<span class="type">void</span> <span class="methodname">printer_abort</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_close' => '<span class="type">void</span> <span class="methodname">printer_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_create_brush' => '<span class="type">resource</span> <span class="methodname">printer_create_brush</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$style</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$color</code></span> )',
  'printer_create_dc' => '<span class="type">void</span> <span class="methodname">printer_create_dc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_create_font' => '<span class="type">resource</span> <span class="methodname">printer_create_font</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$face</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$font_weight</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$italic</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$underline</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$strikeout</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$orientation</code></span> )',
  'printer_create_pen' => '<span class="type">resource</span> <span class="methodname">printer_create_pen</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$style</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$color</code></span> )',
  'printer_delete_brush' => '<span class="type">void</span> <span class="methodname">printer_delete_brush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brush_handle</code></span> )',
  'printer_delete_dc' => '<span class="type">bool</span> <span class="methodname">printer_delete_dc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_delete_font' => '<span class="type">void</span> <span class="methodname">printer_delete_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_handle</code></span> )',
  'printer_delete_pen' => '<span class="type">void</span> <span class="methodname">printer_delete_pen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pen_handle</code></span> )',
  'printer_draw_bmp' => '<span class="type">bool</span> <span class="methodname">printer_draw_bmp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> ], <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'printer_draw_chord' => '<span class="type">void</span> <span class="methodname">printer_draw_chord</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad_x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad_y1</code></span> )',
  'printer_draw_elipse' => '<span class="type">void</span> <span class="methodname">printer_draw_elipse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_y</code></span> )',
  'printer_draw_line' => '<span class="type">void</span> <span class="methodname">printer_draw_line</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$from_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$from_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$to_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$to_y</code></span> )',
  'printer_draw_pie' => '<span class="type">void</span> <span class="methodname">printer_draw_pie</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_x1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rec_y1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad1_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad1_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad2_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rad2_y</code></span> )',
  'printer_draw_rectangle' => '<span class="type">void</span> <span class="methodname">printer_draw_rectangle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_y</code></span> )',
  'printer_draw_roundrect' => '<span class="type">void</span> <span class="methodname">printer_draw_roundrect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ul_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lr_y</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'printer_draw_text' => '<span class="type">void</span> <span class="methodname">printer_draw_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$y</code></span> )',
  'printer_end_doc' => '<span class="type">bool</span> <span class="methodname">printer_end_doc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_end_page' => '<span class="type">bool</span> <span class="methodname">printer_end_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_get_option' => '<span class="type">mixed</span> <span class="methodname">printer_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span> )',
  'printer_list' => '<span class="type">array</span> <span class="methodname">printer_list</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$enumtype</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> ]] )',
  'printer_logical_fontheight' => '<span class="type">int</span> <span class="methodname">printer_logical_fontheight</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> )',
  'printer_open' => '<span class="type">resource</span> <span class="methodname">printer_open</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$printername</code></span> ] )',
  'printer_select_brush' => '<span class="type">void</span> <span class="methodname">printer_select_brush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brush_handle</code></span> )',
  'printer_select_font' => '<span class="type">void</span> <span class="methodname">printer_select_font</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$font_handle</code></span> )',
  'printer_select_pen' => '<span class="type">void</span> <span class="methodname">printer_select_pen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pen_handle</code></span> )',
  'printer_set_option' => '<span class="type">bool</span> <span class="methodname">printer_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'printer_start_doc' => '<span class="type">bool</span> <span class="methodname">printer_start_doc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$document</code></span> ] )',
  'printer_start_page' => '<span class="type">bool</span> <span class="methodname">printer_start_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> )',
  'printer_write' => '<span class="type">bool</span> <span class="methodname">printer_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$printer_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'printf' => '<span class="type">int</span> <span class="methodname">printf</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'print' => '<span class="type">int</span> <span class="methodname">print</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$arg</code></span> )',
  'print_r' => '<span class="type">mixed</span> <span class="methodname">print_r</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$expression</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return</code><span class="initializer">= false</span></span> ] )',
  'proc_close' => '<span class="type">int</span> <span class="methodname">proc_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$process</code></span> )',
  'proc_get_status' => '<span class="type">array</span> <span class="methodname">proc_get_status</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$process</code></span> )',
  'proc_nice' => '<span class="type">bool</span> <span class="methodname">proc_nice</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$increment</code></span> )',
  'proc_open' => '<span class="type">resource</span> <span class="methodname">proc_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cmd</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$descriptorspec</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$pipes</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$cwd</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$env</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$other_options</code></span> ]]] )',
  'proc_terminate' => '<span class="type">bool</span> <span class="methodname">proc_terminate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$process</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$signal</code><span class="initializer">= 15</span></span> ] )',
  'property_exists' => '<span class="type">bool</span> <span class="methodname">property_exists</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$class</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$property</code></span> )',
  'ps_add_bookmark' => '<span class="type">int</span> <span class="methodname">ps_add_bookmark</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$parent</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$open</code><span class="initializer">= 0</span></span> ]] )',
  'ps_add_launchlink' => '<span class="type">bool</span> <span class="methodname">ps_add_launchlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ps_add_locallink' => '<span class="type">bool</span> <span class="methodname">ps_add_locallink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'ps_add_note' => '<span class="type">bool</span> <span class="methodname">ps_add_note</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$icon</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$open</code></span> )',
  'ps_add_pdflink' => '<span class="type">bool</span> <span class="methodname">ps_add_pdflink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$page</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'ps_add_weblink' => '<span class="type">bool</span> <span class="methodname">ps_add_weblink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$llx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lly</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$urx</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ury</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> )',
  'ps_arc' => '<span class="type">bool</span> <span class="methodname">ps_arc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$radius</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$beta</code></span> )',
  'ps_arcn' => '<span class="type">bool</span> <span class="methodname">ps_arcn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$radius</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$alpha</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$beta</code></span> )',
  'ps_begin_page' => '<span class="type">bool</span> <span class="methodname">ps_begin_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'ps_begin_pattern' => '<span class="type">int</span> <span class="methodname">ps_begin_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xstep</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ystep</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$painttype</code></span> )',
  'ps_begin_template' => '<span class="type">int</span> <span class="methodname">ps_begin_template</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'ps_circle' => '<span class="type">bool</span> <span class="methodname">ps_circle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$radius</code></span> )',
  'ps_clip' => '<span class="type">bool</span> <span class="methodname">ps_clip</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_close' => '<span class="type">bool</span> <span class="methodname">ps_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_close_image' => '<span class="type">void</span> <span class="methodname">ps_close_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$imageid</code></span> )',
  'ps_closepath' => '<span class="type">bool</span> <span class="methodname">ps_closepath</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_closepath_stroke' => '<span class="type">bool</span> <span class="methodname">ps_closepath_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_continue_text' => '<span class="type">bool</span> <span class="methodname">ps_continue_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ps_curveto' => '<span class="type">bool</span> <span class="methodname">ps_curveto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y3</code></span> )',
  'ps_delete' => '<span class="type">bool</span> <span class="methodname">ps_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_end_page' => '<span class="type">bool</span> <span class="methodname">ps_end_page</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_end_pattern' => '<span class="type">bool</span> <span class="methodname">ps_end_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_end_template' => '<span class="type">bool</span> <span class="methodname">ps_end_template</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_fill' => '<span class="type">bool</span> <span class="methodname">ps_fill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_fill_stroke' => '<span class="type">bool</span> <span class="methodname">ps_fill_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_findfont' => '<span class="type">int</span> <span class="methodname">ps_findfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$embed</code><span class="initializer">= false</span></span> ] )',
  'ps_get_buffer' => '<span class="type">string</span> <span class="methodname">ps_get_buffer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_get_parameter' => '<span class="type">string</span> <span class="methodname">ps_get_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$modifier</code></span> ] )',
  'ps_get_value' => '<span class="type">float</span> <span class="methodname">ps_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$modifier</code></span> ] )',
  'ps_hyphenate' => '<span class="type">array</span> <span class="methodname">ps_hyphenate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ps_include_file' => '<span class="type">bool</span> <span class="methodname">ps_include_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'ps_lineto' => '<span class="type">bool</span> <span class="methodname">ps_lineto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ps_makespotcolor' => '<span class="type">int</span> <span class="methodname">ps_makespotcolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$reserved</code><span class="initializer">= 0</span></span> ] )',
  'ps_moveto' => '<span class="type">bool</span> <span class="methodname">ps_moveto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ps_new' => '<span class="type">resource</span> <span class="methodname">ps_new</span> ( <span class="methodparam">void</span> )',
  'ps_open_file' => '<span class="type">bool</span> <span class="methodname">ps_open_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'ps_open_image_file' => '<span class="type">int</span> <span class="methodname">ps_open_image_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$stringparam</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$intparam</code><span class="initializer">= 0</span></span> ]] )',
  'ps_open_image' => '<span class="type">int</span> <span class="methodname">ps_open_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$lenght</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$components</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bpc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$params</code></span> )',
  'ps_open_memory_image' => '<span class="type">int</span> <span class="methodname">ps_open_memory_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$gd</code></span> )',
  'pspell_add_to_personal' => '<span class="type">bool</span> <span class="methodname">pspell_add_to_personal</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'pspell_add_to_session' => '<span class="type">bool</span> <span class="methodname">pspell_add_to_session</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'pspell_check' => '<span class="type">bool</span> <span class="methodname">pspell_check</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'pspell_clear_session' => '<span class="type">bool</span> <span class="methodname">pspell_clear_session</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> )',
  'pspell_config_create' => '<span class="type">int</span> <span class="methodname">pspell_config_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$spelling</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$jargon</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> ]]] )',
  'pspell_config_data_dir' => '<span class="type">bool</span> <span class="methodname">pspell_config_data_dir</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$conf</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'pspell_config_dict_dir' => '<span class="type">bool</span> <span class="methodname">pspell_config_dict_dir</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$conf</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> )',
  'pspell_config_ignore' => '<span class="type">bool</span> <span class="methodname">pspell_config_ignore</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'pspell_config_mode' => '<span class="type">bool</span> <span class="methodname">pspell_config_mode</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'pspell_config_personal' => '<span class="type">bool</span> <span class="methodname">pspell_config_personal</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'pspell_config_repl' => '<span class="type">bool</span> <span class="methodname">pspell_config_repl</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'pspell_config_runtogether' => '<span class="type">bool</span> <span class="methodname">pspell_config_runtogether</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span> )',
  'pspell_config_save_repl' => '<span class="type">bool</span> <span class="methodname">pspell_config_save_repl</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flag</code></span> )',
  'pspell_new_config' => '<span class="type">int</span> <span class="methodname">pspell_new_config</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$config</code></span> )',
  'pspell_new' => '<span class="type">int</span> <span class="methodname">pspell_new</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$spelling</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$jargon</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ]]]] )',
  'pspell_new_personal' => '<span class="type">int</span> <span class="methodname">pspell_new_personal</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$personal</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$language</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$spelling</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$jargon</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ]]]] )',
  'pspell_save_wordlist' => '<span class="type">bool</span> <span class="methodname">pspell_save_wordlist</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> )',
  'pspell_store_replacement' => '<span class="type">bool</span> <span class="methodname">pspell_store_replacement</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$misspelled</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$correct</code></span> )',
  'pspell_suggest' => '<span class="type">array</span> <span class="methodname">pspell_suggest</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$dictionary_link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$word</code></span> )',
  'ps_place_image' => '<span class="type">bool</span> <span class="methodname">ps_place_image</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$imageid</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$scale</code></span> )',
  'ps_rect' => '<span class="type">bool</span> <span class="methodname">ps_rect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> )',
  'ps_restore' => '<span class="type">bool</span> <span class="methodname">ps_restore</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_rotate' => '<span class="type">bool</span> <span class="methodname">ps_rotate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$rot</code></span> )',
  'ps_save' => '<span class="type">bool</span> <span class="methodname">ps_save</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_scale' => '<span class="type">bool</span> <span class="methodname">ps_scale</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ps_set_border_color' => '<span class="type">bool</span> <span class="methodname">ps_set_border_color</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$red</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$green</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$blue</code></span> )',
  'ps_set_border_dash' => '<span class="type">bool</span> <span class="methodname">ps_set_border_dash</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$black</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$white</code></span> )',
  'ps_set_border_style' => '<span class="type">bool</span> <span class="methodname">ps_set_border_style</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$style</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'ps_setcolor' => '<span class="type">bool</span> <span class="methodname">ps_setcolor</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$colorspace</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c4</code></span> )',
  'ps_setdash' => '<span class="type">bool</span> <span class="methodname">ps_setdash</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$on</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$off</code></span> )',
  'ps_setflat' => '<span class="type">bool</span> <span class="methodname">ps_setflat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'ps_setfont' => '<span class="type">bool</span> <span class="methodname">ps_setfont</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> )',
  'ps_setgray' => '<span class="type">bool</span> <span class="methodname">ps_setgray</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$gray</code></span> )',
  'ps_set_info' => '<span class="type">bool</span> <span class="methodname">ps_set_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$p</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val</code></span> )',
  'ps_setlinecap' => '<span class="type">bool</span> <span class="methodname">ps_setlinecap</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'ps_setlinejoin' => '<span class="type">bool</span> <span class="methodname">ps_setlinejoin</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'ps_setlinewidth' => '<span class="type">bool</span> <span class="methodname">ps_setlinewidth</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'ps_setmiterlimit' => '<span class="type">bool</span> <span class="methodname">ps_setmiterlimit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'ps_setoverprintmode' => '<span class="type">bool</span> <span class="methodname">ps_setoverprintmode</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ps_set_parameter' => '<span class="type">bool</span> <span class="methodname">ps_set_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'ps_setpolydash' => '<span class="type">bool</span> <span class="methodname">ps_setpolydash</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$arr</code></span> )',
  'ps_set_text_pos' => '<span class="type">bool</span> <span class="methodname">ps_set_text_pos</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ps_set_value' => '<span class="type">bool</span> <span class="methodname">ps_set_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'ps_shading' => '<span class="type">int</span> <span class="methodname">ps_shading</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y0</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$c4</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'ps_shading_pattern' => '<span class="type">int</span> <span class="methodname">ps_shading_pattern</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$shadingid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$optlist</code></span> )',
  'ps_shfill' => '<span class="type">bool</span> <span class="methodname">ps_shfill</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$shadingid</code></span> )',
  'ps_show2' => '<span class="type">bool</span> <span class="methodname">ps_show2</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'ps_show_boxed' => '<span class="type">int</span> <span class="methodname">ps_show_boxed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$bottom</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$hmode</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$feature</code></span> ] )',
  'ps_show' => '<span class="type">bool</span> <span class="methodname">ps_show</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> )',
  'ps_show_xy2' => '<span class="type">bool</span> <span class="methodname">ps_show_xy2</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xcoor</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ycoor</code></span> )',
  'ps_show_xy' => '<span class="type">bool</span> <span class="methodname">ps_show_xy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'ps_string_geometry' => '<span class="type">array</span> <span class="methodname">ps_string_geometry</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code><span class="initializer">= 0.0</span></span> ]] )',
  'ps_stringwidth' => '<span class="type">float</span> <span class="methodname">ps_stringwidth</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$text</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code><span class="initializer">= 0.0</span></span> ]] )',
  'ps_stroke' => '<span class="type">bool</span> <span class="methodname">ps_stroke</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> )',
  'ps_symbol' => '<span class="type">bool</span> <span class="methodname">ps_symbol</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ord</code></span> )',
  'ps_symbol_name' => '<span class="type">string</span> <span class="methodname">ps_symbol_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ord</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code><span class="initializer">= 0</span></span> ] )',
  'ps_symbol_width' => '<span class="type">float</span> <span class="methodname">ps_symbol_width</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$ord</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code><span class="initializer">= 0.0</span></span> ]] )',
  'ps_translate' => '<span class="type">bool</span> <span class="methodname">ps_translate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$psdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'putenv' => '<span class="type">bool</span> <span class="methodname">putenv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$setting</code></span> )',
  'px_close' => '<span class="type">bool</span> <span class="methodname">px_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> )',
  'px_create_fp' => '<span class="type">bool</span> <span class="methodname">px_create_fp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$fielddesc</code></span> )',
  'px_date2string' => '<span class="type">string</span> <span class="methodname">px_date2string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> )',
  'px_delete' => '<span class="type">bool</span> <span class="methodname">px_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> )',
  'px_delete_record' => '<span class="type">bool</span> <span class="methodname">px_delete_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> )',
  'px_get_field' => '<span class="type">array</span> <span class="methodname">px_get_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldno</code></span> )',
  'px_get_info' => '<span class="type">array</span> <span class="methodname">px_get_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> )',
  'px_get_parameter' => '<span class="type">string</span> <span class="methodname">px_get_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'px_get_record' => '<span class="type">array</span> <span class="methodname">px_get_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ] )',
  'px_get_schema' => '<span class="type">array</span> <span class="methodname">px_get_schema</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ] )',
  'px_get_value' => '<span class="type">float</span> <span class="methodname">px_get_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'px_insert_record' => '<span class="type">int</span> <span class="methodname">px_insert_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> )',
  'px_new' => '<span class="type">resource</span> <span class="methodname">px_new</span> ( <span class="methodparam">void</span> )',
  'px_numfields' => '<span class="type">int</span> <span class="methodname">px_numfields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> )',
  'px_numrecords' => '<span class="type">int</span> <span class="methodname">px_numrecords</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> )',
  'px_open_fp' => '<span class="type">bool</span> <span class="methodname">px_open_fp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$file</code></span> )',
  'px_put_record' => '<span class="type">bool</span> <span class="methodname">px_put_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$record</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$recpos</code><span class="initializer">= -1</span></span> ] )',
  'px_retrieve_record' => '<span class="type">array</span> <span class="methodname">px_retrieve_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0</span></span> ] )',
  'px_set_blob_file' => '<span class="type">bool</span> <span class="methodname">px_set_blob_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'px_set_parameter' => '<span class="type">bool</span> <span class="methodname">px_set_parameter</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'px_set_tablename' => '<span class="type">void</span> <span class="methodname">px_set_tablename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'px_set_targetencoding' => '<span class="type">bool</span> <span class="methodname">px_set_targetencoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'px_set_value' => '<span class="type">bool</span> <span class="methodname">px_set_value</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> )',
  'px_timestamp2string' => '<span class="type">string</span> <span class="methodname">px_timestamp2string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$value</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> )',
  'px_update_record' => '<span class="type">bool</span> <span class="methodname">px_update_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pxdoc</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$num</code></span> )',
  'qdom_error' => '<span class="type">string</span> <span class="methodname">qdom_error</span> ( <span class="methodparam">void</span> )',
  'qdom_tree' => '<span class="type">QDomDocument</span> <span class="methodname">qdom_tree</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$doc</code></span> )',
  'quoted_printable_decode' => '<span class="type">string</span> <span class="methodname">quoted_printable_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'quoted_printable_encode' => '<span class="type">string</span> <span class="methodname">quoted_printable_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'quotemeta' => '<span class="type">string</span> <span class="methodname">quotemeta</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'rad2deg' => '<span class="type">float</span> <span class="methodname">rad2deg</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$number</code></span> )',
  'radius_acct_open' => '<span class="type">resource</span> <span class="methodname">radius_acct_open</span> ( <span class="methodparam">void</span> )',
  'radius_add_server' => '<span class="type">bool</span> <span class="methodname">radius_add_server</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$secret</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_tries</code></span> )',
  'radius_auth_open' => '<span class="type">resource</span> <span class="methodname">radius_auth_open</span> ( <span class="methodparam">void</span> )',
  'radius_close' => '<span class="type">bool</span> <span class="methodname">radius_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'radius_config' => '<span class="type">bool</span> <span class="methodname">radius_config</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'radius_create_request' => '<span class="type">bool</span> <span class="methodname">radius_create_request</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'radius_cvt_addr' => '<span class="type">string</span> <span class="methodname">radius_cvt_addr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_cvt_int' => '<span class="type">int</span> <span class="methodname">radius_cvt_int</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_cvt_string' => '<span class="type">string</span> <span class="methodname">radius_cvt_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_demangle' => '<span class="type">string</span> <span class="methodname">radius_demangle</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mangled</code></span> )',
  'radius_demangle_mppe_key' => '<span class="type">string</span> <span class="methodname">radius_demangle_mppe_key</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mangled</code></span> )',
  'radius_get_attr' => '<span class="type">mixed</span> <span class="methodname">radius_get_attr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'radius_get_tagged_attr_data' => '<span class="type">string</span> <span class="methodname">radius_get_tagged_attr_data</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_get_tagged_attr_tag' => '<span class="type">integer</span> <span class="methodname">radius_get_tagged_attr_tag</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_get_vendor_attr' => '<span class="type">array</span> <span class="methodname">radius_get_vendor_attr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_put_addr' => '<span class="type">bool</span> <span class="methodname">radius_put_addr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$addr</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_attr' => '<span class="type">bool</span> <span class="methodname">radius_put_attr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_int' => '<span class="type">bool</span> <span class="methodname">radius_put_int</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_string' => '<span class="type">bool</span> <span class="methodname">radius_put_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_vendor_addr' => '<span class="type">bool</span> <span class="methodname">radius_put_vendor_addr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$vendor</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$addr</code></span> )',
  'radius_put_vendor_attr' => '<span class="type">bool</span> <span class="methodname">radius_put_vendor_attr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$vendor</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_vendor_int' => '<span class="type">bool</span> <span class="methodname">radius_put_vendor_int</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$vendor</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_put_vendor_string' => '<span class="type">bool</span> <span class="methodname">radius_put_vendor_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$vendor</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tag</code></span> ]] )',
  'radius_request_authenticator' => '<span class="type">string</span> <span class="methodname">radius_request_authenticator</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'radius_salt_encrypt_attr' => '<span class="type">string</span> <span class="methodname">radius_salt_encrypt_attr</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'radius_send_request' => '<span class="type">int</span> <span class="methodname">radius_send_request</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'radius_server_secret' => '<span class="type">string</span> <span class="methodname">radius_server_secret</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'radius_strerror' => '<span class="type">string</span> <span class="methodname">radius_strerror</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$radius_handle</code></span> )',
  'rand' => '<span class="type">int</span> <span class="methodname">rand</span> ( <span class="methodparam">void</span> ) <span class="type">int</span> <span class="methodname">rand</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$min</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$max</code></span> )',
  'range' => '<span class="type">array</span> <span class="methodname">range</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$end</code></span> [, <span class="methodparam"><span class="type">number</span> <code class="parameter">$step</code><span class="initializer">= 1</span></span> ] )',
  'rar_wrapper_cache_stats' => '<span class="type">string</span> <span class="methodname">rar_wrapper_cache_stats</span> ( <span class="methodparam">void</span> )',
  'rawurldecode' => '<span class="type">string</span> <span class="methodname">rawurldecode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'rawurlencode' => '<span class="type">string</span> <span class="methodname">rawurlencode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'readdir' => '<span class="type">string</span> <span class="methodname">readdir</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span> ] )',
  'read_exif_data' => '',
  'readfile' => '<span class="type">int</span> <span class="methodname">readfile</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$use_include_path</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]] )',
  'readgzfile' => '<span class="type">int</span> <span class="methodname">readgzfile</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$use_include_path</code><span class="initializer">= 0</span></span> ] )',
  'readline_add_history' => '<span class="type">bool</span> <span class="methodname">readline_add_history</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$line</code></span> )',
  'readline_callback_handler_install' => '<span class="type">bool</span> <span class="methodname">readline_callback_handler_install</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prompt</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> )',
  'readline_callback_handler_remove' => '<span class="type">bool</span> <span class="methodname">readline_callback_handler_remove</span> ( <span class="methodparam">void</span> )',
  'readline_callback_read_char' => '<span class="type">void</span> <span class="methodname">readline_callback_read_char</span> ( <span class="methodparam">void</span> )',
  'readline_clear_history' => '<span class="type">bool</span> <span class="methodname">readline_clear_history</span> ( <span class="methodparam">void</span> )',
  'readline_completion_function' => '<span class="type">bool</span> <span class="methodname">readline_completion_function</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> )',
  'readline' => '<span class="type">string</span> <span class="methodname">readline</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prompt</code></span> ] )',
  'readline_info' => '<span class="type">mixed</span> <span class="methodname">readline_info</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$varname</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$newvalue</code></span> ]] )',
  'readline_list_history' => '<span class="type">array</span> <span class="methodname">readline_list_history</span> ( <span class="methodparam">void</span> )',
  'readline_on_new_line' => '<span class="type">void</span> <span class="methodname">readline_on_new_line</span> ( <span class="methodparam">void</span> )',
  'readline_read_history' => '<span class="type">bool</span> <span class="methodname">readline_read_history</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'readline_redisplay' => '<span class="type">void</span> <span class="methodname">readline_redisplay</span> ( <span class="methodparam">void</span> )',
  'readline_write_history' => '<span class="type">bool</span> <span class="methodname">readline_write_history</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> ] )',
  'readlink' => '<span class="type">string</span> <span class="methodname">readlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'realpath_cache_get' => '<span class="type">array</span> <span class="methodname">realpath_cache_get</span> ( <span class="methodparam">void</span> )',
  'realpath_cache_size' => '<span class="type">int</span> <span class="methodname">realpath_cache_size</span> ( <span class="methodparam">void</span> )',
  'realpath' => '<span class="type">string</span> <span class="methodname">realpath</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'recode_file' => '<span class="type">bool</span> <span class="methodname">recode_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$request</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$input</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$output</code></span> )',
  'recode' => '',
  'recode_string' => '<span class="type">string</span> <span class="methodname">recode_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$request</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'register_shutdown_function' => '<span class="type">void</span> <span class="methodname">register_shutdown_function</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$parameter</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'register_tick_function' => '<span class="type">bool</span> <span class="methodname">register_tick_function</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$function</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$arg</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'rename_function' => '<span class="type">bool</span> <span class="methodname">rename_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$original_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_name</code></span> )',
  'rename' => '<span class="type">bool</span> <span class="methodname">rename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$oldname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newname</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'require' => '',
  'require_once' => '',
  'reset' => '<span class="type">mixed</span> <span class="methodname">reset</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'restore_error_handler' => '<span class="type">bool</span> <span class="methodname">restore_error_handler</span> ( <span class="methodparam">void</span> )',
  'restore_exception_handler' => '<span class="type">bool</span> <span class="methodname">restore_exception_handler</span> ( <span class="methodparam">void</span> )',
  'restore_include_path' => '<span class="type">void</span> <span class="methodname">restore_include_path</span> ( <span class="methodparam">void</span> )',
  'return' => '',
  'rewinddir' => '<span class="type">void</span> <span class="methodname">rewinddir</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dir_handle</code></span> ] )',
  'rewind' => '<span class="type">bool</span> <span class="methodname">rewind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> )',
  'rmdir' => '<span class="type">bool</span> <span class="methodname">rmdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirname</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'round' => '<span class="type">float</span> <span class="methodname">round</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$val</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$precision</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= PHP_ROUND_HALF_UP</span></span> ]] )',
  'rpm_close' => '<span class="type">bool</span> <span class="methodname">rpm_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$rpmr</code></span> )',
  'rpm_get_tag' => '<span class="type">mixed</span> <span class="methodname">rpm_get_tag</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$rpmr</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tagnum</code></span> )',
  'rpm_is_valid' => '<span class="type">bool</span> <span class="methodname">rpm_is_valid</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'rpm_open' => '<span class="type">resource</span> <span class="methodname">rpm_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'rpm_version' => '<span class="type">string</span> <span class="methodname">rpm_version</span> ( <span class="methodparam">void</span> )',
  'rrd_create' => '<span class="type">bool</span> <span class="methodname">rrd_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rrd_error' => '<span class="type">string</span> <span class="methodname">rrd_error</span> ( <span class="methodparam">void</span> )',
  'rrd_fetch' => '<span class="type">array</span> <span class="methodname">rrd_fetch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rrd_first' => '<span class="type">int</span> <span class="methodname">rrd_first</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$raaindex</code><span class="initializer">= 0</span></span> ] )',
  'rrd_graph' => '<span class="type">array</span> <span class="methodname">rrd_graph</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rrd_info' => '<span class="type">array</span> <span class="methodname">rrd_info</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'rrd_last' => '<span class="type">int</span> <span class="methodname">rrd_last</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'rrd_lastupdate' => '<span class="type">array</span> <span class="methodname">rrd_lastupdate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'rrd_restore' => '<span class="type">bool</span> <span class="methodname">rrd_restore</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$xml_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$rrd_file</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'rrd_tune' => '<span class="type">bool</span> <span class="methodname">rrd_tune</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rrd_update' => '<span class="type">bool</span> <span class="methodname">rrd_update</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rrd_version' => '<span class="type">string</span> <span class="methodname">rrd_version</span> ( <span class="methodparam">void</span> )',
  'rrd_xport' => '<span class="type">array</span> <span class="methodname">rrd_xport</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'rsort' => '<span class="type">bool</span> <span class="methodname">rsort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'rtrim' => '<span class="type">string</span> <span class="methodname">rtrim</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charlist</code></span> ] )',
  'runkit_class_adopt' => '<span class="type">bool</span> <span class="methodname">runkit_class_adopt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$parentname</code></span> )',
  'runkit_class_emancipate' => '<span class="type">bool</span> <span class="methodname">runkit_class_emancipate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> )',
  'runkit_constant_add' => '<span class="type">bool</span> <span class="methodname">runkit_constant_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$constname</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'runkit_constant_redefine' => '<span class="type">bool</span> <span class="methodname">runkit_constant_redefine</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$constname</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$newvalue</code></span> )',
  'runkit_constant_remove' => '<span class="type">bool</span> <span class="methodname">runkit_constant_remove</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$constname</code></span> )',
  'runkit_function_add' => '<span class="type">bool</span> <span class="methodname">runkit_function_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$arglist</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> )',
  'runkit_function_copy' => '<span class="type">bool</span> <span class="methodname">runkit_function_copy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$targetname</code></span> )',
  'runkit_function_redefine' => '<span class="type">bool</span> <span class="methodname">runkit_function_redefine</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$arglist</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> )',
  'runkit_function_remove' => '<span class="type">bool</span> <span class="methodname">runkit_function_remove</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> )',
  'runkit_function_rename' => '<span class="type">bool</span> <span class="methodname">runkit_function_rename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newname</code></span> )',
  'runkit_import' => '<span class="type">bool</span> <span class="methodname">runkit_import</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= RUNKIT_IMPORT_CLASS_METHODS</span></span> ] )',
  'runkit_lint_file' => '<span class="type">bool</span> <span class="methodname">runkit_lint_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'runkit_lint' => '<span class="type">bool</span> <span class="methodname">runkit_lint</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> )',
  'runkit_method_add' => '<span class="type">bool</span> <span class="methodname">runkit_method_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= RUNKIT_ACC_PUBLIC</span></span> ] )',
  'runkit_method_copy' => '<span class="type">bool</span> <span class="methodname">runkit_method_copy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dClass</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dMethod</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sClass</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$sMethod</code></span> ] )',
  'runkit_method_redefine' => '<span class="type">bool</span> <span class="methodname">runkit_method_redefine</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$args</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$code</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= RUNKIT_ACC_PUBLIC</span></span> ] )',
  'runkit_method_remove' => '<span class="type">bool</span> <span class="methodname">runkit_method_remove</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> )',
  'runkit_method_rename' => '<span class="type">bool</span> <span class="methodname">runkit_method_rename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$methodname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newname</code></span> )',
  'runkit_return_value_used' => '<span class="type">bool</span> <span class="methodname">runkit_return_value_used</span> ( <span class="methodparam">void</span> )',
  'runkit_sandbox_output_handler' => '<span class="type">mixed</span> <span class="methodname">runkit_sandbox_output_handler</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$sandbox</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$callback</code></span> ] )',
  'runkit_superglobals' => '<span class="type">array</span> <span class="methodname">runkit_superglobals</span> ( <span class="methodparam">void</span> )',
  'scandir' => '<span class="type">array</span> <span class="methodname">scandir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$directory</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sorting_order</code><span class="initializer">= SCANDIR_SORT_ASCENDING</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]] )',
  'sem_acquire' => '<span class="type">bool</span> <span class="methodname">sem_acquire</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sem_identifier</code></span> )',
  'sem_get' => '<span class="type">resource</span> <span class="methodname">sem_get</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$max_acquire</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$perm</code><span class="initializer">= 0666</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$auto_release</code><span class="initializer">= 1</span></span> ]]] )',
  'sem_release' => '<span class="type">bool</span> <span class="methodname">sem_release</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sem_identifier</code></span> )',
  'sem_remove' => '<span class="type">bool</span> <span class="methodname">sem_remove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sem_identifier</code></span> )',
  'serialize' => '<span class="type">string</span> <span class="methodname">serialize</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'session_cache_expire' => '<span class="type">int</span> <span class="methodname">session_cache_expire</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_cache_expire</code></span> ] )',
  'session_cache_limiter' => '<span class="type">string</span> <span class="methodname">session_cache_limiter</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$cache_limiter</code></span> ] )',
  'session_commit' => '',
  'session_decode' => '<span class="type">bool</span> <span class="methodname">session_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'session_destroy' => '<span class="type">bool</span> <span class="methodname">session_destroy</span> ( <span class="methodparam">void</span> )',
  'session_encode' => '<span class="type">string</span> <span class="methodname">session_encode</span> ( <span class="methodparam">void</span> )',
  'session_get_cookie_params' => '<span class="type">array</span> <span class="methodname">session_get_cookie_params</span> ( <span class="methodparam">void</span> )',
  'session_id' => '<span class="type">string</span> <span class="methodname">session_id</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$id</code></span> ] )',
  'session_is_registered' => '<span class="type">bool</span> <span class="methodname">session_is_registered</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'session_module_name' => '<span class="type">string</span> <span class="methodname">session_module_name</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$module</code></span> ] )',
  'session_name' => '<span class="type">string</span> <span class="methodname">session_name</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ] )',
  'session_pgsql_add_error' => '<span class="type">bool</span> <span class="methodname">session_pgsql_add_error</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_level</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$error_message</code></span> ] )',
  'session_pgsql_get_error' => '<span class="type">array</span> <span class="methodname">session_pgsql_get_error</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$with_error_message</code><span class="initializer">= false</span></span> ] )',
  'session_pgsql_get_field' => '<span class="type">string</span> <span class="methodname">session_pgsql_get_field</span> ( <span class="methodparam">void</span> )',
  'session_pgsql_reset' => '<span class="type">bool</span> <span class="methodname">session_pgsql_reset</span> ( <span class="methodparam">void</span> )',
  'session_pgsql_set_field' => '<span class="type">bool</span> <span class="methodname">session_pgsql_set_field</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'session_pgsql_status' => '<span class="type">array</span> <span class="methodname">session_pgsql_status</span> ( <span class="methodparam">void</span> )',
  'session_regenerate_id' => '<span class="type">bool</span> <span class="methodname">session_regenerate_id</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$delete_old_session</code><span class="initializer">= false</span></span> ] )',
  'session_register' => '<span class="type">bool</span> <span class="methodname">session_register</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'session_register_shutdown' => '<span class="type">void</span> <span class="methodname">session_register_shutdown</span> ( <span class="methodparam">void</span> )',
  'session_save_path' => '<span class="type">string</span> <span class="methodname">session_save_path</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> ] )',
  'session_set_cookie_params' => '<span class="type">void</span> <span class="methodname">session_set_cookie_params</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$lifetime</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$secure</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$httponly</code><span class="initializer">= false</span></span> ]]]] )',
  'session_set_save_handler' => '<span class="type">bool</span> <span class="methodname">session_set_save_handler</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$close</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$read</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$write</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$destroy</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$gc</code></span> ) <span class="type">bool</span> <span class="methodname">session_set_save_handler</span> ( <span class="methodparam"><span class="type">SessionHandlerInterface</span> <code class="parameter">$sessionhandler</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$register_shutdown</code><span class="initializer">= true</span></span> ] )',
  'session_start' => '<span class="type">bool</span> <span class="methodname">session_start</span> ( <span class="methodparam">void</span> )',
  'session_status' => '<span class="type">int</span> <span class="methodname">session_status</span> ( <span class="methodparam">void</span> )',
  'session_unregister' => '<span class="type">bool</span> <span class="methodname">session_unregister</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'session_unset' => '<span class="type">void</span> <span class="methodname">session_unset</span> ( <span class="methodparam">void</span> )',
  'session_write_close' => '<span class="type">void</span> <span class="methodname">session_write_close</span> ( <span class="methodparam">void</span> )',
  'setcookie' => '<span class="type">bool</span> <span class="methodname">setcookie</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$expire</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$secure</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$httponly</code><span class="initializer">= false</span></span> ]]]]]] )',
  'set_error_handler' => '<span class="type">mixed</span> <span class="methodname">set_error_handler</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$error_handler</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_types</code><span class="initializer">= E_ALL | E_STRICT</span></span> ] ) <span class="type">bool</span> <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$errstr</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$errfile</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$errline</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$errcontext</code></span> ]]] )',
  'set_exception_handler' => '<span class="type">callable</span> <span class="methodname">set_exception_handler</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$exception_handler</code></span> ) <span class="type">void</span> <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">Exception</span> <code class="parameter">$$ex</code></span> )',
  'set_file_buffer' => '',
  'set_include_path' => '<span class="type">string</span> <span class="methodname">set_include_path</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_include_path</code></span> )',
  'setlocale' => '<span class="type">string</span> <span class="methodname">setlocale</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$category</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$locale</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ] ) <span class="type">string</span> <span class="methodname">setlocale</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$category</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$locale</code></span> )',
  'set_magic_quotes_runtime' => '<span class="type">bool</span> <span class="methodname">set_magic_quotes_runtime</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new_setting</code></span> )',
  'setproctitle' => '<span class="type">void</span> <span class="methodname">setproctitle</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> )',
  'setrawcookie' => '<span class="type">bool</span> <span class="methodname">setrawcookie</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$expire</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$secure</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$httponly</code><span class="initializer">= false</span></span> ]]]]]] )',
  'set_socket_blocking' => '',
  'setthreadtitle' => '<span class="type">bool</span> <span class="methodname">setthreadtitle</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$title</code></span> )',
  'set_time_limit' => '<span class="type">void</span> <span class="methodname">set_time_limit</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> )',
  'settype' => '<span class="type">bool</span> <span class="methodname">settype</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$var</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> )',
  'sha1_file' => '<span class="type">string</span> <span class="methodname">sha1_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'sha1' => '<span class="type">string</span> <span class="methodname">sha1</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$raw_output</code><span class="initializer">= false</span></span> ] )',
  'shell_exec' => '<span class="type">string</span> <span class="methodname">shell_exec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$cmd</code></span> )',
  'shm_attach' => '<span class="type">resource</span> <span class="methodname">shm_attach</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$memsize</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$perm</code><span class="initializer">= 0666</span></span> ]] )',
  'shm_detach' => '<span class="type">bool</span> <span class="methodname">shm_detach</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> )',
  'shm_get_var' => '<span class="type">mixed</span> <span class="methodname">shm_get_var</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$variable_key</code></span> )',
  'shm_has_var' => '<span class="type">bool</span> <span class="methodname">shm_has_var</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$variable_key</code></span> )',
  'shmop_close' => '<span class="type">void</span> <span class="methodname">shmop_close</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$shmid</code></span> )',
  'shmop_delete' => '<span class="type">bool</span> <span class="methodname">shmop_delete</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$shmid</code></span> )',
  'shmop_open' => '<span class="type">int</span> <span class="methodname">shmop_open</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$size</code></span> )',
  'shmop_read' => '<span class="type">string</span> <span class="methodname">shmop_read</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$shmid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$count</code></span> )',
  'shmop_size' => '<span class="type">int</span> <span class="methodname">shmop_size</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$shmid</code></span> )',
  'shmop_write' => '<span class="type">int</span> <span class="methodname">shmop_write</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$shmid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> )',
  'shm_put_var' => '<span class="type">bool</span> <span class="methodname">shm_put_var</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$variable_key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variable</code></span> )',
  'shm_remove' => '<span class="type">bool</span> <span class="methodname">shm_remove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> )',
  'shm_remove_var' => '<span class="type">bool</span> <span class="methodname">shm_remove_var</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$shm_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$variable_key</code></span> )',
  'show_source' => '',
  'shuffle' => '<span class="type">bool</span> <span class="methodname">shuffle</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> )',
  'signeurlpaiement' => '<span class="type">string</span> <span class="methodname">nthmac</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$clent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'similar_text' => '<span class="type">int</span> <span class="methodname">similar_text</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$first</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$second</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter reference">&$percent</code></span> ] )',
  'simplexml_import_dom' => '<span class="type">SimpleXMLElement</span> <span class="methodname">simplexml_import_dom</span> ( <span class="methodparam"><span class="type">DOMNode</span> <code class="parameter">$node</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code><span class="initializer">= &quot;SimpleXMLElement&quot;</span></span> ] )',
  'simplexml_load_file' => '<span class="type">SimpleXMLElement</span> <span class="methodname">simplexml_load_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code><span class="initializer">= &quot;SimpleXMLElement&quot;</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$ns</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_prefix</code><span class="initializer">= false</span></span> ]]]] )',
  'simplexml_load_string' => '<span class="type">SimpleXMLElement</span> <span class="methodname">simplexml_load_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code><span class="initializer">= &quot;SimpleXMLElement&quot;</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$options</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$ns</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_prefix</code><span class="initializer">= false</span></span> ]]]] )',
  'sinh' => '<span class="type">float</span> <span class="methodname">sinh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'sin' => '<span class="type">float</span> <span class="methodname">sin</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'sizeof' => '',
  'sleep' => '<span class="type">int</span> <span class="methodname">sleep</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> )',
  'snmp2_get' => '<span class="type">string</span> <span class="methodname">snmp2_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp2_getnext' => '<span class="type">string</span> <span class="methodname">snmp2_getnext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp2_real_walk' => '<span class="type">array</span> <span class="methodname">snmp2_real_walk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp2_set' => '<span class="type">bool</span> <span class="methodname">snmp2_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp2_walk' => '<span class="type">array</span> <span class="methodname">snmp2_walk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp3_get' => '<span class="type">string</span> <span class="methodname">snmp3_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_level</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp3_getnext' => '<span class="type">string</span> <span class="methodname">snmp3_getnext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_level</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp3_real_walk' => '<span class="type">array</span> <span class="methodname">snmp3_real_walk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_level</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code> <span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code> <span class="initializer">= 5</span></span> ]] )',
  'snmp3_set' => '<span class="type">bool</span> <span class="methodname">snmp3_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_level</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp3_walk' => '<span class="type">array</span> <span class="methodname">snmp3_walk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sec_level</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$auth_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$priv_passphrase</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmpget' => '<span class="type">string</span> <span class="methodname">snmpget</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmpgetnext' => '<span class="type">string</span> <span class="methodname">snmpgetnext</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp_get_quick_print' => '<span class="type">bool</span> <span class="methodname">snmp_get_quick_print</span> ( <span class="methodparam">void</span> )',
  'snmp_get_valueretrieval' => '<span class="type">int</span> <span class="methodname">snmp_get_valueretrieval</span> ( <span class="methodparam">void</span> )',
  'snmp_read_mib' => '<span class="type">bool</span> <span class="methodname">snmp_read_mib</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'snmprealwalk' => '<span class="type">array</span> <span class="methodname">snmprealwalk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp_set_enum_print' => '<span class="type">bool</span> <span class="methodname">snmp_set_enum_print</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$enum_print</code></span> )',
  'snmpset' => '<span class="type">bool</span> <span class="methodname">snmpset</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmp_set_oid_numeric_print' => '<span class="type">void</span> <span class="methodname">snmp_set_oid_numeric_print</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$oid_format</code></span> )',
  'snmp_set_oid_output_format' => '<span class="type">bool</span> <span class="methodname">snmp_set_oid_output_format</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$oid_format</code><span class="initializer">= SNMP_OID_OUTPUT_MODULE</span></span> )',
  'snmp_set_quick_print' => '<span class="type">bool</span> <span class="methodname">snmp_set_quick_print</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$quick_print</code></span> )',
  'snmp_set_valueretrieval' => '<span class="type">bool</span> <span class="methodname">snmp_set_valueretrieval</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code> <span class="initializer">= SNMP_VALUE_LIBRARY</span></span> )',
  'snmpwalk' => '<span class="type">array</span> <span class="methodname">snmpwalk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'snmpwalkoid' => '<span class="type">array</span> <span class="methodname">snmpwalkoid</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$community</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$object_id</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timeout</code><span class="initializer">= 1000000</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$retries</code><span class="initializer">= 5</span></span> ]] )',
  'socket_accept' => '<span class="type">resource</span> <span class="methodname">socket_accept</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> )',
  'socket_bind' => '<span class="type">bool</span> <span class="methodname">socket_bind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> ] )',
  'socket_clear_error' => '<span class="type">void</span> <span class="methodname">socket_clear_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> ] )',
  'socket_close' => '<span class="type">void</span> <span class="methodname">socket_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> )',
  'socket_cmsg_space' => '<span class="type">int</span> <span class="methodname">socket_cmsg_space</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'socket_connect' => '<span class="type">bool</span> <span class="methodname">socket_connect</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> ] )',
  'socket_create' => '<span class="type">resource</span> <span class="methodname">socket_create</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$protocol</code></span> )',
  'socket_create_listen' => '<span class="type">resource</span> <span class="methodname">socket_create_listen</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$backlog</code><span class="initializer">= 128</span></span> ] )',
  'socket_create_pair' => '<span class="type">bool</span> <span class="methodname">socket_create_pair</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$protocol</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$fd</code></span> )',
  'socket_get_option' => '<span class="type">mixed</span> <span class="methodname">socket_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$optname</code></span> )',
  'socket_getpeername' => '<span class="type">bool</span> <span class="methodname">socket_getpeername</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$address</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$port</code></span> ] )',
  'socket_getsockname' => '<span class="type">bool</span> <span class="methodname">socket_getsockname</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$addr</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$port</code></span> ] )',
  'socket_get_status' => '',
  'socket_import_stream' => '<span class="type">resource</span> <span class="methodname">socket_import_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> )',
  'socket_last_error' => '<span class="type">int</span> <span class="methodname">socket_last_error</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> ] )',
  'socket_listen' => '<span class="type">bool</span> <span class="methodname">socket_listen</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$backlog</code><span class="initializer">= 0</span></span> ] )',
  'socket_read' => '<span class="type">string</span> <span class="methodname">socket_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code><span class="initializer">= PHP_BINARY_READ</span></span> ] )',
  'socket_recvfrom' => '<span class="type">int</span> <span class="methodname">socket_recvfrom</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$buf</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$port</code></span> ] )',
  'socket_recv' => '<span class="type">int</span> <span class="methodname">socket_recv</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$buf</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> )',
  'socket_recvmsg' => '<span class="type">int</span> <span class="methodname">socket_recvmsg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ] )',
  'socket_select' => '<span class="type">int</span> <span class="methodname">socket_select</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$read</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$write</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$except</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tv_sec</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tv_usec</code><span class="initializer">= 0</span></span> ] )',
  'socket_send' => '<span class="type">int</span> <span class="methodname">socket_send</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buf</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> )',
  'socket_sendmsg' => '<span class="type">int</span> <span class="methodname">socket_sendmsg</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$message</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> )',
  'socket_sendto' => '<span class="type">int</span> <span class="methodname">socket_sendto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buf</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$addr</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 0</span></span> ] )',
  'socket_set_block' => '<span class="type">bool</span> <span class="methodname">socket_set_block</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> )',
  'socket_set_blocking' => '',
  'socket_set_nonblock' => '<span class="type">bool</span> <span class="methodname">socket_set_nonblock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> )',
  'socket_set_option' => '<span class="type">bool</span> <span class="methodname">socket_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$level</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$optname</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$optval</code></span> )',
  'socket_set_timeout' => '',
  'socket_shutdown' => '<span class="type">bool</span> <span class="methodname">socket_shutdown</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$how</code><span class="initializer">= 2</span></span> ] )',
  'socket_strerror' => '<span class="type">string</span> <span class="methodname">socket_strerror</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errno</code></span> )',
  'socket_write' => '<span class="type">int</span> <span class="methodname">socket_write</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buffer</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 0</span></span> ] )',
  'solr_get_version' => '<span class="type">string</span> <span class="methodname">solr_get_version</span> ( <span class="methodparam">void</span> )',
  'sort' => '<span class="type">bool</span> <span class="methodname">sort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$sort_flags</code><span class="initializer">= SORT_REGULAR</span></span> ] )',
  'soundex' => '<span class="type">string</span> <span class="methodname">soundex</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'spl_autoload_call' => '<span class="type">void</span> <span class="methodname">spl_autoload_call</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> )',
  'spl_autoload_extensions' => '<span class="type">string</span> <span class="methodname">spl_autoload_extensions</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_extensions</code></span> ] )',
  'spl_autoload_functions' => '<span class="type">array</span> <span class="methodname">spl_autoload_functions</span> ( <span class="methodparam">void</span> )',
  'spl_autoload' => '<span class="type">void</span> <span class="methodname">spl_autoload</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_extensions</code><span class="initializer">= spl_autoload_extensions()</span></span> ] )',
  'spl_autoload_register' => '<span class="type">bool</span> <span class="methodname">spl_autoload_register</span> ([ <span class="methodparam"><span class="type">callable</span> <code class="parameter">$autoload_function</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$throw</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$prepend</code><span class="initializer">= false</span></span> ]]] )',
  'spl_autoload_unregister' => '<span class="type">bool</span> <span class="methodname">spl_autoload_unregister</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$autoload_function</code></span> )',
  'spl_classes' => '<span class="type">array</span> <span class="methodname">spl_classes</span> ( <span class="methodparam">void</span> )',
  'split' => '<span class="type">array</span> <span class="methodname">split</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> ] )',
  'spliti' => '<span class="type">array</span> <span class="methodname">spliti</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$pattern</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= -1</span></span> ] )',
  'spl_object_hash' => '<span class="type">string</span> <span class="methodname">spl_object_hash</span> ( <span class="methodparam"><span class="type">object</span> <code class="parameter">$obj</code></span> )',
  'sprintf' => '<span class="type">string</span> <span class="methodname">sprintf</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$args</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ]] )',
  'sqlite_array_query' => '<span class="type">array</span> <span class="methodname">sqlite_array_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">sqlite_array_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">SQLiteDatabase::arrayQuery</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] )',
  'sqlite_busy_timeout' => '<span class="type">void</span> <span class="methodname">sqlite_busy_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> ) <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">SQLiteDatabase::busyTimeout</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$milliseconds</code></span> )',
  'sqlite_changes' => '<span class="type">int</span> <span class="methodname">sqlite_changes</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> ) <span class="modifier">public</span> <span class="type">int</span> <span class="methodname">SQLiteDatabase::changes</span> ( <span class="methodparam">void</span> )',
  'sqlite_close' => '<span class="type">void</span> <span class="methodname">sqlite_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> )',
  'sqlite_column' => '<span class="type">mixed</span> <span class="methodname">sqlite_column</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$index_or_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] ) <span class="type">mixed</span> <span class="methodname">SQLiteResult::column</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$index_or_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] ) <span class="type">mixed</span> <span class="methodname">SQLiteUnbuffered::column</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$index_or_name</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] )',
  'sqlite_create_aggregate' => '<span class="type">void</span> <span class="methodname">sqlite_create_aggregate</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$step_func</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$finalize_func</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer">= -1</span></span> ] ) <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">SQLiteDatabase::createAggregate</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$step_func</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$finalize_func</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer">= -1</span></span> ] )',
  'sqlite_create_function' => '<span class="type">void</span> <span class="methodname">sqlite_create_function</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer">= -1</span></span> ] ) <span class="modifier">public</span> <span class="type">void</span> <span class="methodname">SQLiteDatabase::createFunction</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$callback</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$num_args</code><span class="initializer">= -1</span></span> ] )',
  'sqlite_current' => '<span class="type">array</span> <span class="methodname">sqlite_current</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteResult::current</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteUnbuffered::current</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] )',
  'sqlite_error_string' => '<span class="type">string</span> <span class="methodname">sqlite_error_string</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span> )',
  'sqlite_escape_string' => '<span class="type">string</span> <span class="methodname">sqlite_escape_string</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$item</code></span> )',
  'sqlite_exec' => '<span class="type">bool</span> <span class="methodname">sqlite_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ] ) <span class="type">bool</span> <span class="methodname">sqlite_exec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> ) <span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">SQLiteDatabase::queryExec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ] )',
  'sqlite_factory' => '<span class="type">SQLiteDatabase</span> <span class="methodname">sqlite_factory</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0666</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span> ]] )',
  'sqlite_fetch_all' => '<span class="type">array</span> <span class="methodname">sqlite_fetch_all</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteResult::fetchAll</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteUnbuffered::fetchAll</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] )',
  'sqlite_fetch_array' => '<span class="type">array</span> <span class="methodname">sqlite_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteResult::fetch</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] ) <span class="type">array</span> <span class="methodname">SQLiteUnbuffered::fetch</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]] )',
  'sqlite_fetch_column_types' => '<span class="type">array</span> <span class="methodname">sqlite_fetch_column_types</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_ASSOC</span></span> ] ) <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">SQLiteDatabase::fetchColumnTypes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$table_name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_ASSOC</span></span> ] )',
  'sqlite_fetch_object' => '<span class="type">object</span> <span class="methodname">sqlite_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]]] ) <span class="type">object</span> <span class="methodname">SQLiteResult::fetchObject</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]]] ) <span class="type">object</span> <span class="methodname">SQLiteUnbuffered::fetchObject</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$class_name</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctor_params</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ]]] )',
  'sqlite_fetch_single' => '<span class="type">string</span> <span class="methodname">sqlite_fetch_single</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] ) <span class="type">string</span> <span class="methodname">SQLiteResult::fetchSingle</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] ) <span class="type">string</span> <span class="methodname">SQLiteUnbuffered::fetchSingle</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code><span class="initializer">= true</span></span> ] )',
  'sqlite_fetch_string' => '',
  'sqlite_field_name' => '<span class="type">string</span> <span class="methodname">sqlite_field_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span> ) <span class="type">string</span> <span class="methodname">SQLiteResult::fieldName</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span> ) <span class="type">string</span> <span class="methodname">SQLiteUnbuffered::fieldName</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_index</code></span> )',
  'sqlite_has_more' => '<span class="type">bool</span> <span class="methodname">sqlite_has_more</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sqlite_has_prev' => '<span class="type">bool</span> <span class="methodname">sqlite_has_prev</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::hasPrev</span> ( <span class="methodparam">void</span> )',
  'sqlite_key' => '<span class="type">int</span> <span class="methodname">SQLiteResult::key</span> ( <span class="methodparam">void</span> )',
  'sqlite_last_error' => '<span class="type">int</span> <span class="methodname">sqlite_last_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> ) <span class="modifier">public</span> <span class="type">int</span> <span class="methodname">SQLiteDatabase::lastError</span> ( <span class="methodparam">void</span> )',
  'sqlite_last_insert_rowid' => '<span class="type">int</span> <span class="methodname">sqlite_last_insert_rowid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> ) <span class="modifier">public</span> <span class="type">int</span> <span class="methodname">SQLiteDatabase::lastInsertRowid</span> ( <span class="methodparam">void</span> )',
  'sqlite_libencoding' => '<span class="type">string</span> <span class="methodname">sqlite_libencoding</span> ( <span class="methodparam">void</span> )',
  'sqlite_libversion' => '<span class="type">string</span> <span class="methodname">sqlite_libversion</span> ( <span class="methodparam">void</span> )',
  'sqlite_next' => '<span class="type">bool</span> <span class="methodname">sqlite_next</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::next</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">SQLiteUnbuffered::next</span> ( <span class="methodparam">void</span> )',
  'sqlite_num_fields' => '<span class="type">int</span> <span class="methodname">sqlite_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">int</span> <span class="methodname">SQLiteResult::numFields</span> ( <span class="methodparam">void</span> ) <span class="type">int</span> <span class="methodname">SQLiteUnbuffered::numFields</span> ( <span class="methodparam">void</span> )',
  'sqlite_num_rows' => '<span class="type">int</span> <span class="methodname">sqlite_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">int</span> <span class="methodname">SQLiteResult::numRows</span> ( <span class="methodparam">void</span> )',
  'sqlite_open' => '<span class="type">resource</span> <span class="methodname">sqlite_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0666</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span> ]] )',
  'sqlite_popen' => '<span class="type">resource</span> <span class="methodname">sqlite_popen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0666</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_message</code></span> ]] )',
  'sqlite_prev' => '<span class="type">bool</span> <span class="methodname">sqlite_prev</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::prev</span> ( <span class="methodparam">void</span> )',
  'sqlite_query' => '<span class="type">resource</span> <span class="methodname">sqlite_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] ) <span class="type">resource</span> <span class="methodname">sqlite_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] ) <span class="modifier">public</span> <span class="type">SQLiteResult</span> <span class="methodname">SQLiteDatabase::query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] )',
  'sqlite_rewind' => '<span class="type">bool</span> <span class="methodname">sqlite_rewind</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::rewind</span> ( <span class="methodparam">void</span> )',
  'sqlite_seek' => '<span class="type">bool</span> <span class="methodname">sqlite_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownum</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::seek</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$rownum</code></span> )',
  'sqlite_single_query' => '<span class="type">array</span> <span class="methodname">sqlite_single_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$db</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$first_row_only</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code></span> ]] ) <span class="modifier">public</span> <span class="type">array</span> <span class="methodname">SQLiteDatabase::singleQuery</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$first_row_only</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$decode_binary</code></span> ]] )',
  'sqlite_udf_decode_binary' => '<span class="type">string</span> <span class="methodname">sqlite_udf_decode_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'sqlite_udf_encode_binary' => '<span class="type">string</span> <span class="methodname">sqlite_udf_encode_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'sqlite_unbuffered_query' => '<span class="type">resource</span> <span class="methodname">sqlite_unbuffered_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] ) <span class="type">resource</span> <span class="methodname">sqlite_unbuffered_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dbhandle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] ) <span class="modifier">public</span> <span class="type">SQLiteUnbuffered</span> <span class="methodname">SQLiteDatabase::unbufferedQuery</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$result_type</code><span class="initializer">= SQLITE_BOTH</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error_msg</code></span> ]] )',
  'sqlite_valid' => '<span class="type">bool</span> <span class="methodname">sqlite_valid</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> ) <span class="type">bool</span> <span class="methodname">SQLiteResult::valid</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">SQLiteUnbuffered::valid</span> ( <span class="methodparam">void</span> )',
  'sql_regcase' => '<span class="type">string</span> <span class="methodname">sql_regcase</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'sqlsrv_begin_transaction' => '<span class="type">bool</span> <span class="methodname">sqlsrv_begin_transaction</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqlsrv_cancel' => '<span class="type">bool</span> <span class="methodname">sqlsrv_cancel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_client_info' => '<span class="type">array</span> <span class="methodname">sqlsrv_client_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqlsrv_close' => '<span class="type">bool</span> <span class="methodname">sqlsrv_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqlsrv_commit' => '<span class="type">bool</span> <span class="methodname">sqlsrv_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqlsrv_configure' => '<span class="type">bool</span> <span class="methodname">sqlsrv_configure</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$setting</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'sqlsrv_connect' => '<span class="type">resource</span> <span class="methodname">sqlsrv_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$serverName</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$connectionInfo</code></span> ] )',
  'sqlsrv_errors' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_errors</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$errorsOrWarnings</code></span> ] )',
  'sqlsrv_execute' => '<span class="type">bool</span> <span class="methodname">sqlsrv_execute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_fetch_array' => '<span class="type">array</span> <span class="methodname">sqlsrv_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$fetchType</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> ]]] )',
  'sqlsrv_fetch' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_fetch</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> ]] )',
  'sqlsrv_fetch_object' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$className</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$ctorParams</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> ]]]] )',
  'sqlsrv_field_metadata' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_field_metadata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_free_stmt' => '<span class="type">bool</span> <span class="methodname">sqlsrv_free_stmt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_get_config' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_get_config</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$setting</code></span> )',
  'sqlsrv_get_field' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_get_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$fieldIndex</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$getAsType</code></span> ] )',
  'sqlsrv_has_rows' => '<span class="type">bool</span> <span class="methodname">sqlsrv_has_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_next_result' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_next_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_num_fields' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_num_rows' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_prepare' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_prepare</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]] )',
  'sqlsrv_query' => '<span class="type">mixed</span> <span class="methodname">sqlsrv_query</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sql</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]] )',
  'sqlsrv_rollback' => '<span class="type">bool</span> <span class="methodname">sqlsrv_rollback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqlsrv_rows_affected' => '<span class="type">int</span> <span class="methodname">sqlsrv_rows_affected</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_send_stream_data' => '<span class="type">bool</span> <span class="methodname">sqlsrv_send_stream_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stmt</code></span> )',
  'sqlsrv_server_info' => '<span class="type">array</span> <span class="methodname">sqlsrv_server_info</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$conn</code></span> )',
  'sqrt' => '<span class="type">float</span> <span class="methodname">sqrt</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'srand' => '<span class="type">void</span> <span class="methodname">srand</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$seed</code></span> ] )',
  'sscanf' => '<span class="type">mixed</span> <span class="methodname">sscanf</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter reference">&$...</code></span> ] )',
  'ssdeep_fuzzy_compare' => '<span class="type">int</span> <span class="methodname">ssdeep_fuzzy_compare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$signature1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$signature2</code></span> )',
  'ssdeep_fuzzy_hash_filename' => '<span class="type">string</span> <span class="methodname">ssdeep_fuzzy_hash_filename</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file_name</code></span> )',
  'ssdeep_fuzzy_hash' => '<span class="type">string</span> <span class="methodname">ssdeep_fuzzy_hash</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_hash</code></span> )',
  'ssh2_auth_agent' => '<span class="type">bool</span> <span class="methodname">ssh2_auth_agent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> )',
  'ssh2_auth_hostbased_file' => '<span class="type">bool</span> <span class="methodname">ssh2_auth_hostbased_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$hostname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pubkeyfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$privkeyfile</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_username</code></span> ]] )',
  'ssh2_auth_none' => '<span class="type">mixed</span> <span class="methodname">ssh2_auth_none</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> )',
  'ssh2_auth_password' => '<span class="type">bool</span> <span class="methodname">ssh2_auth_password</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> )',
  'ssh2_auth_pubkey_file' => '<span class="type">bool</span> <span class="methodname">ssh2_auth_pubkey_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pubkeyfile</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$privkeyfile</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$passphrase</code></span> ] )',
  'ssh2_connect' => '<span class="type">resource</span> <span class="methodname">ssh2_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code><span class="initializer">= 22</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$methods</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'ssh2_exec' => '<span class="type">resource</span> <span class="methodname">ssh2_exec</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$pty</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$env</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code><span class="initializer">= 80</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code><span class="initializer">= 25</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width_height_type</code><span class="initializer">= SSH2_TERM_UNIT_CHARS</span></span> ]]]]] )',
  'ssh2_fetch_stream' => '<span class="type">resource</span> <span class="methodname">ssh2_fetch_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$channel</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$streamid</code></span> )',
  'ssh2_fingerprint' => '<span class="type">string</span> <span class="methodname">ssh2_fingerprint</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX</span></span> ] )',
  'ssh2_methods_negotiated' => '<span class="type">array</span> <span class="methodname">ssh2_methods_negotiated</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> )',
  'ssh2_publickey_add' => '<span class="type">bool</span> <span class="methodname">ssh2_publickey_add</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pkey</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$algoname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$overwrite</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> ]] )',
  'ssh2_publickey_init' => '<span class="type">resource</span> <span class="methodname">ssh2_publickey_init</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> )',
  'ssh2_publickey_list' => '<span class="type">array</span> <span class="methodname">ssh2_publickey_list</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pkey</code></span> )',
  'ssh2_publickey_remove' => '<span class="type">bool</span> <span class="methodname">ssh2_publickey_remove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$pkey</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$algoname</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$blob</code></span> )',
  'ssh2_scp_recv' => '<span class="type">bool</span> <span class="methodname">ssh2_scp_recv</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> )',
  'ssh2_scp_send' => '<span class="type">bool</span> <span class="methodname">ssh2_scp_send</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_file</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$create_mode</code><span class="initializer">= 0644</span></span> ] )',
  'ssh2_sftp_chmod' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_chmod</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'ssh2_sftp' => '<span class="type">resource</span> <span class="methodname">ssh2_sftp</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> )',
  'ssh2_sftp_lstat' => '<span class="type">array</span> <span class="methodname">ssh2_sftp_lstat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'ssh2_sftp_mkdir' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_mkdir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code><span class="initializer">= 0777</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= false</span></span> ]] )',
  'ssh2_sftp_readlink' => '<span class="type">string</span> <span class="methodname">ssh2_sftp_readlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$link</code></span> )',
  'ssh2_sftp_realpath' => '<span class="type">string</span> <span class="methodname">ssh2_sftp_realpath</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ssh2_sftp_rename' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_rename</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$from</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> )',
  'ssh2_sftp_rmdir' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_rmdir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dirname</code></span> )',
  'ssh2_sftp_stat' => '<span class="type">array</span> <span class="methodname">ssh2_sftp_stat</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'ssh2_sftp_symlink' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_symlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$link</code></span> )',
  'ssh2_sftp_unlink' => '<span class="type">bool</span> <span class="methodname">ssh2_sftp_unlink</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$sftp</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'ssh2_shell' => '<span class="type">resource</span> <span class="methodname">ssh2_shell</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$term_type</code><span class="initializer">= &quot;vanilla&quot;</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$env</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code><span class="initializer">= 80</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$height</code><span class="initializer">= 25</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width_height_type</code><span class="initializer">= SSH2_TERM_UNIT_CHARS</span></span> ]]]]] )',
  'ssh2_tunnel' => '<span class="type">resource</span> <span class="methodname">ssh2_tunnel</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$host</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$port</code></span> )',
  'stat' => '<span class="type">array</span> <span class="methodname">stat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'stats_absolute_deviation' => '<span class="type">float</span> <span class="methodname">stats_absolute_deviation</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> )',
  'stats_cdf_beta' => '<span class="type">float</span> <span class="methodname">stats_cdf_beta</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_binomial' => '<span class="type">float</span> <span class="methodname">stats_cdf_binomial</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_cauchy' => '<span class="type">float</span> <span class="methodname">stats_cdf_cauchy</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_chisquare' => '<span class="type">float</span> <span class="methodname">stats_cdf_chisquare</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_exponential' => '<span class="type">float</span> <span class="methodname">stats_cdf_exponential</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_f' => '<span class="type">float</span> <span class="methodname">stats_cdf_f</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_gamma' => '<span class="type">float</span> <span class="methodname">stats_cdf_gamma</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_laplace' => '<span class="type">float</span> <span class="methodname">stats_cdf_laplace</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_logistic' => '<span class="type">float</span> <span class="methodname">stats_cdf_logistic</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_negative_binomial' => '<span class="type">float</span> <span class="methodname">stats_cdf_negative_binomial</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_noncentral_chisquare' => '<span class="type">float</span> <span class="methodname">stats_cdf_noncentral_chisquare</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_noncentral_f' => '<span class="type">float</span> <span class="methodname">stats_cdf_noncentral_f</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par4</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_poisson' => '<span class="type">float</span> <span class="methodname">stats_cdf_poisson</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_t' => '<span class="type">float</span> <span class="methodname">stats_cdf_t</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_uniform' => '<span class="type">float</span> <span class="methodname">stats_cdf_uniform</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_cdf_weibull' => '<span class="type">float</span> <span class="methodname">stats_cdf_weibull</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_covariance' => '<span class="type">float</span> <span class="methodname">stats_covariance</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$b</code></span> )',
  'stats_dens_beta' => '<span class="type">float</span> <span class="methodname">stats_dens_beta</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> )',
  'stats_dens_cauchy' => '<span class="type">float</span> <span class="methodname">stats_dens_cauchy</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ave</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$stdev</code></span> )',
  'stats_dens_chisquare' => '<span class="type">float</span> <span class="methodname">stats_dens_chisquare</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfr</code></span> )',
  'stats_dens_exponential' => '<span class="type">float</span> <span class="methodname">stats_dens_exponential</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$scale</code></span> )',
  'stats_dens_f' => '<span class="type">float</span> <span class="methodname">stats_dens_f</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfr1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfr2</code></span> )',
  'stats_dens_gamma' => '<span class="type">float</span> <span class="methodname">stats_dens_gamma</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$shape</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$scale</code></span> )',
  'stats_dens_laplace' => '<span class="type">float</span> <span class="methodname">stats_dens_laplace</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ave</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$stdev</code></span> )',
  'stats_dens_logistic' => '<span class="type">float</span> <span class="methodname">stats_dens_logistic</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ave</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$stdev</code></span> )',
  'stats_dens_negative_binomial' => '<span class="type">float</span> <span class="methodname">stats_dens_negative_binomial</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$pi</code></span> )',
  'stats_dens_normal' => '<span class="type">float</span> <span class="methodname">stats_dens_normal</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ave</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$stdev</code></span> )',
  'stats_dens_pmf_binomial' => '<span class="type">float</span> <span class="methodname">stats_dens_pmf_binomial</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$pi</code></span> )',
  'stats_dens_pmf_hypergeometric' => '<span class="type">float</span> <span class="methodname">stats_dens_pmf_hypergeometric</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$n1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$n2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$N1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$N2</code></span> )',
  'stats_dens_pmf_poisson' => '<span class="type">float</span> <span class="methodname">stats_dens_pmf_poisson</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$lb</code></span> )',
  'stats_dens_t' => '<span class="type">float</span> <span class="methodname">stats_dens_t</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfr</code></span> )',
  'stats_dens_weibull' => '<span class="type">float</span> <span class="methodname">stats_dens_weibull</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> )',
  'stats_den_uniform' => '<span class="type">float</span> <span class="methodname">stats_den_uniform</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> )',
  'stats_harmonic_mean' => '<span class="type">number</span> <span class="methodname">stats_harmonic_mean</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> )',
  'stats_kurtosis' => '<span class="type">float</span> <span class="methodname">stats_kurtosis</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> )',
  'stats_rand_gen_beta' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_beta</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> )',
  'stats_rand_gen_chisquare' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_chisquare</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$df</code></span> )',
  'stats_rand_gen_exponential' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_exponential</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$av</code></span> )',
  'stats_rand_gen_f' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_f</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfn</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfd</code></span> )',
  'stats_rand_gen_funiform' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_funiform</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$high</code></span> )',
  'stats_rand_gen_gamma' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_gamma</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> )',
  'stats_rand_gen_ibinomial' => '<span class="type">int</span> <span class="methodname">stats_rand_gen_ibinomial</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$pp</code></span> )',
  'stats_rand_gen_ibinomial_negative' => '<span class="type">int</span> <span class="methodname">stats_rand_gen_ibinomial_negative</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$p</code></span> )',
  'stats_rand_gen_int' => '<span class="type">int</span> <span class="methodname">stats_rand_gen_int</span> ( <span class="methodparam">void</span> )',
  'stats_rand_gen_ipoisson' => '<span class="type">int</span> <span class="methodname">stats_rand_gen_ipoisson</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$mu</code></span> )',
  'stats_rand_gen_iuniform' => '<span class="type">int</span> <span class="methodname">stats_rand_gen_iuniform</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$high</code></span> )',
  'stats_rand_gen_noncenral_chisquare' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_noncenral_chisquare</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$df</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xnonc</code></span> )',
  'stats_rand_gen_noncentral_f' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_noncentral_f</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfn</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$dfd</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xnonc</code></span> )',
  'stats_rand_gen_noncentral_t' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_noncentral_t</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$df</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xnonc</code></span> )',
  'stats_rand_gen_normal' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_normal</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$av</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$sd</code></span> )',
  'stats_rand_gen_t' => '<span class="type">float</span> <span class="methodname">stats_rand_gen_t</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$df</code></span> )',
  'stats_rand_get_seeds' => '<span class="type">array</span> <span class="methodname">stats_rand_get_seeds</span> ( <span class="methodparam">void</span> )',
  'stats_rand_phrase_to_seeds' => '<span class="type">array</span> <span class="methodname">stats_rand_phrase_to_seeds</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$phrase</code></span> )',
  'stats_rand_ranf' => '<span class="type">float</span> <span class="methodname">stats_rand_ranf</span> ( <span class="methodparam">void</span> )',
  'stats_rand_setall' => '<span class="type">void</span> <span class="methodname">stats_rand_setall</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$iseed1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$iseed2</code></span> )',
  'stats_skew' => '<span class="type">float</span> <span class="methodname">stats_skew</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> )',
  'stats_standard_deviation' => '<span class="type">float</span> <span class="methodname">stats_standard_deviation</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$sample</code><span class="initializer">= false</span></span> ] )',
  'stats_stat_binomial_coef' => '<span class="type">float</span> <span class="methodname">stats_stat_binomial_coef</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'stats_stat_correlation' => '<span class="type">float</span> <span class="methodname">stats_stat_correlation</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr2</code></span> )',
  'stats_stat_gennch' => '<span class="type">float</span> <span class="methodname">stats_stat_gennch</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$n</code></span> )',
  'stats_stat_independent_t' => '<span class="type">float</span> <span class="methodname">stats_stat_independent_t</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr2</code></span> )',
  'stats_stat_innerproduct' => '<span class="type">float</span> <span class="methodname">stats_stat_innerproduct</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr2</code></span> )',
  'stats_stat_noncentral_t' => '<span class="type">float</span> <span class="methodname">stats_stat_noncentral_t</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$par1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$par3</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$which</code></span> )',
  'stats_stat_paired_t' => '<span class="type">float</span> <span class="methodname">stats_stat_paired_t</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr1</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr2</code></span> )',
  'stats_stat_percentile' => '<span class="type">float</span> <span class="methodname">stats_stat_percentile</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$df</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xnonc</code></span> )',
  'stats_stat_powersum' => '<span class="type">float</span> <span class="methodname">stats_stat_powersum</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arr</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$power</code></span> )',
  'stats_variance' => '<span class="type">float</span> <span class="methodname">stats_variance</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$a</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$sample</code><span class="initializer">= false</span></span> ] )',
  'stomp_connect_error' => '<span class="type">string</span> <span class="methodname">stomp_connect_error</span> ( <span class="methodparam">void</span> )',
  'stomp_version' => '<span class="type">string</span> <span class="methodname">stomp_version</span> ( <span class="methodparam">void</span> )',
  'strcasecmp' => '<span class="type">int</span> <span class="methodname">strcasecmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'strchr' => '',
  'strcmp' => '<span class="type">int</span> <span class="methodname">strcmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'strcoll' => '<span class="type">int</span> <span class="methodname">strcoll</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'strcspn' => '<span class="type">int</span> <span class="methodname">strcspn</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ]] )',
  'stream_bucket_append' => '<span class="type">void</span> <span class="methodname">stream_bucket_append</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brigade</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bucket</code></span> )',
  'stream_bucket_make_writeable' => '<span class="type">object</span> <span class="methodname">stream_bucket_make_writeable</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brigade</code></span> )',
  'stream_bucket_new' => '<span class="type">object</span> <span class="methodname">stream_bucket_new</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$buffer</code></span> )',
  'stream_bucket_prepend' => '<span class="type">void</span> <span class="methodname">stream_bucket_prepend</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$brigade</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$bucket</code></span> )',
  'stream_context_create' => '<span class="type">resource</span> <span class="methodname">stream_context_create</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> ]] )',
  'stream_context_get_default' => '<span class="type">resource</span> <span class="methodname">stream_context_get_default</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ] )',
  'stream_context_get_options' => '<span class="type">array</span> <span class="methodname">stream_context_get_options</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_or_context</code></span> )',
  'stream_context_get_params' => '<span class="type">array</span> <span class="methodname">stream_context_get_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_or_context</code></span> )',
  'stream_context_set_default' => '<span class="type">resource</span> <span class="methodname">stream_context_set_default</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'stream_context_set_option' => '<span class="type">bool</span> <span class="methodname">stream_context_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_or_context</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$wrapper</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> ) <span class="type">bool</span> <span class="methodname">stream_context_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_or_context</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'stream_context_set_params' => '<span class="type">bool</span> <span class="methodname">stream_context_set_params</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_or_context</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$params</code></span> )',
  'stream_copy_to_stream' => '<span class="type">int</span> <span class="methodname">stream_copy_to_stream</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$source</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$dest</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxlength</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ]] )',
  'stream_encoding' => '<span class="type">bool</span> <span class="methodname">stream_encoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> ] )',
  'stream_filter_append' => '<span class="type">resource</span> <span class="methodname">stream_filter_append</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filtername</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$read_write</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$params</code></span> ]] )',
  'stream_filter_prepend' => '<span class="type">resource</span> <span class="methodname">stream_filter_prepend</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$filtername</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$read_write</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$params</code></span> ]] )',
  'stream_filter_register' => '<span class="type">bool</span> <span class="methodname">stream_filter_register</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filtername</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> )',
  'stream_filter_remove' => '<span class="type">bool</span> <span class="methodname">stream_filter_remove</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream_filter</code></span> )',
  'stream_get_contents' => '<span class="type">string</span> <span class="methodname">stream_get_contents</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$maxlength</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= -1</span></span> ]] )',
  'stream_get_filters' => '<span class="type">array</span> <span class="methodname">stream_get_filters</span> ( <span class="methodparam">void</span> )',
  'stream_get_line' => '<span class="type">string</span> <span class="methodname">stream_get_line</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$ending</code></span> ] )',
  'stream_get_meta_data' => '<span class="type">array</span> <span class="methodname">stream_get_meta_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> )',
  'stream_get_transports' => '<span class="type">array</span> <span class="methodname">stream_get_transports</span> ( <span class="methodparam">void</span> )',
  'stream_get_wrappers' => '<span class="type">array</span> <span class="methodname">stream_get_wrappers</span> ( <span class="methodparam">void</span> )',
  'stream_is_local' => '<span class="type">bool</span> <span class="methodname">stream_is_local</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$stream_or_url</code></span> )',
  'stream_notification_callback' => '<span class="type">void</span> <span class="methodname"><span class="replaceable">stream_notification_callback</span></span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$notification_code</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$message_code</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bytes_transferred</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$bytes_max</code></span> )',
  'stream_register_wrapper' => '',
  'stream_resolve_include_path' => '<span class="type">string</span> <span class="methodname">stream_resolve_include_path</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'stream_select' => '<span class="type">int</span> <span class="methodname">stream_select</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$read</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$write</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$except</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$tv_sec</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$tv_usec</code><span class="initializer">= 0</span></span> ] )',
  'stream_set_blocking' => '<span class="type">bool</span> <span class="methodname">stream_set_blocking</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$mode</code></span> )',
  'stream_set_chunk_size' => '<span class="type">int</span> <span class="methodname">stream_set_chunk_size</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fp</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$chunk_size</code></span> )',
  'stream_set_read_buffer' => '<span class="type">int</span> <span class="methodname">stream_set_read_buffer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$buffer</code></span> )',
  'stream_set_timeout' => '<span class="type">bool</span> <span class="methodname">stream_set_timeout</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$microseconds</code><span class="initializer">= 0</span></span> ] )',
  'stream_set_write_buffer' => '<span class="type">int</span> <span class="methodname">stream_set_write_buffer</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$buffer</code></span> )',
  'stream_socket_accept' => '<span class="type">resource</span> <span class="methodname">stream_socket_accept</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server_socket</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer">= ini_get(&quot;default_socket_timeout&quot;)</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$peername</code></span> ]] )',
  'stream_socket_client' => '<span class="type">resource</span> <span class="methodname">stream_socket_client</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$remote_socket</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errno</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$errstr</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$timeout</code><span class="initializer">= ini_get(&quot;default_socket_timeout&quot;)</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= STREAM_CLIENT_CONNECT</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]]]]] )',
  'stream_socket_enable_crypto' => '<span class="type">mixed</span> <span class="methodname">stream_socket_enable_crypto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$enable</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$crypto_type</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$session_stream</code></span> ]] )',
  'stream_socket_get_name' => '<span class="type">string</span> <span class="methodname">stream_socket_get_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$want_peer</code></span> )',
  'stream_socket_pair' => '<span class="type">array</span> <span class="methodname">stream_socket_pair</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$protocol</code></span> )',
  'stream_socket_recvfrom' => '<span class="type">string</span> <span class="methodname">stream_socket_recvfrom</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$address</code></span> ]] )',
  'stream_socket_sendto' => '<span class="type">int</span> <span class="methodname">stream_socket_sendto</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$socket</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> ]] )',
  'stream_socket_server' => '<span class="type">resource</span> <span class="methodname">stream_socket_server</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$local_socket</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$errno</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$errstr</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</span></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ]]]] )',
  'stream_socket_shutdown' => '<span class="type">bool</span> <span class="methodname">stream_socket_shutdown</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$how</code></span> )',
  'stream_supports_lock' => '<span class="type">bool</span> <span class="methodname">stream_supports_lock</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$stream</code></span> )',
  'stream_wrapper_register' => '<span class="type">bool</span> <span class="methodname">stream_wrapper_register</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$protocol</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$classname</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code> <span class="initializer">= 0</span></span> ] )',
  'stream_wrapper_restore' => '<span class="type">bool</span> <span class="methodname">stream_wrapper_restore</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$protocol</code></span> )',
  'stream_wrapper_unregister' => '<span class="type">bool</span> <span class="methodname">stream_wrapper_unregister</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$protocol</code></span> )',
  'strftime' => '<span class="type">string</span> <span class="methodname">strftime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'str_getcsv' => '<span class="type">array</span> <span class="methodname">str_getcsv</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$delimiter</code><span class="initializer">= &#039;,&#039;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$enclosure</code><span class="initializer">= &#039;&quot;&#039;</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$escape</code><span class="initializer">= &#039;\\&#039;</span></span> ]]] )',
  'stripcslashes' => '<span class="type">string</span> <span class="methodname">stripcslashes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'stripos' => '<span class="type">int</span> <span class="methodname">stripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'stripslashes' => '<span class="type">string</span> <span class="methodname">stripslashes</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'strip_tags' => '<span class="type">string</span> <span class="methodname">strip_tags</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$allowable_tags</code></span> ] )',
  'str_ireplace' => '<span class="type">mixed</span> <span class="methodname">str_ireplace</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$search</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replace</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$count</code></span> ] )',
  'stristr' => '<span class="type">string</span> <span class="methodname">stristr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> ] )',
  'strlen' => '<span class="type">int</span> <span class="methodname">strlen</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'strnatcasecmp' => '<span class="type">int</span> <span class="methodname">strnatcasecmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'strnatcmp' => '<span class="type">int</span> <span class="methodname">strnatcmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> )',
  'strncasecmp' => '<span class="type">int</span> <span class="methodname">strncasecmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'strncmp' => '<span class="type">int</span> <span class="methodname">strncmp</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$len</code></span> )',
  'str_pad' => '<span class="type">string</span> <span class="methodname">str_pad</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_length</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$pad_string</code><span class="initializer">= &quot; &quot;</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pad_type</code><span class="initializer">= STR_PAD_RIGHT</span></span> ]] )',
  'strpbrk' => '<span class="type">string</span> <span class="methodname">strpbrk</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$char_list</code></span> )',
  'strpos' => '<span class="type">mixed</span> <span class="methodname">strpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'strptime' => '<span class="type">array</span> <span class="methodname">strptime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$date</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> )',
  'strrchr' => '<span class="type">string</span> <span class="methodname">strrchr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> )',
  'str_repeat' => '<span class="type">string</span> <span class="methodname">str_repeat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$multiplier</code></span> )',
  'str_replace' => '<span class="type">mixed</span> <span class="methodname">str_replace</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$search</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replace</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$subject</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$count</code></span> ] )',
  'strrev' => '<span class="type">string</span> <span class="methodname">strrev</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'strripos' => '<span class="type">int</span> <span class="methodname">strripos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'str_rot13' => '<span class="type">string</span> <span class="methodname">str_rot13</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'strrpos' => '<span class="type">int</span> <span class="methodname">strrpos</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> ] )',
  'str_shuffle' => '<span class="type">string</span> <span class="methodname">str_shuffle</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'str_split' => '<span class="type">array</span> <span class="methodname">str_split</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$split_length</code><span class="initializer">= 1</span></span> ] )',
  'strspn' => '<span class="type">int</span> <span class="methodname">strspn</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$subject</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$mask</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ]] )',
  'strstr' => '<span class="type">string</span> <span class="methodname">strstr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$before_needle</code><span class="initializer">= false</span></span> ] )',
  'strtok' => '<span class="type">string</span> <span class="methodname">strtok</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$token</code></span> ) <span class="type">string</span> <span class="methodname">strtok</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$token</code></span> )',
  'strtolower' => '<span class="type">string</span> <span class="methodname">strtolower</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'strtotime' => '<span class="type">int</span> <span class="methodname">strtotime</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$time</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$now</code><span class="initializer">= time()</span></span> ] )',
  'strtoupper' => '<span class="type">string</span> <span class="methodname">strtoupper</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> )',
  'strtr' => '<span class="type">string</span> <span class="methodname">strtr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$from</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to</code></span> ) <span class="type">string</span> <span class="methodname">strtr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$replace_pairs</code></span> )',
  'strval' => '<span class="type">string</span> <span class="methodname">strval</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> )',
  'str_word_count' => '<span class="type">mixed</span> <span class="methodname">str_word_count</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$format</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charlist</code></span> ]] )',
  'substr_compare' => '<span class="type">int</span> <span class="methodname">substr_compare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$main_str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$case_insensitivity</code><span class="initializer">= false</span></span> ]] )',
  'substr_count' => '<span class="type">int</span> <span class="methodname">substr_count</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$haystack</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$needle</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$offset</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ]] )',
  'substr' => '<span class="type">string</span> <span class="methodname">substr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$string</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code></span> ] )',
  'substr_replace' => '<span class="type">mixed</span> <span class="methodname">substr_replace</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$string</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$replacement</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$start</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$length</code></span> ] )',
  'svn_add' => '<span class="type">bool</span> <span class="methodname">svn_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$force</code><span class="initializer">= false</span></span> ]] )',
  'svn_auth_get_parameter' => '<span class="type">string</span> <span class="methodname">svn_auth_get_parameter</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'svn_auth_set_parameter' => '<span class="type">void</span> <span class="methodname">svn_auth_set_parameter</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'svn_blame' => '<span class="type">array</span> <span class="methodname">svn_blame</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repository_url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revision_no</code><span class="initializer">= SVN_REVISION_HEAD</span></span> ] )',
  'svn_cat' => '<span class="type">string</span> <span class="methodname">svn_cat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repos_url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revision_no</code></span> ] )',
  'svn_checkout' => '<span class="type">bool</span> <span class="methodname">svn_checkout</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repos</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$targetpath</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revision</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ]] )',
  'svn_cleanup' => '<span class="type">bool</span> <span class="methodname">svn_cleanup</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$workingdir</code></span> )',
  'svn_client_version' => '<span class="type">string</span> <span class="methodname">svn_client_version</span> ( <span class="methodparam">void</span> )',
  'svn_commit' => '<span class="type">array</span> <span class="methodname">svn_commit</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$log</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$targets</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= true</span></span> ] )',
  'svn_delete' => '<span class="type">bool</span> <span class="methodname">svn_delete</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$force</code><span class="initializer">= false</span></span> ] )',
  'svn_diff' => '<span class="type">array</span> <span class="methodname">svn_diff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path1</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rev1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rev2</code></span> )',
  'svn_export' => '<span class="type">bool</span> <span class="methodname">svn_export</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$frompath</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$topath</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$working_copy</code><span class="initializer">= true</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revision_no</code><span class="initializer">= -1</span></span> ]] )',
  'svn_fs_abort_txn' => '<span class="type">bool</span> <span class="methodname">svn_fs_abort_txn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$txn</code></span> )',
  'svn_fs_apply_text' => '<span class="type">resource</span> <span class="methodname">svn_fs_apply_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_begin_txn2' => '<span class="type">resource</span> <span class="methodname">svn_fs_begin_txn2</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$repos</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rev</code></span> )',
  'svn_fs_change_node_prop' => '<span class="type">bool</span> <span class="methodname">svn_fs_change_node_prop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'svn_fs_check_path' => '<span class="type">int</span> <span class="methodname">svn_fs_check_path</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_contents_changed' => '<span class="type">bool</span> <span class="methodname">svn_fs_contents_changed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path1</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root2</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path2</code></span> )',
  'svn_fs_copy' => '<span class="type">bool</span> <span class="methodname">svn_fs_copy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$from_root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$from_path</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$to_root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$to_path</code></span> )',
  'svn_fs_delete' => '<span class="type">bool</span> <span class="methodname">svn_fs_delete</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_dir_entries' => '<span class="type">array</span> <span class="methodname">svn_fs_dir_entries</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_file_contents' => '<span class="type">resource</span> <span class="methodname">svn_fs_file_contents</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_file_length' => '<span class="type">int</span> <span class="methodname">svn_fs_file_length</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_is_dir' => '<span class="type">bool</span> <span class="methodname">svn_fs_is_dir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_is_file' => '<span class="type">bool</span> <span class="methodname">svn_fs_is_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_make_dir' => '<span class="type">bool</span> <span class="methodname">svn_fs_make_dir</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_make_file' => '<span class="type">bool</span> <span class="methodname">svn_fs_make_file</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_node_created_rev' => '<span class="type">int</span> <span class="methodname">svn_fs_node_created_rev</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_fs_node_prop' => '<span class="type">string</span> <span class="methodname">svn_fs_node_prop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fsroot</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$propname</code></span> )',
  'svn_fs_props_changed' => '<span class="type">bool</span> <span class="methodname">svn_fs_props_changed</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path1</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$root2</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$path2</code></span> )',
  'svn_fs_revision_prop' => '<span class="type">string</span> <span class="methodname">svn_fs_revision_prop</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fs</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$revnum</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$propname</code></span> )',
  'svn_fs_revision_root' => '<span class="type">resource</span> <span class="methodname">svn_fs_revision_root</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fs</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$revnum</code></span> )',
  'svn_fs_txn_root' => '<span class="type">resource</span> <span class="methodname">svn_fs_txn_root</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$txn</code></span> )',
  'svn_fs_youngest_rev' => '<span class="type">int</span> <span class="methodname">svn_fs_youngest_rev</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$fs</code></span> )',
  'svn_import' => '<span class="type">bool</span> <span class="methodname">svn_import</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$nonrecursive</code></span> )',
  'svn_log' => '<span class="type">array</span> <span class="methodname">svn_log</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repos_url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$start_revision</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$end_revision</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$limit</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY</span></span> ]]]] )',
  'svn_ls' => '<span class="type">array</span> <span class="methodname">svn_ls</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repos_url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revision_no</code><span class="initializer">= SVN_REVISION_HEAD</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recurse</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$peg</code><span class="initializer">= false</span></span> ]]] )',
  'svn_mkdir' => '<span class="type">bool</span> <span class="methodname">svn_mkdir</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$log_message</code></span> ] )',
  'svn_repos_create' => '<span class="type">resource</span> <span class="methodname">svn_repos_create</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$config</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$fsconfig</code></span> ]] )',
  'svn_repos_fs_begin_txn_for_commit' => '<span class="type">resource</span> <span class="methodname">svn_repos_fs_begin_txn_for_commit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$repos</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$rev</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$author</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$log_msg</code></span> )',
  'svn_repos_fs_commit_txn' => '<span class="type">int</span> <span class="methodname">svn_repos_fs_commit_txn</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$txn</code></span> )',
  'svn_repos_fs' => '<span class="type">resource</span> <span class="methodname">svn_repos_fs</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$repos</code></span> )',
  'svn_repos_hotcopy' => '<span class="type">bool</span> <span class="methodname">svn_repos_hotcopy</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$repospath</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$destpath</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$cleanlogs</code></span> )',
  'svn_repos_open' => '<span class="type">resource</span> <span class="methodname">svn_repos_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_repos_recover' => '<span class="type">bool</span> <span class="methodname">svn_repos_recover</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> )',
  'svn_revert' => '<span class="type">bool</span> <span class="methodname">svn_revert</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recursive</code><span class="initializer">= false</span></span> ] )',
  'svn_status' => '<span class="type">array</span> <span class="methodname">svn_status</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'svn_update' => '<span class="type">int</span> <span class="methodname">svn_update</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$path</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$revno</code><span class="initializer">= SVN_REVISION_HEAD</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$recurse</code><span class="initializer">= true</span></span> ]] )',
  'swf_actiongeturl' => '<span class="type">void</span> <span class="methodname">swf_actiongeturl</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> )',
  'swf_actiongotoframe' => '<span class="type">void</span> <span class="methodname">swf_actiongotoframe</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$framenumber</code></span> )',
  'swf_actiongotolabel' => '<span class="type">void</span> <span class="methodname">swf_actiongotolabel</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$label</code></span> )',
  'swf_actionnextframe' => '<span class="type">void</span> <span class="methodname">swf_actionnextframe</span> ( <span class="methodparam">void</span> )',
  'swf_actionplay' => '<span class="type">void</span> <span class="methodname">swf_actionplay</span> ( <span class="methodparam">void</span> )',
  'swf_actionprevframe' => '<span class="type">void</span> <span class="methodname">swf_actionprevframe</span> ( <span class="methodparam">void</span> )',
  'swf_actionsettarget' => '<span class="type">void</span> <span class="methodname">swf_actionsettarget</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> )',
  'swf_actionstop' => '<span class="type">void</span> <span class="methodname">swf_actionstop</span> ( <span class="methodparam">void</span> )',
  'swf_actiontogglequality' => '<span class="type">void</span> <span class="methodname">swf_actiontogglequality</span> ( <span class="methodparam">void</span> )',
  'swf_actionwaitforframe' => '<span class="type">void</span> <span class="methodname">swf_actionwaitforframe</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$framenumber</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$skipcount</code></span> )',
  'swf_addbuttonrecord' => '<span class="type">void</span> <span class="methodname">swf_addbuttonrecord</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$states</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$shapeid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code></span> )',
  'swf_addcolor' => '<span class="type">void</span> <span class="methodname">swf_addcolor</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> )',
  'swf_closefile' => '<span class="type">void</span> <span class="methodname">swf_closefile</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$return_file</code></span> ] )',
  'swf_definebitmap' => '<span class="type">void</span> <span class="methodname">swf_definebitmap</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$image_name</code></span> )',
  'swf_definefont' => '<span class="type">void</span> <span class="methodname">swf_definefont</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$fontname</code></span> )',
  'swf_defineline' => '<span class="type">void</span> <span class="methodname">swf_defineline</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'swf_definepoly' => '<span class="type">void</span> <span class="methodname">swf_definepoly</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$coords</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$npoints</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'swf_definerect' => '<span class="type">void</span> <span class="methodname">swf_definerect</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'swf_definetext' => '<span class="type">void</span> <span class="methodname">swf_definetext</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$docenter</code></span> )',
  'swf_endbutton' => '<span class="type">void</span> <span class="methodname">swf_endbutton</span> ( <span class="methodparam">void</span> )',
  'swf_enddoaction' => '<span class="type">void</span> <span class="methodname">swf_enddoaction</span> ( <span class="methodparam">void</span> )',
  'swf_endshape' => '<span class="type">void</span> <span class="methodname">swf_endshape</span> ( <span class="methodparam">void</span> )',
  'swf_endsymbol' => '<span class="type">void</span> <span class="methodname">swf_endsymbol</span> ( <span class="methodparam">void</span> )',
  'swf_fontsize' => '<span class="type">void</span> <span class="methodname">swf_fontsize</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$size</code></span> )',
  'swf_fontslant' => '<span class="type">void</span> <span class="methodname">swf_fontslant</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$slant</code></span> )',
  'swf_fonttracking' => '<span class="type">void</span> <span class="methodname">swf_fonttracking</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$tracking</code></span> )',
  'swf_getbitmapinfo' => '<span class="type">array</span> <span class="methodname">swf_getbitmapinfo</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bitmapid</code></span> )',
  'swf_getfontinfo' => '<span class="type">array</span> <span class="methodname">swf_getfontinfo</span> ( <span class="methodparam">void</span> )',
  'swf_getframe' => '<span class="type">int</span> <span class="methodname">swf_getframe</span> ( <span class="methodparam">void</span> )',
  'swf_labelframe' => '<span class="type">void</span> <span class="methodname">swf_labelframe</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'swf_lookat' => '<span class="type">void</span> <span class="methodname">swf_lookat</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$view_x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$view_y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$view_z</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$reference_x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$reference_y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$reference_z</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$twist</code></span> )',
  'swf_modifyobject' => '<span class="type">void</span> <span class="methodname">swf_modifyobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$how</code></span> )',
  'swf_mulcolor' => '<span class="type">void</span> <span class="methodname">swf_mulcolor</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> )',
  'swf_nextid' => '<span class="type">int</span> <span class="methodname">swf_nextid</span> ( <span class="methodparam">void</span> )',
  'swf_oncondition' => '<span class="type">void</span> <span class="methodname">swf_oncondition</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$transition</code></span> )',
  'swf_openfile' => '<span class="type">void</span> <span class="methodname">swf_openfile</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$height</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$framerate</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> )',
  'swf_ortho2' => '<span class="type">void</span> <span class="methodname">swf_ortho2</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmax</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymax</code></span> )',
  'swf_ortho' => '<span class="type">void</span> <span class="methodname">swf_ortho</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmax</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymax</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$zmin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$zmax</code></span> )',
  'swf_perspective' => '<span class="type">void</span> <span class="methodname">swf_perspective</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$fovy</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$aspect</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$near</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$far</code></span> )',
  'swf_placeobject' => '<span class="type">void</span> <span class="methodname">swf_placeobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code></span> )',
  'swf_polarview' => '<span class="type">void</span> <span class="methodname">swf_polarview</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$dist</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$azimuth</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$incidence</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$twist</code></span> )',
  'swf_popmatrix' => '<span class="type">void</span> <span class="methodname">swf_popmatrix</span> ( <span class="methodparam">void</span> )',
  'swf_posround' => '<span class="type">void</span> <span class="methodname">swf_posround</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$round</code></span> )',
  'swf_pushmatrix' => '<span class="type">void</span> <span class="methodname">swf_pushmatrix</span> ( <span class="methodparam">void</span> )',
  'swf_removeobject' => '<span class="type">void</span> <span class="methodname">swf_removeobject</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$depth</code></span> )',
  'swf_rotate' => '<span class="type">void</span> <span class="methodname">swf_rotate</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$angle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$axis</code></span> )',
  'swf_scale' => '<span class="type">void</span> <span class="methodname">swf_scale</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$z</code></span> )',
  'swf_setfont' => '<span class="type">void</span> <span class="methodname">swf_setfont</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$fontid</code></span> )',
  'swf_setframe' => '<span class="type">void</span> <span class="methodname">swf_setframe</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$framenumber</code></span> )',
  'swf_shapearc' => '<span class="type">void</span> <span class="methodname">swf_shapearc</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ang1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ang2</code></span> )',
  'swf_shapecurveto3' => '<span class="type">void</span> <span class="methodname">swf_shapecurveto3</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x3</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y3</code></span> )',
  'swf_shapecurveto' => '<span class="type">void</span> <span class="methodname">swf_shapecurveto</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y1</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$x2</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y2</code></span> )',
  'swf_shapefillbitmapclip' => '<span class="type">void</span> <span class="methodname">swf_shapefillbitmapclip</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bitmapid</code></span> )',
  'swf_shapefillbitmaptile' => '<span class="type">void</span> <span class="methodname">swf_shapefillbitmaptile</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$bitmapid</code></span> )',
  'swf_shapefilloff' => '<span class="type">void</span> <span class="methodname">swf_shapefilloff</span> ( <span class="methodparam">void</span> )',
  'swf_shapefillsolid' => '<span class="type">void</span> <span class="methodname">swf_shapefillsolid</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> )',
  'swf_shapelinesolid' => '<span class="type">void</span> <span class="methodname">swf_shapelinesolid</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$r</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$g</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$b</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$a</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$width</code></span> )',
  'swf_shapelineto' => '<span class="type">void</span> <span class="methodname">swf_shapelineto</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'swf_shapemoveto' => '<span class="type">void</span> <span class="methodname">swf_shapemoveto</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> )',
  'swf_showframe' => '<span class="type">void</span> <span class="methodname">swf_showframe</span> ( <span class="methodparam">void</span> )',
  'swf_startbutton' => '<span class="type">void</span> <span class="methodname">swf_startbutton</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'swf_startdoaction' => '<span class="type">void</span> <span class="methodname">swf_startdoaction</span> ( <span class="methodparam">void</span> )',
  'swf_startshape' => '<span class="type">void</span> <span class="methodname">swf_startshape</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> )',
  'swf_startsymbol' => '<span class="type">void</span> <span class="methodname">swf_startsymbol</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$objid</code></span> )',
  'swf_textwidth' => '<span class="type">float</span> <span class="methodname">swf_textwidth</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'swf_translate' => '<span class="type">void</span> <span class="methodname">swf_translate</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$x</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$y</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$z</code></span> )',
  'swf_viewport' => '<span class="type">void</span> <span class="methodname">swf_viewport</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$xmax</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymin</code></span> , <span class="methodparam"><span class="type">float</span> <code class="parameter">$ymax</code></span> )',
  'sybase_affected_rows' => '<span class="type">int</span> <span class="methodname">sybase_affected_rows</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'sybase_close' => '<span class="type">bool</span> <span class="methodname">sybase_close</span> ([ <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'sybase_connect' => '<span class="type">resource</span> <span class="methodname">sybase_connect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$servername</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$appname</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$new</code><span class="initializer">= false</span></span> ]]]]]] )',
  'sybase_data_seek' => '<span class="type">bool</span> <span class="methodname">sybase_data_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result_identifier</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row_number</code></span> )',
  'sybase_deadlock_retry_count' => '<span class="type">void</span> <span class="methodname">sybase_deadlock_retry_count</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$retry_count</code></span> )',
  'sybase_fetch_array' => '<span class="type">array</span> <span class="methodname">sybase_fetch_array</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_fetch_assoc' => '<span class="type">array</span> <span class="methodname">sybase_fetch_assoc</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_fetch_field' => '<span class="type">object</span> <span class="methodname">sybase_fetch_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code><span class="initializer">= -1</span></span> ] )',
  'sybase_fetch_object' => '<span class="type">object</span> <span class="methodname">sybase_fetch_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$object</code></span> ] )',
  'sybase_fetch_row' => '<span class="type">array</span> <span class="methodname">sybase_fetch_row</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_field_seek' => '<span class="type">bool</span> <span class="methodname">sybase_field_seek</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field_offset</code></span> )',
  'sybase_free_result' => '<span class="type">bool</span> <span class="methodname">sybase_free_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_get_last_message' => '<span class="type">string</span> <span class="methodname">sybase_get_last_message</span> ( <span class="methodparam">void</span> )',
  'sybase_min_client_severity' => '<span class="type">void</span> <span class="methodname">sybase_min_client_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'sybase_min_error_severity' => '<span class="type">void</span> <span class="methodname">sybase_min_error_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'sybase_min_message_severity' => '<span class="type">void</span> <span class="methodname">sybase_min_message_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'sybase_min_server_severity' => '<span class="type">void</span> <span class="methodname">sybase_min_server_severity</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$severity</code></span> )',
  'sybase_num_fields' => '<span class="type">int</span> <span class="methodname">sybase_num_fields</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_num_rows' => '<span class="type">int</span> <span class="methodname">sybase_num_rows</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> )',
  'sybase_pconnect' => '<span class="type">resource</span> <span class="methodname">sybase_pconnect</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$servername</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$username</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$appname</code></span> ]]]]] )',
  'sybase_query' => '<span class="type">mixed</span> <span class="methodname">sybase_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'sybase_result' => '<span class="type">string</span> <span class="methodname">sybase_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$result</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$field</code></span> )',
  'sybase_select_db' => '<span class="type">bool</span> <span class="methodname">sybase_select_db</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$database_name</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'sybase_set_message_handler' => '<span class="type">bool</span> <span class="methodname">sybase_set_message_handler</span> ( <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> ] )',
  'sybase_unbuffered_query' => '<span class="type">resource</span> <span class="methodname">sybase_unbuffered_query</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$link_identifier</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$store_result</code></span> ] )',
  'symlink' => '<span class="type">bool</span> <span class="methodname">symlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$link</code></span> )',
  'sys_getloadavg' => '<span class="type">array</span> <span class="methodname">sys_getloadavg</span> ( <span class="methodparam">void</span> )',
  'sys_get_temp_dir' => '<span class="type">string</span> <span class="methodname">sys_get_temp_dir</span> ( <span class="methodparam">void</span> )',
  'syslog' => '<span class="type">bool</span> <span class="methodname">syslog</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$priority</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$message</code></span> )',
  'system' => '<span class="type">string</span> <span class="methodname">system</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$command</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$return_var</code></span> ] )',
  'taint' => '<span class="type">bool</span> <span class="methodname">taint</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ] )',
  'tanh' => '<span class="type">float</span> <span class="methodname">tanh</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'tan' => '<span class="type">float</span> <span class="methodname">tan</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$arg</code></span> )',
  'tcpwrap_check' => '<span class="type">bool</span> <span class="methodname">tcpwrap_check</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$daemon</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$address</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$nodns</code><span class="initializer">= false</span></span> ]] )',
  'tempnam' => '<span class="type">string</span> <span class="methodname">tempnam</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dir</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> )',
  'textdomain' => '<span class="type">string</span> <span class="methodname">textdomain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$text_domain</code></span> )',
  'tidy_access_count' => '<span class="type">int</span> <span class="methodname">tidy_access_count</span> ( <span class="methodparam"><span class="type">tidy</span> <code class="parameter">$object</code></span> )',
  'tidy_config_count' => '<span class="type">int</span> <span class="methodname">tidy_config_count</span> ( <span class="methodparam"><span class="type">tidy</span> <code class="parameter">$object</code></span> )',
  'tidy_error_count' => '<span class="type">int</span> <span class="methodname">tidy_error_count</span> ( <span class="methodparam"><span class="type">tidy</span> <code class="parameter">$object</code></span> )',
  'tidy_get_output' => '<span class="type">string</span> <span class="methodname">tidy_get_output</span> ( <span class="methodparam"><span class="type">tidy</span> <code class="parameter">$object</code></span> )',
  'tidy_load_config' => '<span class="type">void</span> <span class="methodname">tidy_load_config</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'tidy_reset_config' => '<span class="type">bool</span> <span class="methodname">tidy_reset_config</span> ( <span class="methodparam">void</span> )',
  'tidy_save_config' => '<span class="type">bool</span> <span class="methodname">tidy_save_config</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'tidy_set_encoding' => '<span class="type">bool</span> <span class="methodname">tidy_set_encoding</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'tidy_setopt' => '<span class="type">bool</span> <span class="methodname">tidy_setopt</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'tidy_warning_count' => '<span class="type">int</span> <span class="methodname">tidy_warning_count</span> ( <span class="methodparam"><span class="type">tidy</span> <code class="parameter">$object</code></span> )',
  'time' => '<span class="type">int</span> <span class="methodname">time</span> ( <span class="methodparam">void</span> )',
  'time_nanosleep' => '<span class="type">mixed</span> <span class="methodname">time_nanosleep</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$seconds</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$nanoseconds</code></span> )',
  'time_sleep_until' => '<span class="type">bool</span> <span class="methodname">time_sleep_until</span> ( <span class="methodparam"><span class="type">float</span> <code class="parameter">$timestamp</code></span> )',
  'timezone_abbreviations_list' => '',
  'timezone_identifiers_list' => '',
  'timezone_location_get' => '',
  'timezone_name_from_abbr' => '<span class="type">string</span> <span class="methodname">timezone_name_from_abbr</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$abbr</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$gmtOffset</code><span class="initializer">= -1</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$isdst</code><span class="initializer">= -1</span></span> ]] )',
  'timezone_name_get' => '',
  'timezone_offset_get' => '',
  'timezone_open' => '',
  'timezone_transitions_get' => '',
  'timezone_version_get' => '<span class="type">string</span> <span class="methodname">timezone_version_get</span> ( <span class="methodparam">void</span> )',
  'tmpfile' => '<span class="type">resource</span> <span class="methodname">tmpfile</span> ( <span class="methodparam">void</span> )',
  'token_get_all' => '<span class="type">array</span> <span class="methodname">token_get_all</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$source</code></span> )',
  'token_name' => '<span class="type">string</span> <span class="methodname">token_name</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$token</code></span> )',
  'touch' => '<span class="type">bool</span> <span class="methodname">touch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$time</code><span class="initializer">= time()</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$atime</code></span> ]] )',
  'trader_acos' => '<span class="type">array</span> <span class="methodname">trader_acos</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_add' => '<span class="type">array</span> <span class="methodname">trader_add</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> )',
  'trader_ad' => '<span class="type">array</span> <span class="methodname">trader_ad</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$volume</code></span> )',
  'trader_adosc' => '<span class="type">array</span> <span class="methodname">trader_adosc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$volume</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowPeriod</code></span> ]] )',
  'trader_adx' => '<span class="type">array</span> <span class="methodname">trader_adx</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_adxr' => '<span class="type">array</span> <span class="methodname">trader_adxr</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_apo' => '<span class="type">array</span> <span class="methodname">trader_apo</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$mAType</code></span> ]]] )',
  'trader_aroon' => '<span class="type">array</span> <span class="methodname">trader_aroon</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_aroonosc' => '<span class="type">array</span> <span class="methodname">trader_aroonosc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_asin' => '<span class="type">array</span> <span class="methodname">trader_asin</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_atan' => '<span class="type">array</span> <span class="methodname">trader_atan</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_atr' => '<span class="type">array</span> <span class="methodname">trader_atr</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_avgprice' => '<span class="type">array</span> <span class="methodname">trader_avgprice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_bbands' => '<span class="type">array</span> <span class="methodname">trader_bbands</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$nbDevUp</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$nbDevDn</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$mAType</code></span> ]]]] )',
  'trader_beta' => '<span class="type">array</span> <span class="methodname">trader_beta</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_bop' => '<span class="type">array</span> <span class="methodname">trader_bop</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cci' => '<span class="type">array</span> <span class="methodname">trader_cci</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_cdl2crows' => '<span class="type">array</span> <span class="methodname">trader_cdl2crows</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3blackcrows' => '<span class="type">array</span> <span class="methodname">trader_cdl3blackcrows</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3inside' => '<span class="type">array</span> <span class="methodname">trader_cdl3inside</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3linestrike' => '<span class="type">array</span> <span class="methodname">trader_cdl3linestrike</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3outside' => '<span class="type">array</span> <span class="methodname">trader_cdl3outside</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3starsinsouth' => '<span class="type">array</span> <span class="methodname">trader_cdl3starsinsouth</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdl3whitesoldiers' => '<span class="type">array</span> <span class="methodname">trader_cdl3whitesoldiers</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlabandonedbaby' => '<span class="type">array</span> <span class="methodname">trader_cdlabandonedbaby</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdladvanceblock' => '<span class="type">array</span> <span class="methodname">trader_cdladvanceblock</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlbelthold' => '<span class="type">array</span> <span class="methodname">trader_cdlbelthold</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlbreakaway' => '<span class="type">array</span> <span class="methodname">trader_cdlbreakaway</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlclosingmarubozu' => '<span class="type">array</span> <span class="methodname">trader_cdlclosingmarubozu</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlconcealbabyswall' => '<span class="type">array</span> <span class="methodname">trader_cdlconcealbabyswall</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlcounterattack' => '<span class="type">array</span> <span class="methodname">trader_cdlcounterattack</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdldarkcloudcover' => '<span class="type">array</span> <span class="methodname">trader_cdldarkcloudcover</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdldoji' => '<span class="type">array</span> <span class="methodname">trader_cdldoji</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdldojistar' => '<span class="type">array</span> <span class="methodname">trader_cdldojistar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdldragonflydoji' => '<span class="type">array</span> <span class="methodname">trader_cdldragonflydoji</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlengulfing' => '<span class="type">array</span> <span class="methodname">trader_cdlengulfing</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdleveningdojistar' => '<span class="type">array</span> <span class="methodname">trader_cdleveningdojistar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdleveningstar' => '<span class="type">array</span> <span class="methodname">trader_cdleveningstar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdlgapsidesidewhite' => '<span class="type">array</span> <span class="methodname">trader_cdlgapsidesidewhite</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlgravestonedoji' => '<span class="type">array</span> <span class="methodname">trader_cdlgravestonedoji</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhammer' => '<span class="type">array</span> <span class="methodname">trader_cdlhammer</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhangingman' => '<span class="type">array</span> <span class="methodname">trader_cdlhangingman</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlharamicross' => '<span class="type">array</span> <span class="methodname">trader_cdlharamicross</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlharami' => '<span class="type">array</span> <span class="methodname">trader_cdlharami</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhighwave' => '<span class="type">array</span> <span class="methodname">trader_cdlhighwave</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhikkake' => '<span class="type">array</span> <span class="methodname">trader_cdlhikkake</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhikkakemod' => '<span class="type">array</span> <span class="methodname">trader_cdlhikkakemod</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlhomingpigeon' => '<span class="type">array</span> <span class="methodname">trader_cdlhomingpigeon</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlidentical3crows' => '<span class="type">array</span> <span class="methodname">trader_cdlidentical3crows</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlinneck' => '<span class="type">array</span> <span class="methodname">trader_cdlinneck</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlinvertedhammer' => '<span class="type">array</span> <span class="methodname">trader_cdlinvertedhammer</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlkickingbylength' => '<span class="type">array</span> <span class="methodname">trader_cdlkickingbylength</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlkicking' => '<span class="type">array</span> <span class="methodname">trader_cdlkicking</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlladderbottom' => '<span class="type">array</span> <span class="methodname">trader_cdlladderbottom</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdllongleggeddoji' => '<span class="type">array</span> <span class="methodname">trader_cdllongleggeddoji</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdllongline' => '<span class="type">array</span> <span class="methodname">trader_cdllongline</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlmarubozu' => '<span class="type">array</span> <span class="methodname">trader_cdlmarubozu</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlmatchinglow' => '<span class="type">array</span> <span class="methodname">trader_cdlmatchinglow</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlmathold' => '<span class="type">array</span> <span class="methodname">trader_cdlmathold</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdlmorningdojistar' => '<span class="type">array</span> <span class="methodname">trader_cdlmorningdojistar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdlmorningstar' => '<span class="type">array</span> <span class="methodname">trader_cdlmorningstar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$penetration</code></span> ] )',
  'trader_cdlonneck' => '<span class="type">array</span> <span class="methodname">trader_cdlonneck</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlpiercing' => '<span class="type">array</span> <span class="methodname">trader_cdlpiercing</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlrickshawman' => '<span class="type">array</span> <span class="methodname">trader_cdlrickshawman</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlrisefall3methods' => '<span class="type">array</span> <span class="methodname">trader_cdlrisefall3methods</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlseparatinglines' => '<span class="type">array</span> <span class="methodname">trader_cdlseparatinglines</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlshootingstar' => '<span class="type">array</span> <span class="methodname">trader_cdlshootingstar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlshortline' => '<span class="type">array</span> <span class="methodname">trader_cdlshortline</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlspinningtop' => '<span class="type">array</span> <span class="methodname">trader_cdlspinningtop</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlstalledpattern' => '<span class="type">array</span> <span class="methodname">trader_cdlstalledpattern</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlsticksandwich' => '<span class="type">array</span> <span class="methodname">trader_cdlsticksandwich</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdltakuri' => '<span class="type">array</span> <span class="methodname">trader_cdltakuri</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdltasukigap' => '<span class="type">array</span> <span class="methodname">trader_cdltasukigap</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlthrusting' => '<span class="type">array</span> <span class="methodname">trader_cdlthrusting</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdltristar' => '<span class="type">array</span> <span class="methodname">trader_cdltristar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlunique3river' => '<span class="type">array</span> <span class="methodname">trader_cdlunique3river</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlupsidegap2crows' => '<span class="type">array</span> <span class="methodname">trader_cdlupsidegap2crows</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_cdlxsidegap3methods' => '<span class="type">array</span> <span class="methodname">trader_cdlxsidegap3methods</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$open</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_ceil' => '<span class="type">array</span> <span class="methodname">trader_ceil</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_cmo' => '<span class="type">array</span> <span class="methodname">trader_cmo</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_correl' => '<span class="type">array</span> <span class="methodname">trader_correl</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_cosh' => '<span class="type">array</span> <span class="methodname">trader_cosh</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_cos' => '<span class="type">array</span> <span class="methodname">trader_cos</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_dema' => '<span class="type">array</span> <span class="methodname">trader_dema</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_div' => '<span class="type">array</span> <span class="methodname">trader_div</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> )',
  'trader_dx' => '<span class="type">array</span> <span class="methodname">trader_dx</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_ema' => '<span class="type">array</span> <span class="methodname">trader_ema</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_errno' => '<span class="type">integer</span> <span class="methodname">trader_errno</span> ( <span class="methodparam">void</span> )',
  'trader_exp' => '<span class="type">array</span> <span class="methodname">trader_exp</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_floor' => '<span class="type">array</span> <span class="methodname">trader_floor</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_get_compat' => '<span class="type">integer</span> <span class="methodname">trader_get_compat</span> ( <span class="methodparam">void</span> )',
  'trader_get_unstable_period' => '<span class="type">integer</span> <span class="methodname">trader_get_unstable_period</span> ( <span class="methodparam"><span class="type">integer</span> <code class="parameter">$functionId</code></span> )',
  'trader_ht_dcperiod' => '<span class="type">array</span> <span class="methodname">trader_ht_dcperiod</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_ht_dcphase' => '<span class="type">array</span> <span class="methodname">trader_ht_dcphase</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_ht_phasor' => '<span class="type">array</span> <span class="methodname">trader_ht_phasor</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_ht_sine' => '<span class="type">array</span> <span class="methodname">trader_ht_sine</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_ht_trendline' => '<span class="type">array</span> <span class="methodname">trader_ht_trendline</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_ht_trendmode' => '<span class="type">array</span> <span class="methodname">trader_ht_trendmode</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_kama' => '<span class="type">array</span> <span class="methodname">trader_kama</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_linearreg_angle' => '<span class="type">array</span> <span class="methodname">trader_linearreg_angle</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_linearreg' => '<span class="type">array</span> <span class="methodname">trader_linearreg</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_linearreg_intercept' => '<span class="type">array</span> <span class="methodname">trader_linearreg_intercept</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_linearreg_slope' => '<span class="type">array</span> <span class="methodname">trader_linearreg_slope</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_ln' => '<span class="type">array</span> <span class="methodname">trader_ln</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_log10' => '<span class="type">array</span> <span class="methodname">trader_log10</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_macdext' => '<span class="type">array</span> <span class="methodname">trader_macdext</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastMAType</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowMAType</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$signalPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$signalMAType</code></span> ]]]]]] )',
  'trader_macdfix' => '<span class="type">array</span> <span class="methodname">trader_macdfix</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$signalPeriod</code></span> ] )',
  'trader_macd' => '<span class="type">array</span> <span class="methodname">trader_macd</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$signalPeriod</code></span> ]]] )',
  'trader_ma' => '<span class="type">array</span> <span class="methodname">trader_ma</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$mAType</code></span> ]] )',
  'trader_mama' => '<span class="type">array</span> <span class="methodname">trader_mama</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$fastLimit</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$slowLimit</code></span> ]] )',
  'trader_mavp' => '<span class="type">array</span> <span class="methodname">trader_mavp</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$periods</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$minPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$maxPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$mAType</code></span> ]]] )',
  'trader_max' => '<span class="type">array</span> <span class="methodname">trader_max</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_maxindex' => '<span class="type">array</span> <span class="methodname">trader_maxindex</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_medprice' => '<span class="type">array</span> <span class="methodname">trader_medprice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> )',
  'trader_mfi' => '<span class="type">array</span> <span class="methodname">trader_mfi</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$volume</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_midpoint' => '<span class="type">array</span> <span class="methodname">trader_midpoint</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_midprice' => '<span class="type">array</span> <span class="methodname">trader_midprice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_min' => '<span class="type">array</span> <span class="methodname">trader_min</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_minindex' => '<span class="type">array</span> <span class="methodname">trader_minindex</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_minmax' => '<span class="type">array</span> <span class="methodname">trader_minmax</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_minmaxindex' => '<span class="type">array</span> <span class="methodname">trader_minmaxindex</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_minus_di' => '<span class="type">array</span> <span class="methodname">trader_minus_di</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_minus_dm' => '<span class="type">array</span> <span class="methodname">trader_minus_dm</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_mom' => '<span class="type">array</span> <span class="methodname">trader_mom</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_mult' => '<span class="type">array</span> <span class="methodname">trader_mult</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> )',
  'trader_natr' => '<span class="type">array</span> <span class="methodname">trader_natr</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_obv' => '<span class="type">array</span> <span class="methodname">trader_obv</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$volume</code></span> )',
  'trader_plus_di' => '<span class="type">array</span> <span class="methodname">trader_plus_di</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_plus_dm' => '<span class="type">array</span> <span class="methodname">trader_plus_dm</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_ppo' => '<span class="type">array</span> <span class="methodname">trader_ppo</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowPeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$mAType</code></span> ]]] )',
  'trader_roc' => '<span class="type">array</span> <span class="methodname">trader_roc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_rocp' => '<span class="type">array</span> <span class="methodname">trader_rocp</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_rocr100' => '<span class="type">array</span> <span class="methodname">trader_rocr100</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_rocr' => '<span class="type">array</span> <span class="methodname">trader_rocr</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_rsi' => '<span class="type">array</span> <span class="methodname">trader_rsi</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_sarext' => '<span class="type">array</span> <span class="methodname">trader_sarext</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$startValue</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$offsetOnReverse</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationInitLong</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationLong</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationMaxLong</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationInitShort</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationShort</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$accelerationMaxShort</code></span> ]]]]]]]] )',
  'trader_sar' => '<span class="type">array</span> <span class="methodname">trader_sar</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$acceleration</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$maximum</code></span> ]] )',
  'trader_set_compat' => '<span class="type">void</span> <span class="methodname">trader_set_compat</span> ( <span class="methodparam"><span class="type">integer</span> <code class="parameter">$compatId</code></span> )',
  'trader_set_unstable_period' => '<span class="type">void</span> <span class="methodname">trader_set_unstable_period</span> ( <span class="methodparam"><span class="type">integer</span> <code class="parameter">$functionId</code></span> , <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> )',
  'trader_sinh' => '<span class="type">array</span> <span class="methodname">trader_sinh</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_sin' => '<span class="type">array</span> <span class="methodname">trader_sin</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_sma' => '<span class="type">array</span> <span class="methodname">trader_sma</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_sqrt' => '<span class="type">array</span> <span class="methodname">trader_sqrt</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_stddev' => '<span class="type">array</span> <span class="methodname">trader_stddev</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$nbDev</code></span> ]] )',
  'trader_stochf' => '<span class="type">array</span> <span class="methodname">trader_stochf</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastK_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastD_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastD_MAType</code></span> ]]] )',
  'trader_stoch' => '<span class="type">array</span> <span class="methodname">trader_stoch</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastK_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowK_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowK_MAType</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowD_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$slowD_MAType</code></span> ]]]]] )',
  'trader_stochrsi' => '<span class="type">array</span> <span class="methodname">trader_stochrsi</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastK_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastD_Period</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$fastD_MAType</code></span> ]]]] )',
  'trader_sub' => '<span class="type">array</span> <span class="methodname">trader_sub</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real0</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$real1</code></span> )',
  'trader_sum' => '<span class="type">array</span> <span class="methodname">trader_sum</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_t3' => '<span class="type">array</span> <span class="methodname">trader_t3</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$vFactor</code></span> ]] )',
  'trader_tanh' => '<span class="type">array</span> <span class="methodname">trader_tanh</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_tan' => '<span class="type">array</span> <span class="methodname">trader_tan</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> )',
  'trader_tema' => '<span class="type">array</span> <span class="methodname">trader_tema</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_trange' => '<span class="type">array</span> <span class="methodname">trader_trange</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_trima' => '<span class="type">array</span> <span class="methodname">trader_trima</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_trix' => '<span class="type">array</span> <span class="methodname">trader_trix</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_tsf' => '<span class="type">array</span> <span class="methodname">trader_tsf</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_typprice' => '<span class="type">array</span> <span class="methodname">trader_typprice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_ultosc' => '<span class="type">array</span> <span class="methodname">trader_ultosc</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod1</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod2</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod3</code></span> ]]] )',
  'trader_var' => '<span class="type">array</span> <span class="methodname">trader_var</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> [, <span class="methodparam"><span class="type">float</span> <code class="parameter">$nbDev</code></span> ]] )',
  'trader_wclprice' => '<span class="type">array</span> <span class="methodname">trader_wclprice</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> )',
  'trader_willr' => '<span class="type">array</span> <span class="methodname">trader_willr</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$high</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$low</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$close</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trader_wma' => '<span class="type">array</span> <span class="methodname">trader_wma</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$real</code></span> [, <span class="methodparam"><span class="type">integer</span> <code class="parameter">$timePeriod</code></span> ] )',
  'trait_exists' => '<span class="type">bool</span> <span class="methodname">trait_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$traitname</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$autoload</code></span> ] )',
  'trigger_error' => '<span class="type">bool</span> <span class="methodname">trigger_error</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$error_msg</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_type</code><span class="initializer">= E_USER_NOTICE</span></span> ] )',
  'trim' => '<span class="type">string</span> <span class="methodname">trim</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$charlist</code><span class="initializer">= &quot; \t\n\r\0\x0B&quot;</span></span> ] )',
  'uasort' => '<span class="type">bool</span> <span class="methodname">uasort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )',
  'ucfirst' => '<span class="type">string</span> <span class="methodname">ucfirst</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'ucwords' => '<span class="type">string</span> <span class="methodname">ucwords</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'udm_add_search_limit' => '<span class="type">bool</span> <span class="methodname">udm_add_search_limit</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$var</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val</code></span> )',
  'udm_alloc_agent_array' => '<span class="type">resource</span> <span class="methodname">udm_alloc_agent_array</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$databases</code></span> )',
  'udm_alloc_agent' => '<span class="type">resource</span> <span class="methodname">udm_alloc_agent</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbaddr</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$dbmode</code></span> ] )',
  'udm_api_version' => '<span class="type">int</span> <span class="methodname">udm_api_version</span> ( <span class="methodparam">void</span> )',
  'udm_cat_list' => '<span class="type">array</span> <span class="methodname">udm_cat_list</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$category</code></span> )',
  'udm_cat_path' => '<span class="type">array</span> <span class="methodname">udm_cat_path</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$category</code></span> )',
  'udm_check_charset' => '<span class="type">bool</span> <span class="methodname">udm_check_charset</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$charset</code></span> )',
  'udm_check_stored' => '<span class="type">int</span> <span class="methodname">udm_check_stored</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$doc_id</code></span> )',
  'udm_clear_search_limits' => '<span class="type">bool</span> <span class="methodname">udm_clear_search_limits</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> )',
  'udm_close_stored' => '<span class="type">int</span> <span class="methodname">udm_close_stored</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$link</code></span> )',
  'udm_crc32' => '<span class="type">int</span> <span class="methodname">udm_crc32</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'udm_errno' => '<span class="type">int</span> <span class="methodname">udm_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> )',
  'udm_error' => '<span class="type">string</span> <span class="methodname">udm_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> )',
  'udm_find' => '<span class="type">resource</span> <span class="methodname">udm_find</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'udm_free_agent' => '<span class="type">int</span> <span class="methodname">udm_free_agent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> )',
  'udm_free_ispell_data' => '<span class="type">bool</span> <span class="methodname">udm_free_ispell_data</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$agent</code></span> )',
  'udm_free_res' => '<span class="type">bool</span> <span class="methodname">udm_free_res</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$res</code></span> )',
  'udm_get_doc_count' => '<span class="type">int</span> <span class="methodname">udm_get_doc_count</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> )',
  'udm_get_res_field' => '<span class="type">string</span> <span class="methodname">udm_get_res_field</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$res</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$row</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$field</code></span> )',
  'udm_get_res_param' => '<span class="type">string</span> <span class="methodname">udm_get_res_param</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$res</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$param</code></span> )',
  'udm_hash32' => '<span class="type">int</span> <span class="methodname">udm_hash32</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'udm_load_ispell_data' => '<span class="type">bool</span> <span class="methodname">udm_load_ispell_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$var</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val2</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$flag</code></span> )',
  'udm_open_stored' => '<span class="type">int</span> <span class="methodname">udm_open_stored</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$storedaddr</code></span> )',
  'udm_set_agent_param' => '<span class="type">bool</span> <span class="methodname">udm_set_agent_param</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$agent</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$var</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$val</code></span> )',
  'uksort' => '<span class="type">bool</span> <span class="methodname">uksort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$key_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'umask' => '<span class="type">int</span> <span class="methodname">umask</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$mask</code></span> ] )',
  'uniqid' => '<span class="type">string</span> <span class="methodname">uniqid</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code><span class="initializer">= &quot;&quot;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$more_entropy</code><span class="initializer">= false</span></span> ]] )',
  'unixtojd' => '<span class="type">int</span> <span class="methodname">unixtojd</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code><span class="initializer">= time()</span></span> ] )',
  'unlink' => '<span class="type">bool</span> <span class="methodname">unlink</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">resource</span> <code class="parameter">$context</code></span> ] )',
  'unpack' => '<span class="type">array</span> <span class="methodname">unpack</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'unregister_tick_function' => '<span class="type">void</span> <span class="methodname">unregister_tick_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> )',
  'unserialize' => '<span class="type">mixed</span> <span class="methodname">unserialize</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'unset' => '<span class="type">void</span> <span class="methodname">unset</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'untaint' => '<span class="type">bool</span> <span class="methodname">untaint</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$string</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ] )',
  'urldecode' => '<span class="type">string</span> <span class="methodname">urldecode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'urlencode' => '<span class="type">string</span> <span class="methodname">urlencode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> )',
  'user_error' => '',
  'use_soap_error_handler' => '<span class="type">bool</span> <span class="methodname">use_soap_error_handler</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$handler</code><span class="initializer">= true</span></span> ] )',
  'usleep' => '<span class="type">void</span> <span class="methodname">usleep</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$micro_seconds</code></span> )',
  'usort' => '<span class="type">bool</span> <span class="methodname">usort</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$array</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$value_compare_func</code></span> )<span class="type">int</span> <span class="methodname"><span class="replaceable">callback</span></span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$a</code></span>, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$b</code></span> )',
  'utf8_decode' => '<span class="type">string</span> <span class="methodname">utf8_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'utf8_encode' => '<span class="type">string</span> <span class="methodname">utf8_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'var_dump' => '<span class="type">void</span> <span class="methodname">var_dump</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$expression</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'var_export' => '<span class="type">mixed</span> <span class="methodname">var_export</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$expression</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$return</code><span class="initializer">= false</span></span> ] )',
  'variant_abs' => '<span class="type">mixed</span> <span class="methodname">variant_abs</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$val</code></span> )',
  'variant_add' => '<span class="type">mixed</span> <span class="methodname">variant_add</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_and' => '<span class="type">mixed</span> <span class="methodname">variant_and</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_cast' => '<span class="type">variant</span> <span class="methodname">variant_cast</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$variant</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'variant_cat' => '<span class="type">mixed</span> <span class="methodname">variant_cat</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_cmp' => '<span class="type">int</span> <span class="methodname">variant_cmp</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$lcid</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> ]] )',
  'variant_date_from_timestamp' => '<span class="type">variant</span> <span class="methodname">variant_date_from_timestamp</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$timestamp</code></span> )',
  'variant_date_to_timestamp' => '<span class="type">int</span> <span class="methodname">variant_date_to_timestamp</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$variant</code></span> )',
  'variant_div' => '<span class="type">mixed</span> <span class="methodname">variant_div</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_eqv' => '<span class="type">mixed</span> <span class="methodname">variant_eqv</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_fix' => '<span class="type">mixed</span> <span class="methodname">variant_fix</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variant</code></span> )',
  'variant_get_type' => '<span class="type">int</span> <span class="methodname">variant_get_type</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$variant</code></span> )',
  'variant_idiv' => '<span class="type">mixed</span> <span class="methodname">variant_idiv</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_imp' => '<span class="type">mixed</span> <span class="methodname">variant_imp</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_int' => '<span class="type">mixed</span> <span class="methodname">variant_int</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variant</code></span> )',
  'variant_mod' => '<span class="type">mixed</span> <span class="methodname">variant_mod</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_mul' => '<span class="type">mixed</span> <span class="methodname">variant_mul</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_neg' => '<span class="type">mixed</span> <span class="methodname">variant_neg</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variant</code></span> )',
  'variant_not' => '<span class="type">mixed</span> <span class="methodname">variant_not</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variant</code></span> )',
  'variant_or' => '<span class="type">mixed</span> <span class="methodname">variant_or</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_pow' => '<span class="type">mixed</span> <span class="methodname">variant_pow</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_round' => '<span class="type">mixed</span> <span class="methodname">variant_round</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$variant</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$decimals</code></span> )',
  'variant_set' => '<span class="type">void</span> <span class="methodname">variant_set</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$variant</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'variant_set_type' => '<span class="type">void</span> <span class="methodname">variant_set_type</span> ( <span class="methodparam"><span class="type">variant</span> <code class="parameter">$variant</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$type</code></span> )',
  'variant_sub' => '<span class="type">mixed</span> <span class="methodname">variant_sub</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'variant_xor' => '<span class="type">mixed</span> <span class="methodname">variant_xor</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$left</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$right</code></span> )',
  'version_compare' => '<span class="type">mixed</span> <span class="methodname">version_compare</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$version1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$version2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$operator</code></span> ] )',
  'vfprintf' => '<span class="type">int</span> <span class="methodname">vfprintf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$handle</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'virtual' => '<span class="type">bool</span> <span class="methodname">virtual</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'vpopmail_add_alias_domain_ex' => '<span class="type">bool</span> <span class="methodname">vpopmail_add_alias_domain_ex</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$olddomain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$newdomain</code></span> )',
  'vpopmail_add_alias_domain' => '<span class="type">bool</span> <span class="methodname">vpopmail_add_alias_domain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$aliasdomain</code></span> )',
  'vpopmail_add_domain_ex' => '<span class="type">bool</span> <span class="methodname">vpopmail_add_domain_ex</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$passwd</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$quota</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$bounce</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$apop</code></span> ]]] )',
  'vpopmail_add_domain' => '<span class="type">bool</span> <span class="methodname">vpopmail_add_domain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dir</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$uid</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$gid</code></span> )',
  'vpopmail_add_user' => '<span class="type">bool</span> <span class="methodname">vpopmail_add_user</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$gecos</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$apop</code></span> ]] )',
  'vpopmail_alias_add' => '<span class="type">bool</span> <span class="methodname">vpopmail_alias_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$alias</code></span> )',
  'vpopmail_alias_del_domain' => '<span class="type">bool</span> <span class="methodname">vpopmail_alias_del_domain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_alias_del' => '<span class="type">bool</span> <span class="methodname">vpopmail_alias_del</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_alias_get_all' => '<span class="type">array</span> <span class="methodname">vpopmail_alias_get_all</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_alias_get' => '<span class="type">array</span> <span class="methodname">vpopmail_alias_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$alias</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_auth_user' => '<span class="type">bool</span> <span class="methodname">vpopmail_auth_user</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$apop</code></span> ] )',
  'vpopmail_del_domain_ex' => '<span class="type">bool</span> <span class="methodname">vpopmail_del_domain_ex</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_del_domain' => '<span class="type">bool</span> <span class="methodname">vpopmail_del_domain</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_del_user' => '<span class="type">bool</span> <span class="methodname">vpopmail_del_user</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> )',
  'vpopmail_error' => '<span class="type">string</span> <span class="methodname">vpopmail_error</span> ( <span class="methodparam">void</span> )',
  'vpopmail_passwd' => '<span class="type">bool</span> <span class="methodname">vpopmail_passwd</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$password</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$apop</code></span> ] )',
  'vpopmail_set_user_quota' => '<span class="type">bool</span> <span class="methodname">vpopmail_set_user_quota</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$user</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$quota</code></span> )',
  'vprintf' => '<span class="type">int</span> <span class="methodname">vprintf</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'vsprintf' => '<span class="type">string</span> <span class="methodname">vsprintf</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$format</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'w32api_deftype' => '<span class="type">bool</span> <span class="methodname">w32api_deftype</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$typename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$member1_type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$member1_name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$...</code></span> ]] )',
  'w32api_init_dtype' => '<span class="type">resource</span> <span class="methodname">w32api_init_dtype</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$typename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'w32api_invoke_function' => '<span class="type">mixed</span> <span class="methodname">w32api_invoke_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$funcname</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$argument</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'w32api_register_function' => '<span class="type">bool</span> <span class="methodname">w32api_register_function</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$library</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$return_type</code></span> )',
  'w32api_set_call_method' => '<span class="type">void</span> <span class="methodname">w32api_set_call_method</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$method</code></span> )',
  'wddx_add_vars' => '<span class="type">bool</span> <span class="methodname">wddx_add_vars</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$packet_id</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var_name</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'wddx_deserialize' => '<span class="type">mixed</span> <span class="methodname">wddx_deserialize</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$packet</code></span> )',
  'wddx_packet_end' => '<span class="type">string</span> <span class="methodname">wddx_packet_end</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$packet_id</code></span> )',
  'wddx_packet_start' => '<span class="type">resource</span> <span class="methodname">wddx_packet_start</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$comment</code></span> ] )',
  'wddx_serialize_value' => '<span class="type">string</span> <span class="methodname">wddx_serialize_value</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$comment</code></span> ] )',
  'wddx_serialize_vars' => '<span class="type">string</span> <span class="methodname">wddx_serialize_vars</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$var_name</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$...</code></span> ] )',
  'win32_continue_service' => '<span class="type">int</span> <span class="methodname">win32_continue_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_create_service' => '<span class="type">mixed</span> <span class="methodname">win32_create_service</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$details</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_delete_service' => '<span class="type">mixed</span> <span class="methodname">win32_delete_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_get_last_control_message' => '<span class="type">int</span> <span class="methodname">win32_get_last_control_message</span> ( <span class="methodparam">void</span> )',
  'win32_pause_service' => '<span class="type">int</span> <span class="methodname">win32_pause_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_ps_list_procs' => '<span class="type">array</span> <span class="methodname">win32_ps_list_procs</span> ( <span class="methodparam">void</span> )',
  'win32_ps_stat_mem' => '<span class="type">array</span> <span class="methodname">win32_ps_stat_mem</span> ( <span class="methodparam">void</span> )',
  'win32_ps_stat_proc' => '<span class="type">array</span> <span class="methodname">win32_ps_stat_proc</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$pid</code><span class="initializer">= 0</span></span> ] )',
  'win32_query_service_status' => '<span class="type">mixed</span> <span class="methodname">win32_query_service_status</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_set_service_status' => '<span class="type">bool</span> <span class="methodname">win32_set_service_status</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$status</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$checkpoint</code><span class="initializer">= 0</span></span> ] )',
  'win32_start_service_ctrl_dispatcher' => '<span class="type">mixed</span> <span class="methodname">win32_start_service_ctrl_dispatcher</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'win32_start_service' => '<span class="type">int</span> <span class="methodname">win32_start_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'win32_stop_service' => '<span class="type">int</span> <span class="methodname">win32_stop_service</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$servicename</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$machine</code></span> ] )',
  'wincache_fcache_fileinfo' => '<span class="type">array</span> <span class="methodname">wincache_fcache_fileinfo</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$summaryonly</code><span class="initializer">= false</span></span> ] )',
  'wincache_fcache_meminfo' => '<span class="type">array</span> <span class="methodname">wincache_fcache_meminfo</span> ( <span class="methodparam">void</span> )',
  'wincache_lock' => '<span class="type">bool</span> <span class="methodname">wincache_lock</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$isglobal</code><span class="initializer">= false</span></span> ] )',
  'wincache_ocache_fileinfo' => '<span class="type">array</span> <span class="methodname">wincache_ocache_fileinfo</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$summaryonly</code><span class="initializer">= false</span></span> ] )',
  'wincache_ocache_meminfo' => '<span class="type">array</span> <span class="methodname">wincache_ocache_meminfo</span> ( <span class="methodparam">void</span> )',
  'wincache_refresh_if_changed' => '<span class="type">bool</span> <span class="methodname">wincache_refresh_if_changed</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter">$files</code></span> ] )',
  'wincache_rplist_fileinfo' => '<span class="type">array</span> <span class="methodname">wincache_rplist_fileinfo</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$summaryonly</code><span class="initializer">= false</span></span> ] )',
  'wincache_rplist_meminfo' => '<span class="type">array</span> <span class="methodname">wincache_rplist_meminfo</span> ( <span class="methodparam">void</span> )',
  'wincache_scache_info' => '<span class="type">array</span> <span class="methodname">wincache_scache_info</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$summaryonly</code><span class="initializer">= false</span></span> ] )',
  'wincache_scache_meminfo' => '<span class="type">array</span> <span class="methodname">wincache_scache_meminfo</span> ( <span class="methodparam">void</span> )',
  'wincache_ucache_add' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_add</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ] ) <span class="type">bool</span> <span class="methodname">wincache_ucache_add</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$unused</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ]] )',
  'wincache_ucache_cas' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_cas</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$old_value</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$new_value</code></span> )',
  'wincache_ucache_clear' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_clear</span> ( <span class="methodparam">void</span> )',
  'wincache_ucache_dec' => '<span class="type">mixed</span> <span class="methodname">wincache_ucache_dec</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$dec_by</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ]] )',
  'wincache_ucache_delete' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_delete</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> )',
  'wincache_ucache_exists' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_exists</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'wincache_ucache_get' => '<span class="type">mixed</span> <span class="methodname">wincache_ucache_get</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ] )',
  'wincache_ucache_inc' => '<span class="type">mixed</span> <span class="methodname">wincache_ucache_inc</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$inc_by</code><span class="initializer">= 1</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter reference">&$success</code></span> ]] )',
  'wincache_ucache_info' => '<span class="type">array</span> <span class="methodname">wincache_ucache_info</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$summaryonly</code><span class="initializer">= false</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> ]] )',
  'wincache_ucache_meminfo' => '<span class="type">array</span> <span class="methodname">wincache_ucache_meminfo</span> ( <span class="methodparam">void</span> )',
  'wincache_ucache_set' => '<span class="type">bool</span> <span class="methodname">wincache_ucache_set</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$key</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ] ) <span class="type">bool</span> <span class="methodname">wincache_ucache_set</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$values</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$unused</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$ttl</code><span class="initializer">= 0</span></span> ]] )',
  'wincache_unlock' => '<span class="type">bool</span> <span class="methodname">wincache_unlock</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'wordwrap' => '<span class="type">string</span> <span class="methodname">wordwrap</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$width</code><span class="initializer">= 75</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$break</code><span class="initializer">= &quot;\n&quot;</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$cut</code><span class="initializer">= false</span></span> ]]] )',
  'xattr_get' => '<span class="type">string</span> <span class="methodname">xattr_get</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'xattr_list' => '<span class="type">array</span> <span class="methodname">xattr_list</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'xattr_remove' => '<span class="type">bool</span> <span class="methodname">xattr_remove</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'xattr_set' => '<span class="type">bool</span> <span class="methodname">xattr_set</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'xattr_supported' => '<span class="type">bool</span> <span class="methodname">xattr_supported</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> ] )',
  'xdiff_file_bdiff' => '<span class="type">bool</span> <span class="methodname">xdiff_file_bdiff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_file_bdiff_size' => '<span class="type">int</span> <span class="methodname">xdiff_file_bdiff_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> )',
  'xdiff_file_bpatch' => '<span class="type">bool</span> <span class="methodname">xdiff_file_bpatch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_file_diff_binary' => '<span class="type">bool</span> <span class="methodname">xdiff_file_diff_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_file_diff' => '<span class="type">bool</span> <span class="methodname">xdiff_file_diff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$context</code><span class="initializer">= 3</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$minimal</code><span class="initializer">= false</span></span> ]] )',
  'xdiff_file_merge3' => '<span class="type">mixed</span> <span class="methodname">xdiff_file_merge3</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file2</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_file_patch_binary' => '<span class="type">bool</span> <span class="methodname">xdiff_file_patch_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_file_patch' => '<span class="type">mixed</span> <span class="methodname">xdiff_file_patch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= DIFF_PATCH_NORMAL</span></span> ] )',
  'xdiff_file_rabdiff' => '<span class="type">bool</span> <span class="methodname">xdiff_file_rabdiff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_file</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$dest</code></span> )',
  'xdiff_string_bdiff' => '<span class="type">string</span> <span class="methodname">xdiff_string_bdiff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data</code></span> )',
  'xdiff_string_bdiff_size' => '<span class="type">int</span> <span class="methodname">xdiff_string_bdiff_size</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> )',
  'xdiff_string_bpatch' => '<span class="type">string</span> <span class="methodname">xdiff_string_bpatch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> )',
  'xdiff_string_diff_binary' => '<span class="type">string</span> <span class="methodname">xdiff_string_bdiff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data</code></span> )',
  'xdiff_string_diff' => '<span class="type">string</span> <span class="methodname">xdiff_string_diff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$context</code><span class="initializer">= 3</span></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$minimal</code><span class="initializer">= false</span></span> ]] )',
  'xdiff_string_merge3' => '<span class="type">mixed</span> <span class="methodname">xdiff_string_merge3</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data1</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data2</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error</code></span> ] )',
  'xdiff_string_patch_binary' => '<span class="type">string</span> <span class="methodname">xdiff_string_patch_binary</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> )',
  'xdiff_string_patch' => '<span class="type">string</span> <span class="methodname">xdiff_string_patch</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$str</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$patch</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$error</code></span> ]] )',
  'xdiff_string_rabdiff' => '<span class="type">string</span> <span class="methodname">xdiff_string_bdiff</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$old_data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$new_data</code></span> )',
  'xhprof_disable' => '<span class="type">array</span> <span class="methodname">xhprof_disable</span> ( <span class="methodparam">void</span> )',
  'xhprof_enable' => '<span class="type">void</span> <span class="methodname">xhprof_enable</span> ([ <span class="methodparam"><span class="type">int</span> <code class="parameter">$flags</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> ]] )',
  'xhprof_sample_disable' => '<span class="type">array</span> <span class="methodname">xhprof_sample_disable</span> ( <span class="methodparam">void</span> )',
  'xhprof_sample_enable' => '<span class="type">void</span> <span class="methodname">xhprof_sample_enable</span> ( <span class="methodparam">void</span> )',
  'xml_error_string' => '<span class="type">string</span> <span class="methodname">xml_error_string</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$code</code></span> )',
  'xml_get_current_byte_index' => '<span class="type">int</span> <span class="methodname">xml_get_current_byte_index</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> )',
  'xml_get_current_column_number' => '<span class="type">int</span> <span class="methodname">xml_get_current_column_number</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> )',
  'xml_get_current_line_number' => '<span class="type">int</span> <span class="methodname">xml_get_current_line_number</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> )',
  'xml_get_error_code' => '<span class="type">int</span> <span class="methodname">xml_get_error_code</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> )',
  'xml_parse' => '<span class="type">int</span> <span class="methodname">xml_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$is_final</code><span class="initializer">= false</span></span> ] )',
  'xml_parse_into_struct' => '<span class="type">int</span> <span class="methodname">xml_parse_into_struct</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$values</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$index</code></span> ] )',
  'xml_parser_create' => '<span class="type">resource</span> <span class="methodname">xml_parser_create</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> ] )',
  'xml_parser_create_ns' => '<span class="type">resource</span> <span class="methodname">xml_parser_create_ns</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$separator</code><span class="initializer">= &#039;:&#039;</span></span> ]] )',
  'xml_parser_free' => '<span class="type">bool</span> <span class="methodname">xml_parser_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> )',
  'xml_parser_get_option' => '<span class="type">mixed</span> <span class="methodname">xml_parser_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> )',
  'xml_parser_set_option' => '<span class="type">bool</span> <span class="methodname">xml_parser_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$option</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'xmlrpc_decode' => '<span class="type">mixed</span> <span class="methodname">xmlrpc_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$xml</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= &quot;iso-8859-1&quot;</span></span> ] )',
  'xmlrpc_decode_request' => '<span class="type">mixed</span> <span class="methodname">xmlrpc_decode_request</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$xml</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$method</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> ] )',
  'xmlrpc_encode' => '<span class="type">string</span> <span class="methodname">xmlrpc_encode</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'xmlrpc_encode_request' => '<span class="type">string</span> <span class="methodname">xmlrpc_encode_request</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$method</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$params</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$output_options</code></span> ] )',
  'xmlrpc_get_type' => '<span class="type">string</span> <span class="methodname">xmlrpc_get_type</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$value</code></span> )',
  'xmlrpc_is_fault' => '<span class="type">bool</span> <span class="methodname">xmlrpc_is_fault</span> ( <span class="methodparam"><span class="type">array</span> <code class="parameter">$arg</code></span> )',
  'xmlrpc_parse_method_descriptions' => '<span class="type">array</span> <span class="methodname">xmlrpc_parse_method_descriptions</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$xml</code></span> )',
  'xmlrpc_server_add_introspection_data' => '<span class="type">int</span> <span class="methodname">xmlrpc_server_add_introspection_data</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$desc</code></span> )',
  'xmlrpc_server_call_method' => '<span class="type">string</span> <span class="methodname">xmlrpc_server_call_method</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$xml</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$user_data</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$output_options</code></span> ] )',
  'xmlrpc_server_create' => '<span class="type">resource</span> <span class="methodname">xmlrpc_server_create</span> ( <span class="methodparam">void</span> )',
  'xmlrpc_server_destroy' => '<span class="type">int</span> <span class="methodname">xmlrpc_server_destroy</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server</code></span> )',
  'xmlrpc_server_register_introspection_callback' => '<span class="type">bool</span> <span class="methodname">xmlrpc_server_register_introspection_callback</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function</code></span> )',
  'xmlrpc_server_register_method' => '<span class="type">bool</span> <span class="methodname">xmlrpc_server_register_method</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$server</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$method_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$function</code></span> )',
  'xmlrpc_set_type' => '<span class="type">bool</span> <span class="methodname">xmlrpc_set_type</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter reference">&$value</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> )',
  'xml_set_character_data_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_character_data_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'xml_set_default_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_default_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'xml_set_element_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_element_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$start_element_handler</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$end_element_handler</code></span> ) <span class="methodname"><span class="replaceable">start_element_handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$attribs</code></span> ) <span class="methodname"><span class="replaceable">end_element_handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'xml_set_end_namespace_decl_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_end_namespace_decl_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> )',
  'xml_set_external_entity_ref_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_external_entity_ref_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$open_entity_names</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$system_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$public_id</code></span> )',
  'xml_set_notation_decl_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_notation_decl_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$notation_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$system_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$public_id</code></span> )',
  'xml_set_object' => '<span class="type">bool</span> <span class="methodname">xml_set_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">object</span> <code class="parameter reference">&$object</code></span> )',
  'xml_set_processing_instruction_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_processing_instruction_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> )',
  'xml_set_start_namespace_decl_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_start_namespace_decl_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'xml_set_unparsed_entity_decl_handler' => '<span class="type">bool</span> <span class="methodname">xml_set_unparsed_entity_decl_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">callable</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$parser</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$entity_name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$base</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$system_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$public_id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$notation_name</code></span> )',
  'xmlwriter_end_attribute' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endAttribute</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_attribute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_cdata' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endCData</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_cdata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_comment' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endComment</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_comment</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_document' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endDocument</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_document</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_dtd_attlist' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endDTDAttlist</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_dtd_attlist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_dtd_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endDTDElement</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_dtd_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_dtd_entity' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endDTDEntity</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_dtd_entity</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_dtd' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endDTD</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_dtd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endElement</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_end_pi' => '<span class="type">bool</span> <span class="methodname">XMLWriter::endPI</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_end_pi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_flush' => '<span class="type">mixed</span> <span class="methodname">XMLWriter::flush</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$empty</code><span class="initializer">= true</span></span> ] ) <span class="type">mixed</span> <span class="methodname">xmlwriter_flush</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$empty</code><span class="initializer">= true</span></span> ] )',
  'xmlwriter_full_end_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::fullEndElement</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_full_end_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_open_memory' => '<span class="type">bool</span> <span class="methodname">XMLWriter::openMemory</span> ( <span class="methodparam">void</span> ) <span class="type">resource</span> <span class="methodname">xmlwriter_open_memory</span> ( <span class="methodparam">void</span> )',
  'xmlwriter_open_uri' => '<span class="type">bool</span> <span class="methodname">XMLWriter::openURI</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> ) <span class="type">resource</span> <span class="methodname">xmlwriter_open_uri</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'xmlwriter_output_memory' => '<span class="type">string</span> <span class="methodname">XMLWriter::outputMemory</span> ([ <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flush</code><span class="initializer">= true</span></span> ] ) <span class="type">string</span> <span class="methodname">xmlwriter_output_memory</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> [, <span class="methodparam"><span class="type">bool</span> <code class="parameter">$flush</code><span class="initializer">= true</span></span> ] )',
  'xmlwriter_set_indent' => '<span class="type">bool</span> <span class="methodname">XMLWriter::setIndent</span> ( <span class="methodparam"><span class="type">bool</span> <code class="parameter">$indent</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_set_indent</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$indent</code></span> )',
  'xmlwriter_set_indent_string' => '<span class="type">bool</span> <span class="methodname">XMLWriter::setIndentString</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$indentString</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_set_indent_string</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$indentString</code></span> )',
  'xmlwriter_start_attribute' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startAttribute</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_attribute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'xmlwriter_start_attribute_ns' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startAttributeNS</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_attribute_ns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'xmlwriter_start_cdata' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startCData</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_cdata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_start_comment' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startComment</span> ( <span class="methodparam">void</span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_comment</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> )',
  'xmlwriter_start_document' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startDocument</span> ([ <span class="methodparam"><span class="type">string</span> <code class="parameter">$version</code><span class="initializer">= 1.0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$standalone</code></span> ]]] ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_document</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$version</code><span class="initializer">= 1.0</span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code><span class="initializer">= <strong><code>NULL</code></strong></span></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$standalone</code></span> ]]] )',
  'xmlwriter_start_dtd_attlist' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startDTDAttlist</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_dtd_attlist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'xmlwriter_start_dtd_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startDTDElement</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifiedName</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_dtd_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifiedName</code></span> )',
  'xmlwriter_start_dtd_entity' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startDTDEntity</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$isparam</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_dtd_entity</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$isparam</code></span> )',
  'xmlwriter_start_dtd' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startDTD</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifiedName</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$publicId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$systemId</code></span> ]] ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_dtd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$qualifiedName</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$publicId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$systemId</code></span> ]] )',
  'xmlwriter_start_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startElement</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'xmlwriter_start_element_ns' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startElementNS</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_element_ns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'xmlwriter_start_pi' => '<span class="type">bool</span> <span class="methodname">XMLWriter::startPI</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_start_pi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> )',
  'xmlwriter_text' => '<span class="type">bool</span> <span class="methodname">XMLWriter::text</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_text</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_attribute' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeAttribute</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_attribute</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> )',
  'xmlwriter_write_attribute_ns' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeAttributeNS</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_attribute_ns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_cdata' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeCData</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_cdata</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_comment' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeComment</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_comment</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_dtd_attlist' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeDTDAttlist</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_dtd_attlist</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_dtd_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeDTDElement</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_dtd_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_dtd_entity' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeDTDEntity</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$pe</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pubid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sysid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ndataid</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_dtd_entity</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> , <span class="methodparam"><span class="type">bool</span> <code class="parameter">$pe</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$pubid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$sysid</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$ndataid</code></span> )',
  'xmlwriter_write_dtd' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeDTD</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$publicId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$systemId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$subset</code></span> ]]] ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_dtd</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$publicId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$systemId</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$subset</code></span> ]]] )',
  'xmlwriter_write_element' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeElement</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ] ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ] )',
  'xmlwriter_write_element_ns' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeElementNS</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ] ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_element_ns</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ] )',
  'xmlwriter_write_pi' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writePI</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_pi</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xmlwriter_write_raw' => '<span class="type">bool</span> <span class="methodname">XMLWriter::writeRaw</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> ) <span class="type">bool</span> <span class="methodname">xmlwriter_write_raw</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xmlwriter</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$content</code></span> )',
  'xslt_backend_info' => '<span class="type">string</span> <span class="methodname">xslt_backend_info</span> ( <span class="methodparam">void</span> )',
  'xslt_backend_name' => '<span class="type">string</span> <span class="methodname">xslt_backend_name</span> ( <span class="methodparam">void</span> )',
  'xslt_backend_version' => '<span class="type">string</span> <span class="methodname">xslt_backend_version</span> ( <span class="methodparam">void</span> )',
  'xslt_create' => '<span class="type">resource</span> <span class="methodname">xslt_create</span> ( <span class="methodparam">void</span> )',
  'xslt_errno' => '<span class="type">int</span> <span class="methodname">xslt_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> )',
  'xslt_error' => '<span class="type">string</span> <span class="methodname">xslt_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> )',
  'xslt_free' => '<span class="type">void</span> <span class="methodname">xslt_free</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> )',
  'xslt_getopt' => '<span class="type">int</span> <span class="methodname">xslt_getopt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> )',
  'xslt_process' => '<span class="type">mixed</span> <span class="methodname">xslt_process</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$xmlcontainer</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$xslcontainer</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$resultcontainer</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$arguments</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$parameters</code></span> ]]] )',
  'xslt_set_base' => '<span class="type">void</span> <span class="methodname">xslt_set_base</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> )',
  'xslt_set_encoding' => '<span class="type">void</span> <span class="methodname">xslt_set_encoding</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> )',
  'xslt_set_error_handler' => '<span class="type">void</span> <span class="methodname">xslt_set_error_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$handler</code></span> ) <span class="methodname"><span class="replaceable">error_handler</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_level</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$error_code</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$messages</code></span> )',
  'xslt_set_log' => '<span class="type">void</span> <span class="methodname">xslt_set_log</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$log</code></span> ] )',
  'xslt_set_object' => '<span class="type">bool</span> <span class="methodname">xslt_set_object</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">object</span> <code class="parameter reference">&$obj</code></span> )',
  'xslt_setopt' => '<span class="type">mixed</span> <span class="methodname">xslt_setopt</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$newmask</code></span> )',
  'xslt_set_sax_handler' => '<span class="type">void</span> <span class="methodname">xslt_set_sax_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$handlers</code></span> )',
  'xslt_set_sax_handlers' => '<span class="type">void</span> <span class="methodname">xslt_set_sax_handlers</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$handlers</code></span> ) <span class="methodname"><span class="replaceable">start_doc</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> ) <span class="methodname"><span class="replaceable">end_doc</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> ) <span class="methodname"><span class="replaceable">start_element</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$attributes</code></span> ) <span class="methodname"><span class="replaceable">end_element</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> ) <span class="methodname"><span class="replaceable">start_namespace</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$uri</code></span> ) <span class="methodname"><span class="replaceable">end_namespace</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$prefix</code></span> ) <span class="methodname"><span class="replaceable">comment</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> ) <span class="methodname"><span class="replaceable">pi</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$target</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> ) <span class="methodname"><span class="replaceable">characters</span></span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$processor</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$contents</code></span> )',
  'xslt_set_scheme_handler' => '<span class="type">void</span> <span class="methodname">xslt_set_scheme_handler</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$handlers</code></span> )',
  'xslt_set_scheme_handlers' => '<span class="type">void</span> <span class="methodname">xslt_set_scheme_handlers</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$xh</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$handlers</code></span> )',
  'yaml_emit_file' => '<span class="type">bool</span> <span class="methodname">yaml_emit_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> , <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$encoding</code><span class="initializer">= YAML_ANY_ENCODING</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$linebreak</code><span class="initializer">= YAML_ANY_BREAK</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'yaml_emit' => '<span class="type">string</span> <span class="methodname">yaml_emit</span> ( <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$encoding</code><span class="initializer">= YAML_ANY_ENCODING</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$linebreak</code><span class="initializer">= YAML_ANY_BREAK</span></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'yaml_parse_file' => '<span class="type">mixed</span> <span class="methodname">yaml_parse_file</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$ndocs</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'yaml_parse' => '<span class="type">mixed</span> <span class="methodname">yaml_parse</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$input</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$ndocs</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'yaml_parse_url' => '<span class="type">mixed</span> <span class="methodname">yaml_parse_url</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$url</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code><span class="initializer">= 0</span></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter reference">&$ndocs</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$callbacks</code></span> ]]] )',
  'yaz_addinfo' => '<span class="type">string</span> <span class="methodname">yaz_addinfo</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_ccl_conf' => '<span class="type">void</span> <span class="methodname">yaz_ccl_conf</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$config</code></span> )',
  'yaz_ccl_parse' => '<span class="type">bool</span> <span class="methodname">yaz_ccl_parse</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> )',
  'yaz_close' => '<span class="type">bool</span> <span class="methodname">yaz_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_connect' => '<span class="type">mixed</span> <span class="methodname">yaz_connect</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$zurl</code></span> [, <span class="methodparam"><span class="type">mixed</span> <code class="parameter">$options</code></span> ] )',
  'yaz_database' => '<span class="type">bool</span> <span class="methodname">yaz_database</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$databases</code></span> )',
  'yaz_element' => '<span class="type">bool</span> <span class="methodname">yaz_element</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$elementset</code></span> )',
  'yaz_errno' => '<span class="type">int</span> <span class="methodname">yaz_errno</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_error' => '<span class="type">string</span> <span class="methodname">yaz_error</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_es' => '<span class="type">void</span> <span class="methodname">yaz_es</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'yaz_es_result' => '<span class="type">array</span> <span class="methodname">yaz_es_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_get_option' => '<span class="type">string</span> <span class="methodname">yaz_get_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> )',
  'yaz_hits' => '<span class="type">int</span> <span class="methodname">yaz_hits</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$searchresult</code></span> ] )',
  'yaz_itemorder' => '<span class="type">void</span> <span class="methodname">yaz_itemorder</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$args</code></span> )',
  'yaz_present' => '<span class="type">bool</span> <span class="methodname">yaz_present</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> )',
  'yaz_range' => '<span class="type">void</span> <span class="methodname">yaz_range</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$start</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$number</code></span> )',
  'yaz_record' => '<span class="type">string</span> <span class="methodname">yaz_record</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">int</span> <code class="parameter">$pos</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> )',
  'yaz_scan' => '<span class="type">void</span> <span class="methodname">yaz_scan</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$startterm</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter">$flags</code></span> ] )',
  'yaz_scan_result' => '<span class="type">array</span> <span class="methodname">yaz_scan_result</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> [, <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$result</code></span> ] )',
  'yaz_schema' => '<span class="type">void</span> <span class="methodname">yaz_schema</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$schema</code></span> )',
  'yaz_search' => '<span class="type">bool</span> <span class="methodname">yaz_search</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$type</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$query</code></span> )',
  'yaz_set_option' => '<span class="type">void</span> <span class="methodname">yaz_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$name</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$value</code></span> ) <span class="type">void</span> <span class="methodname">yaz_set_option</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">array</span> <code class="parameter">$options</code></span> )',
  'yaz_sort' => '<span class="type">void</span> <span class="methodname">yaz_sort</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$criteria</code></span> )',
  'yaz_syntax' => '<span class="type">void</span> <span class="methodname">yaz_syntax</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$id</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$syntax</code></span> )',
  'yaz_wait' => '<span class="type">mixed</span> <span class="methodname">yaz_wait</span> ([ <span class="methodparam"><span class="type">array</span> <code class="parameter reference">&$options</code></span> ] )',
  'yp_all' => '<span class="type">void</span> <span class="methodname">yp_all</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$callback</code></span> )',
  'yp_cat' => '<span class="type">array</span> <span class="methodname">yp_cat</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> )',
  'yp_errno' => '<span class="type">int</span> <span class="methodname">yp_errno</span> ( <span class="methodparam">void</span> )',
  'yp_err_string' => '<span class="type">string</span> <span class="methodname">yp_err_string</span> ( <span class="methodparam"><span class="type">int</span> <code class="parameter">$errorcode</code></span> )',
  'yp_first' => '<span class="type">array</span> <span class="methodname">yp_first</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> )',
  'yp_get_default_domain' => '<span class="type">string</span> <span class="methodname">yp_get_default_domain</span> ( <span class="methodparam">void</span> )',
  'yp_master' => '<span class="type">string</span> <span class="methodname">yp_master</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> )',
  'yp_match' => '<span class="type">string</span> <span class="methodname">yp_match</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'yp_next' => '<span class="type">array</span> <span class="methodname">yp_next</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$key</code></span> )',
  'yp_order' => '<span class="type">int</span> <span class="methodname">yp_order</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$domain</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$map</code></span> )',
  'zend_logo_guid' => '<span class="type">string</span> <span class="methodname">zend_logo_guid</span> ( <span class="methodparam">void</span> )',
  'zend_thread_id' => '<span class="type">int</span> <span class="methodname">zend_thread_id</span> ( <span class="methodparam">void</span> )',
  'zend_version' => '<span class="type">string</span> <span class="methodname">zend_version</span> ( <span class="methodparam">void</span> )',
  'zip_close' => '<span class="type">void</span> <span class="methodname">zip_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip</code></span> )',
  'zip_entry_close' => '<span class="type">bool</span> <span class="methodname">zip_entry_close</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> )',
  'zip_entry_compressedsize' => '<span class="type">int</span> <span class="methodname">zip_entry_compressedsize</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> )',
  'zip_entry_compressionmethod' => '<span class="type">string</span> <span class="methodname">zip_entry_compressionmethod</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> )',
  'zip_entry_filesize' => '<span class="type">int</span> <span class="methodname">zip_entry_filesize</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> )',
  'zip_entry_name' => '<span class="type">string</span> <span class="methodname">zip_entry_name</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> )',
  'zip_entry_open' => '<span class="type">bool</span> <span class="methodname">zip_entry_open</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip</code></span> , <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$mode</code></span> ] )',
  'zip_entry_read' => '<span class="type">string</span> <span class="methodname">zip_entry_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip_entry</code></span> [, <span class="methodparam"><span class="type">int</span> <code class="parameter">$length</code><span class="initializer">= 1024</span></span> ] )',
  'zip_open' => '<span class="type">resource</span> <span class="methodname">zip_open</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$filename</code></span> )',
  'zip_read' => '<span class="type">resource</span> <span class="methodname">zip_read</span> ( <span class="methodparam"><span class="type">resource</span> <code class="parameter">$zip</code></span> )',
  'zlib_decode' => '<span class="type">string</span> <span class="methodname">zlib_decode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$max_decoded_len</code></span> ] )',
  'zlib_encode' => '<span class="type">string</span> <span class="methodname">zlib_encode</span> ( <span class="methodparam"><span class="type">string</span> <code class="parameter">$data</code></span> , <span class="methodparam"><span class="type">string</span> <code class="parameter">$encoding</code></span> [, <span class="methodparam"><span class="type">string</span> <code class="parameter">$level</code><span class="initializer">= -1</span></span> ] )',
  'zlib_get_coding_type' => '<span class="type">string</span> <span class="methodname">zlib_get_coding_type</span> ( <span class="methodparam">void</span> )',
);
